{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.6"
    },
    "colab": {
      "name": "Santander_Customer_Prediction_Group_.ipynb",
      "provenance": [],
      "collapsed_sections": [
        "pnZjbPV04M8o",
        "xlQi2raX4M9a",
        "dwAxm6ST4M9c",
        "0ym9DXNBojkC"
      ],
      "toc_visible": true
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "HjnWk0B_4M7-",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 88
        },
        "outputId": "6e1baf76-8d7b-4f51-92b9-cad0f0e0a7d4"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.preprocessing import MinMaxScaler, StandardScaler, PowerTransformer\n",
        "import random\n",
        "import matplotlib.pyplot as plt\n",
        "import lightgbm as lgb\n",
        "import seaborn as sns\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.metrics import f1_score\n",
        "from sklearn.metrics import cohen_kappa_score\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.model_selection import KFold\n",
        "from sklearn.model_selection import RepeatedKFold\n",
        "from sklearn.svm import SVC\n",
        "from lightgbm import LGBMClassifier\n",
        "from sklearn.naive_bayes import GaussianNB\n",
        "from xgboost import XGBClassifier\n",
        "import plotly.figure_factory as ff\n",
        "import plotly.offline as py #visualization\n",
        "from sklearn.model_selection import KFold\n",
        "from sklearn.metrics import accuracy_score\n",
        "from sklearn.metrics import roc_auc_score\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import f1_score\n",
        "from sklearn.metrics import matthews_corrcoef\n",
        "from sklearn.model_selection import cross_val_score\n",
        "from sklearn.linear_model import RidgeCV, LassoCV, Ridge, Lasso, ElasticNet\n",
        "from sklearn.feature_selection import SelectKBest, chi2, f_classif, mutual_info_classif\n",
        "import keras\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense,Activation, Dropout\n",
        "import gc"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n",
            "  import pandas.util.testing as tm\n",
            "Using TensorFlow backend.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "A4Tv4XmEs8fm",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "de62e8e5-6cc2-4a78-b453-8ed4399c2d9e"
      },
      "source": [
        "!unzip /content/drive/My\\ Drive/santander-customer-transaction-prediction.zip"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Archive:  /content/drive/My Drive/santander-customer-transaction-prediction.zip\n",
            "  inflating: sample_submission.csv   \n",
            "  inflating: test.csv                \n",
            "  inflating: train.csv               \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9TLJfcNk4M8C",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "train = pd.read_csv('train.csv')\n",
        "test = pd.read_csv('test.csv')\n",
        "sub = pd.read_csv('sample_submission.csv')\n",
        "df = pd.concat([train,test])\n",
        "df = df.reset_index()\n",
        "del df['index']"
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SUqnBRppgt9_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "train_copy = train.copy()\n",
        "test_copy = test.copy()\n",
        "train_y = train_copy['target'].values\n",
        "train_X_column_name = train_copy.drop(['target', 'ID_code'], axis=1).columns\n",
        "train_X = train_copy.drop(['target', 'ID_code'], axis=1).values\n",
        "test_X = test_copy.drop(['ID_code'], axis=1).values\n",
        "train_X_copy = train_X.copy()\n",
        "test_X_copy = test_X.copy()"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dGIcYPSmYIg_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 253
        },
        "outputId": "b4d74477-5176-475d-a71e-2fb3c296483a"
      },
      "source": [
        "train.head()"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID_code</th>\n",
              "      <th>target</th>\n",
              "      <th>var_0</th>\n",
              "      <th>var_1</th>\n",
              "      <th>var_2</th>\n",
              "      <th>var_3</th>\n",
              "      <th>var_4</th>\n",
              "      <th>var_5</th>\n",
              "      <th>var_6</th>\n",
              "      <th>var_7</th>\n",
              "      <th>var_8</th>\n",
              "      <th>var_9</th>\n",
              "      <th>var_10</th>\n",
              "      <th>var_11</th>\n",
              "      <th>var_12</th>\n",
              "      <th>var_13</th>\n",
              "      <th>var_14</th>\n",
              "      <th>var_15</th>\n",
              "      <th>var_16</th>\n",
              "      <th>var_17</th>\n",
              "      <th>var_18</th>\n",
              "      <th>var_19</th>\n",
              "      <th>var_20</th>\n",
              "      <th>var_21</th>\n",
              "      <th>var_22</th>\n",
              "      <th>var_23</th>\n",
              "      <th>var_24</th>\n",
              "      <th>var_25</th>\n",
              "      <th>var_26</th>\n",
              "      <th>var_27</th>\n",
              "      <th>var_28</th>\n",
              "      <th>var_29</th>\n",
              "      <th>var_30</th>\n",
              "      <th>var_31</th>\n",
              "      <th>var_32</th>\n",
              "      <th>var_33</th>\n",
              "      <th>var_34</th>\n",
              "      <th>var_35</th>\n",
              "      <th>var_36</th>\n",
              "      <th>var_37</th>\n",
              "      <th>...</th>\n",
              "      <th>var_160</th>\n",
              "      <th>var_161</th>\n",
              "      <th>var_162</th>\n",
              "      <th>var_163</th>\n",
              "      <th>var_164</th>\n",
              "      <th>var_165</th>\n",
              "      <th>var_166</th>\n",
              "      <th>var_167</th>\n",
              "      <th>var_168</th>\n",
              "      <th>var_169</th>\n",
              "      <th>var_170</th>\n",
              "      <th>var_171</th>\n",
              "      <th>var_172</th>\n",
              "      <th>var_173</th>\n",
              "      <th>var_174</th>\n",
              "      <th>var_175</th>\n",
              "      <th>var_176</th>\n",
              "      <th>var_177</th>\n",
              "      <th>var_178</th>\n",
              "      <th>var_179</th>\n",
              "      <th>var_180</th>\n",
              "      <th>var_181</th>\n",
              "      <th>var_182</th>\n",
              "      <th>var_183</th>\n",
              "      <th>var_184</th>\n",
              "      <th>var_185</th>\n",
              "      <th>var_186</th>\n",
              "      <th>var_187</th>\n",
              "      <th>var_188</th>\n",
              "      <th>var_189</th>\n",
              "      <th>var_190</th>\n",
              "      <th>var_191</th>\n",
              "      <th>var_192</th>\n",
              "      <th>var_193</th>\n",
              "      <th>var_194</th>\n",
              "      <th>var_195</th>\n",
              "      <th>var_196</th>\n",
              "      <th>var_197</th>\n",
              "      <th>var_198</th>\n",
              "      <th>var_199</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>train_0</td>\n",
              "      <td>0</td>\n",
              "      <td>8.9255</td>\n",
              "      <td>-6.7863</td>\n",
              "      <td>11.9081</td>\n",
              "      <td>5.0930</td>\n",
              "      <td>11.4607</td>\n",
              "      <td>-9.2834</td>\n",
              "      <td>5.1187</td>\n",
              "      <td>18.6266</td>\n",
              "      <td>-4.9200</td>\n",
              "      <td>5.7470</td>\n",
              "      <td>2.9252</td>\n",
              "      <td>3.1821</td>\n",
              "      <td>14.0137</td>\n",
              "      <td>0.5745</td>\n",
              "      <td>8.7989</td>\n",
              "      <td>14.5691</td>\n",
              "      <td>5.7487</td>\n",
              "      <td>-7.2393</td>\n",
              "      <td>4.2840</td>\n",
              "      <td>30.7133</td>\n",
              "      <td>10.5350</td>\n",
              "      <td>16.2191</td>\n",
              "      <td>2.5791</td>\n",
              "      <td>2.4716</td>\n",
              "      <td>14.3831</td>\n",
              "      <td>13.4325</td>\n",
              "      <td>-5.1488</td>\n",
              "      <td>-0.4073</td>\n",
              "      <td>4.9306</td>\n",
              "      <td>5.9965</td>\n",
              "      <td>-0.3085</td>\n",
              "      <td>12.9041</td>\n",
              "      <td>-3.8766</td>\n",
              "      <td>16.8911</td>\n",
              "      <td>11.1920</td>\n",
              "      <td>10.5785</td>\n",
              "      <td>0.6764</td>\n",
              "      <td>7.8871</td>\n",
              "      <td>...</td>\n",
              "      <td>15.4576</td>\n",
              "      <td>5.3133</td>\n",
              "      <td>3.6159</td>\n",
              "      <td>5.0384</td>\n",
              "      <td>6.6760</td>\n",
              "      <td>12.6644</td>\n",
              "      <td>2.7004</td>\n",
              "      <td>-0.6975</td>\n",
              "      <td>9.5981</td>\n",
              "      <td>5.4879</td>\n",
              "      <td>-4.7645</td>\n",
              "      <td>-8.4254</td>\n",
              "      <td>20.8773</td>\n",
              "      <td>3.1531</td>\n",
              "      <td>18.5618</td>\n",
              "      <td>7.7423</td>\n",
              "      <td>-10.1245</td>\n",
              "      <td>13.7241</td>\n",
              "      <td>-3.5189</td>\n",
              "      <td>1.7202</td>\n",
              "      <td>-8.4051</td>\n",
              "      <td>9.0164</td>\n",
              "      <td>3.0657</td>\n",
              "      <td>14.3691</td>\n",
              "      <td>25.8398</td>\n",
              "      <td>5.8764</td>\n",
              "      <td>11.8411</td>\n",
              "      <td>-19.7159</td>\n",
              "      <td>17.5743</td>\n",
              "      <td>0.5857</td>\n",
              "      <td>4.4354</td>\n",
              "      <td>3.9642</td>\n",
              "      <td>3.1364</td>\n",
              "      <td>1.6910</td>\n",
              "      <td>18.5227</td>\n",
              "      <td>-2.3978</td>\n",
              "      <td>7.8784</td>\n",
              "      <td>8.5635</td>\n",
              "      <td>12.7803</td>\n",
              "      <td>-1.0914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>train_1</td>\n",
              "      <td>0</td>\n",
              "      <td>11.5006</td>\n",
              "      <td>-4.1473</td>\n",
              "      <td>13.8588</td>\n",
              "      <td>5.3890</td>\n",
              "      <td>12.3622</td>\n",
              "      <td>7.0433</td>\n",
              "      <td>5.6208</td>\n",
              "      <td>16.5338</td>\n",
              "      <td>3.1468</td>\n",
              "      <td>8.0851</td>\n",
              "      <td>-0.4032</td>\n",
              "      <td>8.0585</td>\n",
              "      <td>14.0239</td>\n",
              "      <td>8.4135</td>\n",
              "      <td>5.4345</td>\n",
              "      <td>13.7003</td>\n",
              "      <td>13.8275</td>\n",
              "      <td>-15.5849</td>\n",
              "      <td>7.8000</td>\n",
              "      <td>28.5708</td>\n",
              "      <td>3.4287</td>\n",
              "      <td>2.7407</td>\n",
              "      <td>8.5524</td>\n",
              "      <td>3.3716</td>\n",
              "      <td>6.9779</td>\n",
              "      <td>13.8910</td>\n",
              "      <td>-11.7684</td>\n",
              "      <td>-2.5586</td>\n",
              "      <td>5.0464</td>\n",
              "      <td>0.5481</td>\n",
              "      <td>-9.2987</td>\n",
              "      <td>7.8755</td>\n",
              "      <td>1.2859</td>\n",
              "      <td>19.3710</td>\n",
              "      <td>11.3702</td>\n",
              "      <td>0.7399</td>\n",
              "      <td>2.7995</td>\n",
              "      <td>5.8434</td>\n",
              "      <td>...</td>\n",
              "      <td>29.4846</td>\n",
              "      <td>5.8683</td>\n",
              "      <td>3.8208</td>\n",
              "      <td>15.8348</td>\n",
              "      <td>-5.0121</td>\n",
              "      <td>15.1345</td>\n",
              "      <td>3.2003</td>\n",
              "      <td>9.3192</td>\n",
              "      <td>3.8821</td>\n",
              "      <td>5.7999</td>\n",
              "      <td>5.5378</td>\n",
              "      <td>5.0988</td>\n",
              "      <td>22.0330</td>\n",
              "      <td>5.5134</td>\n",
              "      <td>30.2645</td>\n",
              "      <td>10.4968</td>\n",
              "      <td>-7.2352</td>\n",
              "      <td>16.5721</td>\n",
              "      <td>-7.3477</td>\n",
              "      <td>11.0752</td>\n",
              "      <td>-5.5937</td>\n",
              "      <td>9.4878</td>\n",
              "      <td>-14.9100</td>\n",
              "      <td>9.4245</td>\n",
              "      <td>22.5441</td>\n",
              "      <td>-4.8622</td>\n",
              "      <td>7.6543</td>\n",
              "      <td>-15.9319</td>\n",
              "      <td>13.3175</td>\n",
              "      <td>-0.3566</td>\n",
              "      <td>7.6421</td>\n",
              "      <td>7.7214</td>\n",
              "      <td>2.5837</td>\n",
              "      <td>10.9516</td>\n",
              "      <td>15.4305</td>\n",
              "      <td>2.0339</td>\n",
              "      <td>8.1267</td>\n",
              "      <td>8.7889</td>\n",
              "      <td>18.3560</td>\n",
              "      <td>1.9518</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>train_2</td>\n",
              "      <td>0</td>\n",
              "      <td>8.6093</td>\n",
              "      <td>-2.7457</td>\n",
              "      <td>12.0805</td>\n",
              "      <td>7.8928</td>\n",
              "      <td>10.5825</td>\n",
              "      <td>-9.0837</td>\n",
              "      <td>6.9427</td>\n",
              "      <td>14.6155</td>\n",
              "      <td>-4.9193</td>\n",
              "      <td>5.9525</td>\n",
              "      <td>-0.3249</td>\n",
              "      <td>-11.2648</td>\n",
              "      <td>14.1929</td>\n",
              "      <td>7.3124</td>\n",
              "      <td>7.5244</td>\n",
              "      <td>14.6472</td>\n",
              "      <td>7.6782</td>\n",
              "      <td>-1.7395</td>\n",
              "      <td>4.7011</td>\n",
              "      <td>20.4775</td>\n",
              "      <td>17.7559</td>\n",
              "      <td>18.1377</td>\n",
              "      <td>1.2145</td>\n",
              "      <td>3.5137</td>\n",
              "      <td>5.6777</td>\n",
              "      <td>13.2177</td>\n",
              "      <td>-7.9940</td>\n",
              "      <td>-2.9029</td>\n",
              "      <td>5.8463</td>\n",
              "      <td>6.1439</td>\n",
              "      <td>-11.1025</td>\n",
              "      <td>12.4858</td>\n",
              "      <td>-2.2871</td>\n",
              "      <td>19.0422</td>\n",
              "      <td>11.0449</td>\n",
              "      <td>4.1087</td>\n",
              "      <td>4.6974</td>\n",
              "      <td>6.9346</td>\n",
              "      <td>...</td>\n",
              "      <td>13.2070</td>\n",
              "      <td>5.8442</td>\n",
              "      <td>4.7086</td>\n",
              "      <td>5.7141</td>\n",
              "      <td>-1.0410</td>\n",
              "      <td>20.5092</td>\n",
              "      <td>3.2790</td>\n",
              "      <td>-5.5952</td>\n",
              "      <td>7.3176</td>\n",
              "      <td>5.7690</td>\n",
              "      <td>-7.0927</td>\n",
              "      <td>-3.9116</td>\n",
              "      <td>7.2569</td>\n",
              "      <td>-5.8234</td>\n",
              "      <td>25.6820</td>\n",
              "      <td>10.9202</td>\n",
              "      <td>-0.3104</td>\n",
              "      <td>8.8438</td>\n",
              "      <td>-9.7009</td>\n",
              "      <td>2.4013</td>\n",
              "      <td>-4.2935</td>\n",
              "      <td>9.3908</td>\n",
              "      <td>-13.2648</td>\n",
              "      <td>3.1545</td>\n",
              "      <td>23.0866</td>\n",
              "      <td>-5.3000</td>\n",
              "      <td>5.3745</td>\n",
              "      <td>-6.2660</td>\n",
              "      <td>10.1934</td>\n",
              "      <td>-0.8417</td>\n",
              "      <td>2.9057</td>\n",
              "      <td>9.7905</td>\n",
              "      <td>1.6704</td>\n",
              "      <td>1.6858</td>\n",
              "      <td>21.6042</td>\n",
              "      <td>3.1417</td>\n",
              "      <td>-6.5213</td>\n",
              "      <td>8.2675</td>\n",
              "      <td>14.7222</td>\n",
              "      <td>0.3965</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>train_3</td>\n",
              "      <td>0</td>\n",
              "      <td>11.0604</td>\n",
              "      <td>-2.1518</td>\n",
              "      <td>8.9522</td>\n",
              "      <td>7.1957</td>\n",
              "      <td>12.5846</td>\n",
              "      <td>-1.8361</td>\n",
              "      <td>5.8428</td>\n",
              "      <td>14.9250</td>\n",
              "      <td>-5.8609</td>\n",
              "      <td>8.2450</td>\n",
              "      <td>2.3061</td>\n",
              "      <td>2.8102</td>\n",
              "      <td>13.8463</td>\n",
              "      <td>11.9704</td>\n",
              "      <td>6.4569</td>\n",
              "      <td>14.8372</td>\n",
              "      <td>10.7430</td>\n",
              "      <td>-0.4299</td>\n",
              "      <td>15.9426</td>\n",
              "      <td>13.7257</td>\n",
              "      <td>20.3010</td>\n",
              "      <td>12.5579</td>\n",
              "      <td>6.8202</td>\n",
              "      <td>2.7229</td>\n",
              "      <td>12.1354</td>\n",
              "      <td>13.7367</td>\n",
              "      <td>0.8135</td>\n",
              "      <td>-0.9059</td>\n",
              "      <td>5.9070</td>\n",
              "      <td>2.8407</td>\n",
              "      <td>-15.2398</td>\n",
              "      <td>10.4407</td>\n",
              "      <td>-2.5731</td>\n",
              "      <td>6.1796</td>\n",
              "      <td>10.6093</td>\n",
              "      <td>-5.9158</td>\n",
              "      <td>8.1723</td>\n",
              "      <td>2.8521</td>\n",
              "      <td>...</td>\n",
              "      <td>31.8833</td>\n",
              "      <td>5.9684</td>\n",
              "      <td>7.2084</td>\n",
              "      <td>3.8899</td>\n",
              "      <td>-11.0882</td>\n",
              "      <td>17.2502</td>\n",
              "      <td>2.5881</td>\n",
              "      <td>-2.7018</td>\n",
              "      <td>0.5641</td>\n",
              "      <td>5.3430</td>\n",
              "      <td>-7.1541</td>\n",
              "      <td>-6.1920</td>\n",
              "      <td>18.2366</td>\n",
              "      <td>11.7134</td>\n",
              "      <td>14.7483</td>\n",
              "      <td>8.1013</td>\n",
              "      <td>11.8771</td>\n",
              "      <td>13.9552</td>\n",
              "      <td>-10.4701</td>\n",
              "      <td>5.6961</td>\n",
              "      <td>-3.7546</td>\n",
              "      <td>8.4117</td>\n",
              "      <td>1.8986</td>\n",
              "      <td>7.2601</td>\n",
              "      <td>-0.4639</td>\n",
              "      <td>-0.0498</td>\n",
              "      <td>7.9336</td>\n",
              "      <td>-12.8279</td>\n",
              "      <td>12.4124</td>\n",
              "      <td>1.8489</td>\n",
              "      <td>4.4666</td>\n",
              "      <td>4.7433</td>\n",
              "      <td>0.7178</td>\n",
              "      <td>1.4214</td>\n",
              "      <td>23.0347</td>\n",
              "      <td>-1.2706</td>\n",
              "      <td>-2.9275</td>\n",
              "      <td>10.2922</td>\n",
              "      <td>17.9697</td>\n",
              "      <td>-8.9996</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>train_4</td>\n",
              "      <td>0</td>\n",
              "      <td>9.8369</td>\n",
              "      <td>-1.4834</td>\n",
              "      <td>12.8746</td>\n",
              "      <td>6.6375</td>\n",
              "      <td>12.2772</td>\n",
              "      <td>2.4486</td>\n",
              "      <td>5.9405</td>\n",
              "      <td>19.2514</td>\n",
              "      <td>6.2654</td>\n",
              "      <td>7.6784</td>\n",
              "      <td>-9.4458</td>\n",
              "      <td>-12.1419</td>\n",
              "      <td>13.8481</td>\n",
              "      <td>7.8895</td>\n",
              "      <td>7.7894</td>\n",
              "      <td>15.0553</td>\n",
              "      <td>8.4871</td>\n",
              "      <td>-3.0680</td>\n",
              "      <td>6.5263</td>\n",
              "      <td>11.3152</td>\n",
              "      <td>21.4246</td>\n",
              "      <td>18.9608</td>\n",
              "      <td>10.1102</td>\n",
              "      <td>2.7142</td>\n",
              "      <td>14.2080</td>\n",
              "      <td>13.5433</td>\n",
              "      <td>3.1736</td>\n",
              "      <td>-3.3423</td>\n",
              "      <td>5.9015</td>\n",
              "      <td>7.9352</td>\n",
              "      <td>-3.1582</td>\n",
              "      <td>9.4668</td>\n",
              "      <td>-0.0083</td>\n",
              "      <td>19.3239</td>\n",
              "      <td>12.4057</td>\n",
              "      <td>0.6329</td>\n",
              "      <td>2.7922</td>\n",
              "      <td>5.8184</td>\n",
              "      <td>...</td>\n",
              "      <td>33.5107</td>\n",
              "      <td>5.6953</td>\n",
              "      <td>5.4663</td>\n",
              "      <td>18.2201</td>\n",
              "      <td>6.5769</td>\n",
              "      <td>21.2607</td>\n",
              "      <td>3.2304</td>\n",
              "      <td>-1.7759</td>\n",
              "      <td>3.1283</td>\n",
              "      <td>5.5518</td>\n",
              "      <td>1.4493</td>\n",
              "      <td>-2.6627</td>\n",
              "      <td>19.8056</td>\n",
              "      <td>2.3705</td>\n",
              "      <td>18.4685</td>\n",
              "      <td>16.3309</td>\n",
              "      <td>-3.3456</td>\n",
              "      <td>13.5261</td>\n",
              "      <td>1.7189</td>\n",
              "      <td>5.1743</td>\n",
              "      <td>-7.6938</td>\n",
              "      <td>9.7685</td>\n",
              "      <td>4.8910</td>\n",
              "      <td>12.2198</td>\n",
              "      <td>11.8503</td>\n",
              "      <td>-7.8931</td>\n",
              "      <td>6.4209</td>\n",
              "      <td>5.9270</td>\n",
              "      <td>16.0201</td>\n",
              "      <td>-0.2829</td>\n",
              "      <td>-1.4905</td>\n",
              "      <td>9.5214</td>\n",
              "      <td>-0.1508</td>\n",
              "      <td>9.1942</td>\n",
              "      <td>13.2876</td>\n",
              "      <td>-1.5121</td>\n",
              "      <td>3.9267</td>\n",
              "      <td>9.5031</td>\n",
              "      <td>17.9974</td>\n",
              "      <td>-8.8104</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 202 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   ID_code  target    var_0   var_1  ...  var_196  var_197  var_198  var_199\n",
              "0  train_0       0   8.9255 -6.7863  ...   7.8784   8.5635  12.7803  -1.0914\n",
              "1  train_1       0  11.5006 -4.1473  ...   8.1267   8.7889  18.3560   1.9518\n",
              "2  train_2       0   8.6093 -2.7457  ...  -6.5213   8.2675  14.7222   0.3965\n",
              "3  train_3       0  11.0604 -2.1518  ...  -2.9275  10.2922  17.9697  -8.9996\n",
              "4  train_4       0   9.8369 -1.4834  ...   3.9267   9.5031  17.9974  -8.8104\n",
              "\n",
              "[5 rows x 202 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OQHvZIHt4M8L",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 253
        },
        "outputId": "1f1e08ff-96e2-41f7-a2ba-dad733c86325"
      },
      "source": [
        "test.head()"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID_code</th>\n",
              "      <th>var_0</th>\n",
              "      <th>var_1</th>\n",
              "      <th>var_2</th>\n",
              "      <th>var_3</th>\n",
              "      <th>var_4</th>\n",
              "      <th>var_5</th>\n",
              "      <th>var_6</th>\n",
              "      <th>var_7</th>\n",
              "      <th>var_8</th>\n",
              "      <th>var_9</th>\n",
              "      <th>var_10</th>\n",
              "      <th>var_11</th>\n",
              "      <th>var_12</th>\n",
              "      <th>var_13</th>\n",
              "      <th>var_14</th>\n",
              "      <th>var_15</th>\n",
              "      <th>var_16</th>\n",
              "      <th>var_17</th>\n",
              "      <th>var_18</th>\n",
              "      <th>var_19</th>\n",
              "      <th>var_20</th>\n",
              "      <th>var_21</th>\n",
              "      <th>var_22</th>\n",
              "      <th>var_23</th>\n",
              "      <th>var_24</th>\n",
              "      <th>var_25</th>\n",
              "      <th>var_26</th>\n",
              "      <th>var_27</th>\n",
              "      <th>var_28</th>\n",
              "      <th>var_29</th>\n",
              "      <th>var_30</th>\n",
              "      <th>var_31</th>\n",
              "      <th>var_32</th>\n",
              "      <th>var_33</th>\n",
              "      <th>var_34</th>\n",
              "      <th>var_35</th>\n",
              "      <th>var_36</th>\n",
              "      <th>var_37</th>\n",
              "      <th>var_38</th>\n",
              "      <th>...</th>\n",
              "      <th>var_160</th>\n",
              "      <th>var_161</th>\n",
              "      <th>var_162</th>\n",
              "      <th>var_163</th>\n",
              "      <th>var_164</th>\n",
              "      <th>var_165</th>\n",
              "      <th>var_166</th>\n",
              "      <th>var_167</th>\n",
              "      <th>var_168</th>\n",
              "      <th>var_169</th>\n",
              "      <th>var_170</th>\n",
              "      <th>var_171</th>\n",
              "      <th>var_172</th>\n",
              "      <th>var_173</th>\n",
              "      <th>var_174</th>\n",
              "      <th>var_175</th>\n",
              "      <th>var_176</th>\n",
              "      <th>var_177</th>\n",
              "      <th>var_178</th>\n",
              "      <th>var_179</th>\n",
              "      <th>var_180</th>\n",
              "      <th>var_181</th>\n",
              "      <th>var_182</th>\n",
              "      <th>var_183</th>\n",
              "      <th>var_184</th>\n",
              "      <th>var_185</th>\n",
              "      <th>var_186</th>\n",
              "      <th>var_187</th>\n",
              "      <th>var_188</th>\n",
              "      <th>var_189</th>\n",
              "      <th>var_190</th>\n",
              "      <th>var_191</th>\n",
              "      <th>var_192</th>\n",
              "      <th>var_193</th>\n",
              "      <th>var_194</th>\n",
              "      <th>var_195</th>\n",
              "      <th>var_196</th>\n",
              "      <th>var_197</th>\n",
              "      <th>var_198</th>\n",
              "      <th>var_199</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>test_0</td>\n",
              "      <td>11.0656</td>\n",
              "      <td>7.7798</td>\n",
              "      <td>12.9536</td>\n",
              "      <td>9.4292</td>\n",
              "      <td>11.4327</td>\n",
              "      <td>-2.3805</td>\n",
              "      <td>5.8493</td>\n",
              "      <td>18.2675</td>\n",
              "      <td>2.1337</td>\n",
              "      <td>8.8100</td>\n",
              "      <td>-2.0248</td>\n",
              "      <td>-4.3554</td>\n",
              "      <td>13.9696</td>\n",
              "      <td>0.3458</td>\n",
              "      <td>7.5408</td>\n",
              "      <td>14.5001</td>\n",
              "      <td>7.7028</td>\n",
              "      <td>-19.0919</td>\n",
              "      <td>15.5806</td>\n",
              "      <td>16.1763</td>\n",
              "      <td>3.7088</td>\n",
              "      <td>18.8064</td>\n",
              "      <td>1.5899</td>\n",
              "      <td>3.0654</td>\n",
              "      <td>6.4509</td>\n",
              "      <td>14.1192</td>\n",
              "      <td>-9.4902</td>\n",
              "      <td>-2.1917</td>\n",
              "      <td>5.7107</td>\n",
              "      <td>3.7864</td>\n",
              "      <td>-1.7981</td>\n",
              "      <td>9.2645</td>\n",
              "      <td>2.0657</td>\n",
              "      <td>12.7753</td>\n",
              "      <td>11.3334</td>\n",
              "      <td>8.1462</td>\n",
              "      <td>-0.0610</td>\n",
              "      <td>3.5331</td>\n",
              "      <td>9.7804</td>\n",
              "      <td>...</td>\n",
              "      <td>5.9232</td>\n",
              "      <td>5.4113</td>\n",
              "      <td>3.8302</td>\n",
              "      <td>5.7380</td>\n",
              "      <td>-8.6105</td>\n",
              "      <td>22.9530</td>\n",
              "      <td>2.5531</td>\n",
              "      <td>-0.2836</td>\n",
              "      <td>4.3416</td>\n",
              "      <td>5.1855</td>\n",
              "      <td>4.2603</td>\n",
              "      <td>1.6779</td>\n",
              "      <td>29.0849</td>\n",
              "      <td>8.4685</td>\n",
              "      <td>18.1317</td>\n",
              "      <td>12.2818</td>\n",
              "      <td>-0.6912</td>\n",
              "      <td>10.2226</td>\n",
              "      <td>-5.5579</td>\n",
              "      <td>2.2926</td>\n",
              "      <td>-4.5358</td>\n",
              "      <td>10.3903</td>\n",
              "      <td>-15.4937</td>\n",
              "      <td>3.9697</td>\n",
              "      <td>31.3521</td>\n",
              "      <td>-1.1651</td>\n",
              "      <td>9.2874</td>\n",
              "      <td>-23.5705</td>\n",
              "      <td>13.2643</td>\n",
              "      <td>1.6591</td>\n",
              "      <td>-2.1556</td>\n",
              "      <td>11.8495</td>\n",
              "      <td>-1.4300</td>\n",
              "      <td>2.4508</td>\n",
              "      <td>13.7112</td>\n",
              "      <td>2.4669</td>\n",
              "      <td>4.3654</td>\n",
              "      <td>10.7200</td>\n",
              "      <td>15.4722</td>\n",
              "      <td>-8.7197</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>test_1</td>\n",
              "      <td>8.5304</td>\n",
              "      <td>1.2543</td>\n",
              "      <td>11.3047</td>\n",
              "      <td>5.1858</td>\n",
              "      <td>9.1974</td>\n",
              "      <td>-4.0117</td>\n",
              "      <td>6.0196</td>\n",
              "      <td>18.6316</td>\n",
              "      <td>-4.4131</td>\n",
              "      <td>5.9739</td>\n",
              "      <td>-1.3809</td>\n",
              "      <td>-0.3310</td>\n",
              "      <td>14.1129</td>\n",
              "      <td>2.5667</td>\n",
              "      <td>5.4988</td>\n",
              "      <td>14.1853</td>\n",
              "      <td>7.0196</td>\n",
              "      <td>4.6564</td>\n",
              "      <td>29.1609</td>\n",
              "      <td>0.0910</td>\n",
              "      <td>12.1469</td>\n",
              "      <td>3.1389</td>\n",
              "      <td>5.2578</td>\n",
              "      <td>2.4228</td>\n",
              "      <td>16.2064</td>\n",
              "      <td>13.5023</td>\n",
              "      <td>-5.2341</td>\n",
              "      <td>-3.6648</td>\n",
              "      <td>5.7080</td>\n",
              "      <td>2.9965</td>\n",
              "      <td>-10.4720</td>\n",
              "      <td>11.4938</td>\n",
              "      <td>-0.9660</td>\n",
              "      <td>15.3445</td>\n",
              "      <td>10.6361</td>\n",
              "      <td>0.8966</td>\n",
              "      <td>6.7428</td>\n",
              "      <td>2.3421</td>\n",
              "      <td>12.8678</td>\n",
              "      <td>...</td>\n",
              "      <td>30.9641</td>\n",
              "      <td>5.6723</td>\n",
              "      <td>3.6873</td>\n",
              "      <td>13.0429</td>\n",
              "      <td>-10.6572</td>\n",
              "      <td>15.5134</td>\n",
              "      <td>3.2185</td>\n",
              "      <td>9.0535</td>\n",
              "      <td>7.0535</td>\n",
              "      <td>5.3924</td>\n",
              "      <td>-0.7720</td>\n",
              "      <td>-8.1783</td>\n",
              "      <td>29.9227</td>\n",
              "      <td>-5.6274</td>\n",
              "      <td>10.5018</td>\n",
              "      <td>9.6083</td>\n",
              "      <td>-0.4935</td>\n",
              "      <td>8.1696</td>\n",
              "      <td>-4.3605</td>\n",
              "      <td>5.2110</td>\n",
              "      <td>0.4087</td>\n",
              "      <td>12.0030</td>\n",
              "      <td>-10.3812</td>\n",
              "      <td>5.8496</td>\n",
              "      <td>25.1958</td>\n",
              "      <td>-8.8468</td>\n",
              "      <td>11.8263</td>\n",
              "      <td>-8.7112</td>\n",
              "      <td>15.9072</td>\n",
              "      <td>0.9812</td>\n",
              "      <td>10.6165</td>\n",
              "      <td>8.8349</td>\n",
              "      <td>0.9403</td>\n",
              "      <td>10.1282</td>\n",
              "      <td>15.5765</td>\n",
              "      <td>0.4773</td>\n",
              "      <td>-1.4852</td>\n",
              "      <td>9.8714</td>\n",
              "      <td>19.1293</td>\n",
              "      <td>-20.9760</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>test_2</td>\n",
              "      <td>5.4827</td>\n",
              "      <td>-10.3581</td>\n",
              "      <td>10.1407</td>\n",
              "      <td>7.0479</td>\n",
              "      <td>10.2628</td>\n",
              "      <td>9.8052</td>\n",
              "      <td>4.8950</td>\n",
              "      <td>20.2537</td>\n",
              "      <td>1.5233</td>\n",
              "      <td>8.3442</td>\n",
              "      <td>-4.7057</td>\n",
              "      <td>-3.0422</td>\n",
              "      <td>13.6751</td>\n",
              "      <td>3.8183</td>\n",
              "      <td>10.8535</td>\n",
              "      <td>14.2126</td>\n",
              "      <td>9.8837</td>\n",
              "      <td>2.6541</td>\n",
              "      <td>21.2181</td>\n",
              "      <td>20.8163</td>\n",
              "      <td>12.4666</td>\n",
              "      <td>12.3696</td>\n",
              "      <td>4.7473</td>\n",
              "      <td>2.7936</td>\n",
              "      <td>5.2189</td>\n",
              "      <td>13.5670</td>\n",
              "      <td>-15.4246</td>\n",
              "      <td>-0.1655</td>\n",
              "      <td>7.2633</td>\n",
              "      <td>3.4310</td>\n",
              "      <td>-9.1508</td>\n",
              "      <td>9.7320</td>\n",
              "      <td>3.1062</td>\n",
              "      <td>22.3076</td>\n",
              "      <td>11.9593</td>\n",
              "      <td>9.9255</td>\n",
              "      <td>4.0702</td>\n",
              "      <td>4.9934</td>\n",
              "      <td>8.0667</td>\n",
              "      <td>...</td>\n",
              "      <td>39.3654</td>\n",
              "      <td>5.5228</td>\n",
              "      <td>3.3159</td>\n",
              "      <td>4.3324</td>\n",
              "      <td>-0.5382</td>\n",
              "      <td>13.3009</td>\n",
              "      <td>3.1243</td>\n",
              "      <td>-4.1731</td>\n",
              "      <td>1.2330</td>\n",
              "      <td>6.1513</td>\n",
              "      <td>-0.0391</td>\n",
              "      <td>1.4950</td>\n",
              "      <td>16.8874</td>\n",
              "      <td>-2.9787</td>\n",
              "      <td>27.4035</td>\n",
              "      <td>15.8819</td>\n",
              "      <td>-10.9660</td>\n",
              "      <td>15.6415</td>\n",
              "      <td>-9.4056</td>\n",
              "      <td>4.4611</td>\n",
              "      <td>-3.0835</td>\n",
              "      <td>8.5549</td>\n",
              "      <td>-2.8517</td>\n",
              "      <td>13.4770</td>\n",
              "      <td>24.4721</td>\n",
              "      <td>-3.4824</td>\n",
              "      <td>4.9178</td>\n",
              "      <td>-2.0720</td>\n",
              "      <td>11.5390</td>\n",
              "      <td>1.1821</td>\n",
              "      <td>-0.7484</td>\n",
              "      <td>10.9935</td>\n",
              "      <td>1.9803</td>\n",
              "      <td>2.1800</td>\n",
              "      <td>12.9813</td>\n",
              "      <td>2.1281</td>\n",
              "      <td>-7.1086</td>\n",
              "      <td>7.0618</td>\n",
              "      <td>19.8956</td>\n",
              "      <td>-23.1794</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>test_3</td>\n",
              "      <td>8.5374</td>\n",
              "      <td>-1.3222</td>\n",
              "      <td>12.0220</td>\n",
              "      <td>6.5749</td>\n",
              "      <td>8.8458</td>\n",
              "      <td>3.1744</td>\n",
              "      <td>4.9397</td>\n",
              "      <td>20.5660</td>\n",
              "      <td>3.3755</td>\n",
              "      <td>7.4578</td>\n",
              "      <td>0.0095</td>\n",
              "      <td>-5.0659</td>\n",
              "      <td>14.0526</td>\n",
              "      <td>13.5010</td>\n",
              "      <td>8.7660</td>\n",
              "      <td>14.7352</td>\n",
              "      <td>10.0383</td>\n",
              "      <td>-15.3508</td>\n",
              "      <td>2.1273</td>\n",
              "      <td>21.4797</td>\n",
              "      <td>14.5372</td>\n",
              "      <td>12.5527</td>\n",
              "      <td>2.9707</td>\n",
              "      <td>4.2398</td>\n",
              "      <td>13.7796</td>\n",
              "      <td>14.1408</td>\n",
              "      <td>1.0061</td>\n",
              "      <td>-1.3479</td>\n",
              "      <td>5.2570</td>\n",
              "      <td>6.5911</td>\n",
              "      <td>6.2161</td>\n",
              "      <td>9.5540</td>\n",
              "      <td>2.3628</td>\n",
              "      <td>10.2124</td>\n",
              "      <td>10.8047</td>\n",
              "      <td>-2.5588</td>\n",
              "      <td>6.0720</td>\n",
              "      <td>3.2613</td>\n",
              "      <td>16.5632</td>\n",
              "      <td>...</td>\n",
              "      <td>19.7251</td>\n",
              "      <td>5.3882</td>\n",
              "      <td>3.6775</td>\n",
              "      <td>7.4753</td>\n",
              "      <td>-11.0780</td>\n",
              "      <td>24.8712</td>\n",
              "      <td>2.6415</td>\n",
              "      <td>2.2673</td>\n",
              "      <td>7.2788</td>\n",
              "      <td>5.6406</td>\n",
              "      <td>7.2048</td>\n",
              "      <td>3.4504</td>\n",
              "      <td>2.4130</td>\n",
              "      <td>11.1674</td>\n",
              "      <td>14.5499</td>\n",
              "      <td>10.6151</td>\n",
              "      <td>-5.7922</td>\n",
              "      <td>13.9407</td>\n",
              "      <td>7.1078</td>\n",
              "      <td>1.1019</td>\n",
              "      <td>9.4590</td>\n",
              "      <td>9.8243</td>\n",
              "      <td>5.9917</td>\n",
              "      <td>5.1634</td>\n",
              "      <td>8.1154</td>\n",
              "      <td>3.6638</td>\n",
              "      <td>3.3102</td>\n",
              "      <td>-19.7819</td>\n",
              "      <td>13.4499</td>\n",
              "      <td>1.3104</td>\n",
              "      <td>9.5702</td>\n",
              "      <td>9.0766</td>\n",
              "      <td>1.6580</td>\n",
              "      <td>3.5813</td>\n",
              "      <td>15.1874</td>\n",
              "      <td>3.1656</td>\n",
              "      <td>3.9567</td>\n",
              "      <td>9.2295</td>\n",
              "      <td>13.0168</td>\n",
              "      <td>-4.2108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>test_4</td>\n",
              "      <td>11.7058</td>\n",
              "      <td>-0.1327</td>\n",
              "      <td>14.1295</td>\n",
              "      <td>7.7506</td>\n",
              "      <td>9.1035</td>\n",
              "      <td>-8.5848</td>\n",
              "      <td>6.8595</td>\n",
              "      <td>10.6048</td>\n",
              "      <td>2.9890</td>\n",
              "      <td>7.1437</td>\n",
              "      <td>5.1025</td>\n",
              "      <td>-3.2827</td>\n",
              "      <td>14.1013</td>\n",
              "      <td>8.9672</td>\n",
              "      <td>4.7276</td>\n",
              "      <td>14.5811</td>\n",
              "      <td>11.8615</td>\n",
              "      <td>3.1480</td>\n",
              "      <td>18.0126</td>\n",
              "      <td>13.8006</td>\n",
              "      <td>1.6026</td>\n",
              "      <td>16.3059</td>\n",
              "      <td>6.7954</td>\n",
              "      <td>3.6015</td>\n",
              "      <td>13.6569</td>\n",
              "      <td>13.8807</td>\n",
              "      <td>8.6228</td>\n",
              "      <td>-2.2654</td>\n",
              "      <td>5.2255</td>\n",
              "      <td>7.0165</td>\n",
              "      <td>-15.6961</td>\n",
              "      <td>10.6239</td>\n",
              "      <td>-4.7674</td>\n",
              "      <td>17.5447</td>\n",
              "      <td>11.8668</td>\n",
              "      <td>3.0154</td>\n",
              "      <td>4.2546</td>\n",
              "      <td>6.7601</td>\n",
              "      <td>5.9613</td>\n",
              "      <td>...</td>\n",
              "      <td>22.8700</td>\n",
              "      <td>5.6688</td>\n",
              "      <td>6.1159</td>\n",
              "      <td>13.2433</td>\n",
              "      <td>-11.9785</td>\n",
              "      <td>26.2040</td>\n",
              "      <td>3.2348</td>\n",
              "      <td>-5.5775</td>\n",
              "      <td>5.7036</td>\n",
              "      <td>6.1717</td>\n",
              "      <td>-1.6039</td>\n",
              "      <td>-2.4866</td>\n",
              "      <td>17.2728</td>\n",
              "      <td>2.3640</td>\n",
              "      <td>14.0037</td>\n",
              "      <td>12.9165</td>\n",
              "      <td>-12.0311</td>\n",
              "      <td>10.1161</td>\n",
              "      <td>-8.7562</td>\n",
              "      <td>6.0889</td>\n",
              "      <td>-1.3620</td>\n",
              "      <td>10.3559</td>\n",
              "      <td>-7.4915</td>\n",
              "      <td>9.4588</td>\n",
              "      <td>3.9829</td>\n",
              "      <td>5.8580</td>\n",
              "      <td>8.3635</td>\n",
              "      <td>-24.8254</td>\n",
              "      <td>11.4928</td>\n",
              "      <td>1.6321</td>\n",
              "      <td>4.2259</td>\n",
              "      <td>9.1723</td>\n",
              "      <td>1.2835</td>\n",
              "      <td>3.3778</td>\n",
              "      <td>19.5542</td>\n",
              "      <td>-0.2860</td>\n",
              "      <td>-5.1612</td>\n",
              "      <td>7.2882</td>\n",
              "      <td>13.9260</td>\n",
              "      <td>-9.1846</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 201 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "  ID_code    var_0    var_1    var_2  ...  var_196  var_197  var_198  var_199\n",
              "0  test_0  11.0656   7.7798  12.9536  ...   4.3654  10.7200  15.4722  -8.7197\n",
              "1  test_1   8.5304   1.2543  11.3047  ...  -1.4852   9.8714  19.1293 -20.9760\n",
              "2  test_2   5.4827 -10.3581  10.1407  ...  -7.1086   7.0618  19.8956 -23.1794\n",
              "3  test_3   8.5374  -1.3222  12.0220  ...   3.9567   9.2295  13.0168  -4.2108\n",
              "4  test_4  11.7058  -0.1327  14.1295  ...  -5.1612   7.2882  13.9260  -9.1846\n",
              "\n",
              "[5 rows x 201 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WQ9lV85mYPYd",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "5ba83f5f-693e-42da-e85f-2afa52a85ccb"
      },
      "source": [
        "# Rows and Columns\n",
        "print('Train -->',train.shape)\n",
        "print('Test -->',test.shape)"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Train --> (200000, 202)\n",
            "Test --> (200000, 201)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s8mYw9fDcztu",
        "colab_type": "text"
      },
      "source": [
        "## Visualizing the distribution of variables"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "n-KTQOdoYkDS",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "34b9aec4-b2a9-424a-f614-07e0cc72cb5e"
      },
      "source": [
        "#Checking distribution of the variables\n",
        "#Subsetting train dataset to visualize distribution of 1s and 0s\n",
        "t0=train[train['target']==0]\n",
        "t1=train[train['target']==1]\n",
        "\n",
        "#Plotting distribution\n",
        "plt.figure(figsize=(20,15))\n",
        "for i, col in enumerate(list(train.columns)[2:30]):\n",
        "    plt.subplot(7,4,i + 1)\n",
        "    plt.hist(t0[col],label='target 0',color='green')\n",
        "    plt.hist(t1[col],label='target 1',color='red')\n",
        "    plt.title(col)\n",
        "    plt.grid()\n",
        "    plt.legend(loc='upper right')\n",
        "    plt.tight_layout()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:839: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in greater_equal\n",
            "\n",
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:840: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in less_equal\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1080 with 28 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IMSVhyQDYj_g",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "9163459d-1d8a-42fc-9a71-a3d6f7acb6ff"
      },
      "source": [
        "plt.figure(figsize=(20,15))\n",
        "for i, col in enumerate(list(train.columns)[30:58]):\n",
        "    plt.subplot(7,4,i + 1)\n",
        "    plt.hist(t0[col],label='target 0',color='green')\n",
        "    plt.hist(t1[col],label='target 1',color='red')\n",
        "    plt.title(col)\n",
        "    plt.grid()\n",
        "    plt.legend(loc='upper right')\n",
        "    plt.tight_layout()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:839: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in greater_equal\n",
            "\n",
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:840: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in less_equal\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1080 with 28 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JaQY3yQhYj7e",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 870
        },
        "outputId": "0ac3b127-e6f5-415a-a652-d51f229f4717"
      },
      "source": [
        "plt.figure(figsize=(20,15))\n",
        "for i, col in enumerate(list(train.columns)[58:78]):\n",
        "    plt.subplot(7,4,i + 1)\n",
        "    plt.hist(t0[col],label='target 0',color='green')\n",
        "    plt.hist(t1[col],label='target 1',color='red')\n",
        "    plt.title(col)\n",
        "    plt.grid()\n",
        "    plt.legend(loc='upper right')\n",
        "    plt.tight_layout()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:839: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in greater_equal\n",
            "\n",
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:840: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in less_equal\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1080 with 20 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zQ5W0_jIdH0W",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 870
        },
        "outputId": "218697e2-4847-439f-9a0e-c91cc5cb7589"
      },
      "source": [
        "#Variables 76 to 95\n",
        "plt.figure(figsize=(20,15))\n",
        "for i, col in enumerate(list(train.columns)[78:98]):\n",
        "    plt.subplot(7,4,i + 1)\n",
        "    plt.hist(t0[col],label='target 0',color='green')\n",
        "    plt.hist(t1[col],label='target 1',color='red')\n",
        "    plt.title(col)\n",
        "    plt.grid()\n",
        "    plt.legend(loc='upper right')\n",
        "    plt.tight_layout()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:839: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in greater_equal\n",
            "\n",
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:840: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in less_equal\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1080 with 20 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QgyiryXldISL",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 870
        },
        "outputId": "11cfb3ec-f8d0-4f78-8faa-0b0b26076b42"
      },
      "source": [
        "#Variables 96 to 115\n",
        "plt.figure(figsize=(20,15))\n",
        "for i, col in enumerate(list(train.columns)[98:118]):\n",
        "    plt.subplot(7,4,i + 1)\n",
        "    plt.hist(t0[col],label='target 0',color='green')\n",
        "    plt.hist(t1[col],label='target 1',color='red')\n",
        "    plt.title(col)\n",
        "    plt.grid()\n",
        "    plt.legend(loc='upper right')\n",
        "    plt.tight_layout()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:839: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in greater_equal\n",
            "\n",
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:840: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in less_equal\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1080 with 20 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "twiz-zbsdIXy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "62a7a92d-f947-4167-c2d2-cac3cc4f003a"
      },
      "source": [
        "#Variables 116 to 143\n",
        "plt.figure(figsize=(20,15))\n",
        "for i, col in enumerate(list(train.columns)[118:146]):\n",
        "    plt.subplot(7,4,i + 1)\n",
        "    plt.hist(t0[col],label='target 0',color='green')\n",
        "    plt.hist(t1[col],label='target 1',color='red')\n",
        "    plt.title(col)\n",
        "    plt.grid()\n",
        "    plt.legend(loc='upper right')\n",
        "    plt.tight_layout()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:839: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in greater_equal\n",
            "\n",
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:840: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in less_equal\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1080 with 28 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MephFJiDdRZc",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "050b2fa3-f997-4b7a-e4ea-52b467a65611"
      },
      "source": [
        "#Variables 144 to 171\n",
        "plt.figure(figsize=(20,15))\n",
        "for i, col in enumerate(list(train.columns)[146:174]):\n",
        "    plt.subplot(7,4,i + 1)\n",
        "    plt.hist(t0[col],label='target 0',color='green')\n",
        "    plt.hist(t1[col],label='target 1',color='red')\n",
        "    plt.title(col)\n",
        "    plt.grid()\n",
        "    plt.legend(loc='upper right')\n",
        "    plt.tight_layout()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:839: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in greater_equal\n",
            "\n",
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:840: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in less_equal\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1080 with 28 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hrdZY-P2dU6f",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "f143f7e4-e21a-4f49-9da0-8f2ab32597b0"
      },
      "source": [
        "#Variables 172 to 199\n",
        "plt.figure(figsize=(20,15))\n",
        "for i, col in enumerate(list(train.columns)[174:203]):\n",
        "    plt.subplot(7,4,i + 1)\n",
        "    plt.hist(t0[col],label='target 0',color='green')\n",
        "    plt.hist(t1[col],label='target 1',color='red')\n",
        "    plt.title(col)\n",
        "    plt.grid()\n",
        "    plt.legend(loc='upper right')\n",
        "    plt.tight_layout()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:839: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in greater_equal\n",
            "\n",
            "/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py:840: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in less_equal\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1080 with 28 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZOwTWKHq4M8N",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "780dfad1-8e89-41c7-dcee-2aa7a3791a75"
      },
      "source": [
        "# Rows containing duplicate data\n",
        "print(df.shape)\n",
        "\n",
        "duplicate_rows_df = df[df.duplicated()]\n",
        "print(\"number of duplicate rows: \", duplicate_rows_df.shape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(400000, 202)\n",
            "number of duplicate rows:  (0, 202)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Fcls9Mb44M8Q",
        "colab_type": "code",
        "colab": {},
        "outputId": "861e8541-30ac-45af-de54-ab9d84a8cdfa"
      },
      "source": [
        "df.dtypes"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "target     float64\n",
              "var_0      float64\n",
              "var_1      float64\n",
              "var_2      float64\n",
              "var_3      float64\n",
              "            ...   \n",
              "var_195    float64\n",
              "var_196    float64\n",
              "var_197    float64\n",
              "var_198    float64\n",
              "var_199    float64\n",
              "Length: 201, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pkseBlHn4M8T",
        "colab_type": "code",
        "colab": {},
        "outputId": "33fa6156-fdbb-4c72-bce6-503d78b5ed1a"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>target</th>\n",
              "      <th>var_0</th>\n",
              "      <th>var_1</th>\n",
              "      <th>var_2</th>\n",
              "      <th>var_3</th>\n",
              "      <th>var_4</th>\n",
              "      <th>var_5</th>\n",
              "      <th>var_6</th>\n",
              "      <th>var_7</th>\n",
              "      <th>var_8</th>\n",
              "      <th>...</th>\n",
              "      <th>var_190</th>\n",
              "      <th>var_191</th>\n",
              "      <th>var_192</th>\n",
              "      <th>var_193</th>\n",
              "      <th>var_194</th>\n",
              "      <th>var_195</th>\n",
              "      <th>var_196</th>\n",
              "      <th>var_197</th>\n",
              "      <th>var_198</th>\n",
              "      <th>var_199</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.0</td>\n",
              "      <td>8.9255</td>\n",
              "      <td>-6.7863</td>\n",
              "      <td>11.9081</td>\n",
              "      <td>5.0930</td>\n",
              "      <td>11.4607</td>\n",
              "      <td>-9.2834</td>\n",
              "      <td>5.1187</td>\n",
              "      <td>18.6266</td>\n",
              "      <td>-4.9200</td>\n",
              "      <td>...</td>\n",
              "      <td>4.4354</td>\n",
              "      <td>3.9642</td>\n",
              "      <td>3.1364</td>\n",
              "      <td>1.6910</td>\n",
              "      <td>18.5227</td>\n",
              "      <td>-2.3978</td>\n",
              "      <td>7.8784</td>\n",
              "      <td>8.5635</td>\n",
              "      <td>12.7803</td>\n",
              "      <td>-1.0914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.0</td>\n",
              "      <td>11.5006</td>\n",
              "      <td>-4.1473</td>\n",
              "      <td>13.8588</td>\n",
              "      <td>5.3890</td>\n",
              "      <td>12.3622</td>\n",
              "      <td>7.0433</td>\n",
              "      <td>5.6208</td>\n",
              "      <td>16.5338</td>\n",
              "      <td>3.1468</td>\n",
              "      <td>...</td>\n",
              "      <td>7.6421</td>\n",
              "      <td>7.7214</td>\n",
              "      <td>2.5837</td>\n",
              "      <td>10.9516</td>\n",
              "      <td>15.4305</td>\n",
              "      <td>2.0339</td>\n",
              "      <td>8.1267</td>\n",
              "      <td>8.7889</td>\n",
              "      <td>18.3560</td>\n",
              "      <td>1.9518</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.0</td>\n",
              "      <td>8.6093</td>\n",
              "      <td>-2.7457</td>\n",
              "      <td>12.0805</td>\n",
              "      <td>7.8928</td>\n",
              "      <td>10.5825</td>\n",
              "      <td>-9.0837</td>\n",
              "      <td>6.9427</td>\n",
              "      <td>14.6155</td>\n",
              "      <td>-4.9193</td>\n",
              "      <td>...</td>\n",
              "      <td>2.9057</td>\n",
              "      <td>9.7905</td>\n",
              "      <td>1.6704</td>\n",
              "      <td>1.6858</td>\n",
              "      <td>21.6042</td>\n",
              "      <td>3.1417</td>\n",
              "      <td>-6.5213</td>\n",
              "      <td>8.2675</td>\n",
              "      <td>14.7222</td>\n",
              "      <td>0.3965</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.0</td>\n",
              "      <td>11.0604</td>\n",
              "      <td>-2.1518</td>\n",
              "      <td>8.9522</td>\n",
              "      <td>7.1957</td>\n",
              "      <td>12.5846</td>\n",
              "      <td>-1.8361</td>\n",
              "      <td>5.8428</td>\n",
              "      <td>14.9250</td>\n",
              "      <td>-5.8609</td>\n",
              "      <td>...</td>\n",
              "      <td>4.4666</td>\n",
              "      <td>4.7433</td>\n",
              "      <td>0.7178</td>\n",
              "      <td>1.4214</td>\n",
              "      <td>23.0347</td>\n",
              "      <td>-1.2706</td>\n",
              "      <td>-2.9275</td>\n",
              "      <td>10.2922</td>\n",
              "      <td>17.9697</td>\n",
              "      <td>-8.9996</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.0</td>\n",
              "      <td>9.8369</td>\n",
              "      <td>-1.4834</td>\n",
              "      <td>12.8746</td>\n",
              "      <td>6.6375</td>\n",
              "      <td>12.2772</td>\n",
              "      <td>2.4486</td>\n",
              "      <td>5.9405</td>\n",
              "      <td>19.2514</td>\n",
              "      <td>6.2654</td>\n",
              "      <td>...</td>\n",
              "      <td>-1.4905</td>\n",
              "      <td>9.5214</td>\n",
              "      <td>-0.1508</td>\n",
              "      <td>9.1942</td>\n",
              "      <td>13.2876</td>\n",
              "      <td>-1.5121</td>\n",
              "      <td>3.9267</td>\n",
              "      <td>9.5031</td>\n",
              "      <td>17.9974</td>\n",
              "      <td>-8.8104</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 201 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   target    var_0   var_1    var_2   var_3    var_4   var_5   var_6    var_7  \\\n",
              "0     0.0   8.9255 -6.7863  11.9081  5.0930  11.4607 -9.2834  5.1187  18.6266   \n",
              "1     0.0  11.5006 -4.1473  13.8588  5.3890  12.3622  7.0433  5.6208  16.5338   \n",
              "2     0.0   8.6093 -2.7457  12.0805  7.8928  10.5825 -9.0837  6.9427  14.6155   \n",
              "3     0.0  11.0604 -2.1518   8.9522  7.1957  12.5846 -1.8361  5.8428  14.9250   \n",
              "4     0.0   9.8369 -1.4834  12.8746  6.6375  12.2772  2.4486  5.9405  19.2514   \n",
              "\n",
              "    var_8  ...  var_190  var_191  var_192  var_193  var_194  var_195  var_196  \\\n",
              "0 -4.9200  ...   4.4354   3.9642   3.1364   1.6910  18.5227  -2.3978   7.8784   \n",
              "1  3.1468  ...   7.6421   7.7214   2.5837  10.9516  15.4305   2.0339   8.1267   \n",
              "2 -4.9193  ...   2.9057   9.7905   1.6704   1.6858  21.6042   3.1417  -6.5213   \n",
              "3 -5.8609  ...   4.4666   4.7433   0.7178   1.4214  23.0347  -1.2706  -2.9275   \n",
              "4  6.2654  ...  -1.4905   9.5214  -0.1508   9.1942  13.2876  -1.5121   3.9267   \n",
              "\n",
              "   var_197  var_198  var_199  \n",
              "0   8.5635  12.7803  -1.0914  \n",
              "1   8.7889  18.3560   1.9518  \n",
              "2   8.2675  14.7222   0.3965  \n",
              "3  10.2922  17.9697  -8.9996  \n",
              "4   9.5031  17.9974  -8.8104  \n",
              "\n",
              "[5 rows x 201 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nASIzGPB4M8W",
        "colab_type": "code",
        "colab": {},
        "outputId": "60a3521b-fa18-443d-faa9-10c968c28974"
      },
      "source": [
        "df.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>target</th>\n",
              "      <th>var_0</th>\n",
              "      <th>var_1</th>\n",
              "      <th>var_2</th>\n",
              "      <th>var_3</th>\n",
              "      <th>var_4</th>\n",
              "      <th>var_5</th>\n",
              "      <th>var_6</th>\n",
              "      <th>var_7</th>\n",
              "      <th>var_8</th>\n",
              "      <th>...</th>\n",
              "      <th>var_190</th>\n",
              "      <th>var_191</th>\n",
              "      <th>var_192</th>\n",
              "      <th>var_193</th>\n",
              "      <th>var_194</th>\n",
              "      <th>var_195</th>\n",
              "      <th>var_196</th>\n",
              "      <th>var_197</th>\n",
              "      <th>var_198</th>\n",
              "      <th>var_199</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>200000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "      <td>400000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.100490</td>\n",
              "      <td>10.669326</td>\n",
              "      <td>-1.625933</td>\n",
              "      <td>10.711322</td>\n",
              "      <td>6.792372</td>\n",
              "      <td>11.077366</td>\n",
              "      <td>-5.057938</td>\n",
              "      <td>5.412056</td>\n",
              "      <td>16.537496</td>\n",
              "      <td>0.280648</td>\n",
              "      <td>...</td>\n",
              "      <td>3.212103</td>\n",
              "      <td>7.448339</td>\n",
              "      <td>1.926891</td>\n",
              "      <td>3.326895</td>\n",
              "      <td>17.995376</td>\n",
              "      <td>-0.137873</td>\n",
              "      <td>2.297117</td>\n",
              "      <td>8.910293</td>\n",
              "      <td>15.869952</td>\n",
              "      <td>-3.286439</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.300653</td>\n",
              "      <td>3.038398</td>\n",
              "      <td>4.045275</td>\n",
              "      <td>2.637393</td>\n",
              "      <td>2.048028</td>\n",
              "      <td>1.619805</td>\n",
              "      <td>7.866274</td>\n",
              "      <td>0.865652</td>\n",
              "      <td>3.421286</td>\n",
              "      <td>3.333002</td>\n",
              "      <td>...</td>\n",
              "      <td>4.555632</td>\n",
              "      <td>3.024243</td>\n",
              "      <td>1.479193</td>\n",
              "      <td>3.993813</td>\n",
              "      <td>3.137905</td>\n",
              "      <td>1.429530</td>\n",
              "      <td>5.450356</td>\n",
              "      <td>0.921266</td>\n",
              "      <td>3.009828</td>\n",
              "      <td>10.418385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.188700</td>\n",
              "      <td>-15.043400</td>\n",
              "      <td>2.117100</td>\n",
              "      <td>-0.040200</td>\n",
              "      <td>5.074800</td>\n",
              "      <td>-32.562600</td>\n",
              "      <td>2.216400</td>\n",
              "      <td>5.349700</td>\n",
              "      <td>-10.505500</td>\n",
              "      <td>...</td>\n",
              "      <td>-14.093300</td>\n",
              "      <td>-2.691700</td>\n",
              "      <td>-3.814500</td>\n",
              "      <td>-11.783400</td>\n",
              "      <td>8.694400</td>\n",
              "      <td>-5.261000</td>\n",
              "      <td>-14.209600</td>\n",
              "      <td>5.960600</td>\n",
              "      <td>6.299300</td>\n",
              "      <td>-39.457800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>8.448900</td>\n",
              "      <td>-4.720800</td>\n",
              "      <td>8.729700</td>\n",
              "      <td>5.242175</td>\n",
              "      <td>9.886975</td>\n",
              "      <td>-11.200825</td>\n",
              "      <td>4.770200</td>\n",
              "      <td>13.938200</td>\n",
              "      <td>-2.310825</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.077200</td>\n",
              "      <td>5.161900</td>\n",
              "      <td>0.886700</td>\n",
              "      <td>0.586075</td>\n",
              "      <td>15.632400</td>\n",
              "      <td>-1.165900</td>\n",
              "      <td>-1.947800</td>\n",
              "      <td>8.255800</td>\n",
              "      <td>13.838500</td>\n",
              "      <td>-11.171300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>10.518950</td>\n",
              "      <td>-1.599400</td>\n",
              "      <td>10.570000</td>\n",
              "      <td>6.823700</td>\n",
              "      <td>11.104500</td>\n",
              "      <td>-4.833700</td>\n",
              "      <td>5.388500</td>\n",
              "      <td>16.439800</td>\n",
              "      <td>0.383100</td>\n",
              "      <td>...</td>\n",
              "      <td>3.181700</td>\n",
              "      <td>7.363700</td>\n",
              "      <td>1.897000</td>\n",
              "      <td>3.410900</td>\n",
              "      <td>17.967100</td>\n",
              "      <td>-0.167600</td>\n",
              "      <td>2.406800</td>\n",
              "      <td>8.890600</td>\n",
              "      <td>15.939200</td>\n",
              "      <td>-2.769700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>12.748225</td>\n",
              "      <td>1.350025</td>\n",
              "      <td>12.505300</td>\n",
              "      <td>8.326000</td>\n",
              "      <td>12.256800</td>\n",
              "      <td>0.934700</td>\n",
              "      <td>6.004300</td>\n",
              "      <td>19.099000</td>\n",
              "      <td>2.934025</td>\n",
              "      <td>...</td>\n",
              "      <td>6.373200</td>\n",
              "      <td>9.521700</td>\n",
              "      <td>2.952800</td>\n",
              "      <td>6.191400</td>\n",
              "      <td>20.393800</td>\n",
              "      <td>0.834000</td>\n",
              "      <td>6.539300</td>\n",
              "      <td>9.594900</td>\n",
              "      <td>18.055325</td>\n",
              "      <td>4.889400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>22.323400</td>\n",
              "      <td>10.376800</td>\n",
              "      <td>19.353000</td>\n",
              "      <td>13.188300</td>\n",
              "      <td>16.671400</td>\n",
              "      <td>17.253700</td>\n",
              "      <td>8.447700</td>\n",
              "      <td>28.292800</td>\n",
              "      <td>10.151300</td>\n",
              "      <td>...</td>\n",
              "      <td>20.359000</td>\n",
              "      <td>16.716500</td>\n",
              "      <td>8.402400</td>\n",
              "      <td>18.281800</td>\n",
              "      <td>27.947800</td>\n",
              "      <td>4.545400</td>\n",
              "      <td>18.321500</td>\n",
              "      <td>12.275800</td>\n",
              "      <td>26.538400</td>\n",
              "      <td>28.500700</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8 rows × 201 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "              target          var_0          var_1          var_2  \\\n",
              "count  200000.000000  400000.000000  400000.000000  400000.000000   \n",
              "mean        0.100490      10.669326      -1.625933      10.711322   \n",
              "std         0.300653       3.038398       4.045275       2.637393   \n",
              "min         0.000000       0.188700     -15.043400       2.117100   \n",
              "25%         0.000000       8.448900      -4.720800       8.729700   \n",
              "50%         0.000000      10.518950      -1.599400      10.570000   \n",
              "75%         0.000000      12.748225       1.350025      12.505300   \n",
              "max         1.000000      22.323400      10.376800      19.353000   \n",
              "\n",
              "               var_3          var_4          var_5          var_6  \\\n",
              "count  400000.000000  400000.000000  400000.000000  400000.000000   \n",
              "mean        6.792372      11.077366      -5.057938       5.412056   \n",
              "std         2.048028       1.619805       7.866274       0.865652   \n",
              "min        -0.040200       5.074800     -32.562600       2.216400   \n",
              "25%         5.242175       9.886975     -11.200825       4.770200   \n",
              "50%         6.823700      11.104500      -4.833700       5.388500   \n",
              "75%         8.326000      12.256800       0.934700       6.004300   \n",
              "max        13.188300      16.671400      17.253700       8.447700   \n",
              "\n",
              "               var_7          var_8  ...        var_190        var_191  \\\n",
              "count  400000.000000  400000.000000  ...  400000.000000  400000.000000   \n",
              "mean       16.537496       0.280648  ...       3.212103       7.448339   \n",
              "std         3.421286       3.333002  ...       4.555632       3.024243   \n",
              "min         5.349700     -10.505500  ...     -14.093300      -2.691700   \n",
              "25%        13.938200      -2.310825  ...      -0.077200       5.161900   \n",
              "50%        16.439800       0.383100  ...       3.181700       7.363700   \n",
              "75%        19.099000       2.934025  ...       6.373200       9.521700   \n",
              "max        28.292800      10.151300  ...      20.359000      16.716500   \n",
              "\n",
              "             var_192        var_193        var_194        var_195  \\\n",
              "count  400000.000000  400000.000000  400000.000000  400000.000000   \n",
              "mean        1.926891       3.326895      17.995376      -0.137873   \n",
              "std         1.479193       3.993813       3.137905       1.429530   \n",
              "min        -3.814500     -11.783400       8.694400      -5.261000   \n",
              "25%         0.886700       0.586075      15.632400      -1.165900   \n",
              "50%         1.897000       3.410900      17.967100      -0.167600   \n",
              "75%         2.952800       6.191400      20.393800       0.834000   \n",
              "max         8.402400      18.281800      27.947800       4.545400   \n",
              "\n",
              "             var_196        var_197        var_198        var_199  \n",
              "count  400000.000000  400000.000000  400000.000000  400000.000000  \n",
              "mean        2.297117       8.910293      15.869952      -3.286439  \n",
              "std         5.450356       0.921266       3.009828      10.418385  \n",
              "min       -14.209600       5.960600       6.299300     -39.457800  \n",
              "25%        -1.947800       8.255800      13.838500     -11.171300  \n",
              "50%         2.406800       8.890600      15.939200      -2.769700  \n",
              "75%         6.539300       9.594900      18.055325       4.889400  \n",
              "max        18.321500      12.275800      26.538400      28.500700  \n",
              "\n",
              "[8 rows x 201 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5nPBLTdq4M8Y",
        "colab_type": "text"
      },
      "source": [
        "## No Nulls\n",
        "Except the target of test set."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SkoqNVaq4M8Z",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 114
        },
        "outputId": "addc4979-739c-4645-b80b-da3dc5d97cf2"
      },
      "source": [
        "def missing_values_table(df):\n",
        "        mis_val = df.isnull().sum()\n",
        "        mis_val_percent = 100 * df.isnull().sum() / len(df)\n",
        "        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n",
        "        mis_val_table_ren_columns = mis_val_table.rename(\n",
        "        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n",
        "        mis_val_table_ren_columns = mis_val_table_ren_columns[\n",
        "            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n",
        "        '% of Total Values', ascending=False).round(1)\n",
        "        print (\"Dataset has \" + str(df.shape[1]) + \" columns.\\n\"      \n",
        "            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n",
        "              \" columns that have missing values.\")\n",
        "        return mis_val_table_ren_columns\n",
        "missing_values_table(df)"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Dataset has 202 columns.\n",
            "There are 1 columns that have missing values.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Missing Values</th>\n",
              "      <th>% of Total Values</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>target</th>\n",
              "      <td>200000</td>\n",
              "      <td>50.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        Missing Values  % of Total Values\n",
              "target          200000               50.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zKm_tHXFY5xh",
        "colab_type": "text"
      },
      "source": [
        "### Target\n",
        "\n",
        "The dataset is very unbalaced so we will use oversampling to improve our score."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6HFTyR-B4M8b",
        "colab_type": "code",
        "colab": {},
        "outputId": "9cdd3d99-085c-4a27-8b2b-c25ffa42537a"
      },
      "source": [
        "df.target.value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.0    179902\n",
              "1.0     20098\n",
              "Name: target, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ONMcBAm9Y9Pv",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "9ee2a7a3-48c5-4b2c-9fa1-a1b5c57f095d"
      },
      "source": [
        "#Distribution of train target variable\n",
        "sns.countplot(train['target'])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f317a6790b8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZEAAAEGCAYAAACkQqisAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAUTklEQVR4nO3df6xf9X3f8ecLHAJpAjbB9ahNatRYqygrBDxwm6lqgwaGtTVKE0TUzB6z8CZI1UpTNzJN80qaqdG6sdAlTFZxsFFXQuky3AjqWYQuWjUT7JDyM4hbEoYtwC42kASRzOl7f3w/l3xjru2bz+X7vb7c50P66nvO+/M55/s5kq2Xzjmfc26qCkmSepww2wOQJM1dhogkqZshIknqZohIkroZIpKkbgtmewDjdsYZZ9Ty5ctnexiSNGfs3r37b6pq8VRt8y5Eli9fzq5du2Z7GJI0ZyR55khtXs6SJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdZt3T6zP1IW/vXW2h6Dj0O7/sHa2hyDNCs9EJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndRhoiSRYmuSvJ15M8keTnkpyeZEeSp9r3otY3SW5OMpHk4SQXDO1nXev/VJJ1Q/ULkzzStrk5SUZ5PJKkHzbqM5FPA39eVT8NnAc8AdwA3FdVK4D72jrA5cCK9tkA3AKQ5HRgI3AxcBGwcTJ4Wp9rh7ZbPeLjkSQNGVmIJDkN+AXgVoCq+l5VvQSsAba0bluAK9vyGmBrDewEFiY5E7gM2FFVB6rqILADWN3aTq2qnVVVwNahfUmSxmCUZyJnA/uBzyV5KMkfJvkxYElVPdf6PA8sactLgWeHtt/Taker75mi/gZJNiTZlWTX/v37Z3hYkqRJowyRBcAFwC1V9T7gO/zg0hUA7QyiRjiGyd/ZVFUrq2rl4sWLR/1zkjRvjDJE9gB7quqBtn4Xg1B5oV2Kon3va+17gbOGtl/WakerL5uiLkkak5GFSFU9Dzyb5O+20iXA48A2YHKG1Trg7ra8DVjbZmmtAl5ul722A5cmWdRuqF8KbG9tryRZ1WZlrR3alyRpDBaMeP+/AfxRkpOAp4FrGATXnUnWA88AV7W+9wBXABPAq60vVXUgySeAB1u/G6vqQFu+DrgNOAW4t30kSWMy0hCpqq8BK6doumSKvgVcf4T9bAY2T1HfBZw7w2FKkjr5xLokqZshIknqZohIkroZIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSepmiEiSuhkikqRuhogkqZshIknqZohIkroZIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSepmiEiSuo00RJJ8M8kjSb6WZFernZ5kR5Kn2veiVk+Sm5NMJHk4yQVD+1nX+j+VZN1Q/cK2/4m2bUZ5PJKkHzaOM5Ffqqrzq2plW78BuK+qVgD3tXWAy4EV7bMBuAUGoQNsBC4GLgI2TgZP63Pt0HarR384kqRJs3E5aw2wpS1vAa4cqm+tgZ3AwiRnApcBO6rqQFUdBHYAq1vbqVW1s6oK2Dq0L0nSGIw6RAr4n0l2J9nQakuq6rm2/DywpC0vBZ4d2nZPqx2tvmeK+hsk2ZBkV5Jd+/fvn8nxSJKGLBjx/v9BVe1N8uPAjiRfH26sqkpSIx4DVbUJ2ASwcuXKkf+eJM0XIz0Tqaq97Xsf8AUG9zReaJeiaN/7Wve9wFlDmy9rtaPVl01RlySNychCJMmPJXnX5DJwKfAosA2YnGG1Dri7LW8D1rZZWquAl9tlr+3ApUkWtRvqlwLbW9srSVa1WVlrh/YlSRqDUV7OWgJ8oc26XQD8t6r68yQPAncmWQ88A1zV+t8DXAFMAK8C1wBU1YEknwAebP1urKoDbfk64DbgFODe9pEkjcnIQqSqngbOm6L+InDJFPUCrj/CvjYDm6eo7wLOnfFgJUldfGJdktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1G3mIJDkxyUNJvtjWz07yQJKJJJ9PclKrv72tT7T25UP7+HirP5nksqH66labSHLDqI9FkvTDxnEm8pvAE0PrnwJuqqr3AgeB9a2+HjjY6je1fiQ5B7ga+BlgNfDZFkwnAp8BLgfOAT7S+kqSxmSkIZJkGfCPgD9s6wE+ANzVumwBrmzLa9o6rf2S1n8NcEdVfbeqvgFMABe1z0RVPV1V3wPuaH0lSWMy6jOR/wz8S+Bv2/q7gZeq6lBb3wMsbctLgWcBWvvLrf/r9cO2OVL9DZJsSLIrya79+/fP9JgkSc3IQiTJLwP7qmr3qH5juqpqU1WtrKqVixcvnu3hSNJbxoIR7vv9wK8muQI4GTgV+DSwMMmCdraxDNjb+u8FzgL2JFkAnAa8OFSfNLzNkeqSpDEY2ZlIVX28qpZV1XIGN8a/VFW/DtwPfKh1Wwfc3Za3tXVa+5eqqlr96jZ762xgBfAV4EFgRZvtdVL7jW2jOh5J0huN8kzkSP4VcEeS3wUeAm5t9VuB25NMAAcYhAJV9ViSO4HHgUPA9VX1fYAkHwO2AycCm6vqsbEeiSTNc2MJkar6C+Av2vLTDGZWHd7nNeDDR9j+k8Anp6jfA9zzJg5VkvQj8Il1SVK3aYVIkvumU5MkzS9HvZyV5GTgHcAZSRYBaU2ncoRnMiRJ88ex7on8M+C3gJ8AdvODEHkF+C8jHJckaQ44aohU1aeBTyf5jar6gzGNSZI0R0xrdlZV/UGSnweWD29TVVtHNC5J0hwwrRBJcjvwU8DXgO+3cgGGiCTNY9N9TmQlcE57glySJGD6z4k8CvydUQ5EkjT3TPdM5Azg8SRfAb47WayqXx3JqCRJc8J0Q+TfjXIQkqS5abqzs/7XqAciSZp7pjs761sMZmMBnAS8DfhOVZ06qoFJko5/0z0Tedfk8tDfPV81qkFJkuaGH/ktvjXwP4DLRjAeSdIcMt3LWR8cWj2BwXMjr41kRJKkOWO6s7N+ZWj5EPBNBpe0JEnz2HTviVwz6oFIkuae6f5RqmVJvpBkX/v8aZJlox6cJOn4Nt0b658DtjH4uyI/AfxZq0mS5rHphsjiqvpcVR1qn9uAxSMclyRpDphuiLyY5KNJTmyfjwIvjnJgkqTj33RD5J8CVwHPA88BHwL+yYjGJEmaI6YbIjcC66pqcVX9OINQ+Z2jbZDk5CRfSfJXSR5L8jutfnaSB5JMJPl8kpNa/e1tfaK1Lx/a18db/ckklw3VV7faRJIbfrRDlyTN1HRD5Ger6uDkSlUdAN53jG2+C3ygqs4DzgdWJ1kFfAq4qareCxwE1rf+64GDrX5T60eSc4CrgZ8BVgOfnbysBnwGuBw4B/hI6ytJGpPphsgJSRZNriQ5nWM8Y9Jej/Lttvq29ingA8Bdrb4FuLItr2nrtPZLht7TdUdVfbeqvgFMABe1z0RVPV1V3wPuwAcgJWmspvvE+n8E/k+SP2nrHwY+eayN2tnCbuC9DM4a/hp4qaoOtS57gKVteSnwLEBVHUryMvDuVt85tNvhbZ49rH7xEcaxAdgA8J73vOdYw5YkTdO0zkSqaivwQeCF9vlgVd0+je2+X1XnA8sYnDn89AzG2q2qNlXVyqpauXixM5Ml6c0y3TMRqupx4PGeH6mql5LcD/wcsDDJgnY2sgzY27rtBc4C9iRZAJzGYBrxZH3S8DZHqkuSxuBHfhX8dCVZnGRhWz4F+IfAE8D9DKYIA6wD7m7L29o6rf1LVVWtfnWbvXU2sAL4CvAgsKLN9jqJwc33baM6HknSG037TKTDmcCWdl/kBODOqvpikseBO5L8LvAQcGvrfytwe5IJ4ACDUKCqHktyJ4OzoEPA9VX1fYAkHwO2AycCm6vqsREejyTpMCMLkap6mCmmAVfV0wzujxxef43BDfup9vVJpriRX1X3APfMeLCSpC4ju5wlSXrrM0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3UYWIknOSnJ/kseTPJbkN1v99CQ7kjzVvhe1epLcnGQiycNJLhja17rW/6kk64bqFyZ5pG1zc5KM6ngkSW80yjORQ8C/qKpzgFXA9UnOAW4A7quqFcB9bR3gcmBF+2wAboFB6AAbgYuBi4CNk8HT+lw7tN3qER6PJOkwIwuRqnquqr7alr8FPAEsBdYAW1q3LcCVbXkNsLUGdgILk5wJXAbsqKoDVXUQ2AGsbm2nVtXOqipg69C+JEljMJZ7IkmWA+8DHgCWVNVzrel5YElbXgo8O7TZnlY7Wn3PFHVJ0piMPESSvBP4U+C3quqV4bZ2BlFjGMOGJLuS7Nq/f/+of06S5o2RhkiStzEIkD+qqv/eyi+0S1G0732tvhc4a2jzZa12tPqyKepvUFWbqmplVa1cvHjxzA5KkvS6Uc7OCnAr8ERV/aehpm3A5AyrdcDdQ/W1bZbWKuDldtlrO3BpkkXthvqlwPbW9kqSVe231g7tS5I0BgtGuO/3A/8YeCTJ11rtXwO/B9yZZD3wDHBVa7sHuAKYAF4FrgGoqgNJPgE82PrdWFUH2vJ1wG3AKcC97SNJGpORhUhV/W/gSM9tXDJF/wKuP8K+NgObp6jvAs6dwTAlSTPgE+uSpG6GiCSpmyEiSepmiEiSuhkikqRuhogkqZshIknqZohIkroZIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSepmiEiSuhkikqRuhogkqZshIknqZohIkroZIpKkboaIJKmbISJJ6jayEEmyOcm+JI8O1U5PsiPJU+17Uasnyc1JJpI8nOSCoW3Wtf5PJVk3VL8wySNtm5uTZFTHIkma2ijPRG4DVh9WuwG4r6pWAPe1dYDLgRXtswG4BQahA2wELgYuAjZOBk/rc+3Qdof/liRpxEYWIlX1ZeDAYeU1wJa2vAW4cqi+tQZ2AguTnAlcBuyoqgNVdRDYAaxubadW1c6qKmDr0L4kSWMy7nsiS6rqubb8PLCkLS8Fnh3qt6fVjlbfM0V9Skk2JNmVZNf+/ftndgSSpNfN2o31dgZRY/qtTVW1sqpWLl68eBw/KUnzwrhD5IV2KYr2va/V9wJnDfVb1mpHqy+boi5JGqNxh8g2YHKG1Trg7qH62jZLaxXwcrvstR24NMmidkP9UmB7a3slyao2K2vt0L4kSWOyYFQ7TvLHwC8CZyTZw2CW1e8BdyZZDzwDXNW63wNcAUwArwLXAFTVgSSfAB5s/W6sqsmb9dcxmAF2CnBv+0iSxmhkIVJVHzlC0yVT9C3g+iPsZzOweYr6LuDcmYxRkjQzPrEuSepmiEiSuhkikqRuI7snImn8/u+Nf2+2h6Dj0Hv+7SMj27dnIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSepmiEiSuhkikqRuhogkqZshIknqZohIkroZIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSeo250MkyeokTyaZSHLDbI9HkuaTOR0iSU4EPgNcDpwDfCTJObM7KkmaP+Z0iAAXARNV9XRVfQ+4A1gzy2OSpHljwWwPYIaWAs8Ore8BLj68U5INwIa2+u0kT45hbPPBGcDfzPYgjgf5/XWzPQS9kf8+J23MTPfwk0dqmOshMi1VtQnYNNvjeKtJsquqVs72OKSp+O9zPOb65ay9wFlD68taTZI0BnM9RB4EViQ5O8lJwNXAtlkekyTNG3P6clZVHUryMWA7cCKwuaoem+VhzSdeItTxzH+fY5Cqmu0xSJLmqLl+OUuSNIsMEUlSN0NEx3SsV8skeXuSz7f2B5IsH/8oNR8l2ZxkX5JHj9CeJDe3f5sPJ7lg3GN8qzNEdFTTfLXMeuBgVb0XuAn41HhHqXnsNmD1UdovB1a0zwbgljGMaV4xRHQs03m1zBpgS1u+C7gkyYwfkZWOpaq+DBw4Spc1wNYa2AksTHLmeEY3PxgiOpapXi2z9Eh9quoQ8DLw7rGMTjq66fz71QwYIpKkboaIjmU6r5Z5vU+SBcBpwItjGZ10dL4aacQMER3LdF4tsw2YfI3th4AvlU+x6viwDVjbZmmtAl6uqudme1BvJXP6tScavSO9WibJjcCuqtoG3ArcnmSCwU3Oq2dvxJpPkvwx8IvAGUn2ABuBtwFU1X8F7gGuACaAV4FrZmekb12+9kSS1M3LWZKkboaIJKmbISJJ6maISJK6GSKSpG6GiPQmSrIwyXVj+J0rp3gRpjR2hoj05loITDtE2kNwPf8Pr2TwVmVpVvmciPQmSjL5luMngfuBnwUWMXgA7t9U1d3t761sBx4ALmTwMNxa4KPAfgYvDNxdVb+f5KcYvIp/MYOH5a4FTge+yOBFly8Dv1ZVfz2mQ5R+iE+sS2+uG4Bzq+r89h6xd1TVK0nOAHYmmXxlzApgXVXtTPL3gV8DzmMQNl8Fdrd+m4B/XlVPJbkY+GxVfaDt54tVddc4D046nCEijU6Af5/kF4C/ZfAK8iWt7Zn29y0A3g/cXVWvAa8l+TOAJO8Efh74k6E/z/L2cQ1emg5DRBqdX2dwGerCqvp/Sb4JnNzavjON7U8AXqqq80c0PmnGvLEuvbm+BbyrLZ8G7GsB8kvATx5hm78EfiXJye3s45cBquoV4BtJPgyv34Q/b4rfkWaNISK9iarqReAvkzwKnA+sTPIIgxvnXz/CNg8yeGX5w8C9wCMMbpjD4GxmfZK/Ah7jB3+a+A7gt5M81G6+S7PC2VnScSDJO6vq20neAXwZ2FBVX53tcUnH4j0R6fiwqT08eDKwxQDRXOGZiCSpm/dEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3f4/mO3NNYwiA6AAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1nDpIC9z4M8l",
        "colab_type": "text"
      },
      "source": [
        "# Modeling"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7TSeJHqv4M8m",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "train = df.iloc[0:len(train), ]\n",
        "test = df.iloc[len(train)::, ]\n",
        "\n",
        "X = train.drop(columns=['target','ID_code'])\n",
        "y = train.target\n",
        "\n",
        "# splitting dataset\n",
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)"
      ],
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pnZjbPV04M8o",
        "colab_type": "text"
      },
      "source": [
        "### Feature Scaling\n",
        "\n",
        "By testing feature scaling, we concluded that it was not improving our model."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l-cjPEdI4M8o",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#from sklearn.preprocessing import StandardScaler\n",
        "#sc = StandardScaler()\n",
        "\n",
        "#X_train = sc.fit_transform(X_train)\n",
        "#X_test = sc.transform(X_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xzoVW5Hi4M8r",
        "colab_type": "text"
      },
      "source": [
        "### PCA\n",
        "\n",
        "By testing PCA, we concluded that it was not improving our model."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AjAZyASy4M8r",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#from sklearn.decomposition import PCA\n",
        "\n",
        "#pca = PCA(n_components = 200)\n",
        "#X_train = pca.fit_transform(X_train)\n",
        "#X_test = pca.transform(X_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qJO6nxRVvK-C",
        "colab_type": "text"
      },
      "source": [
        "### Sampling"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lOzfXjgZvXoK",
        "colab_type": "text"
      },
      "source": [
        "#### Oversampling"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T13sIlYDvQmY",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X_over = pd.concat([X_train, Y_train], axis=1)\n",
        "\n",
        "class_1 = X_over[X_over.target_status == 1]\n",
        "class_2 = X_over[X_over.target_status == 0]\n",
        "\n",
        "oversampled = resample(class_1, replace=True, n_samples=len(class_2),\n",
        "                       random_state=666)\n",
        "\n",
        "oversampled = pd.concat([class_1, oversampled])\n",
        "oversampled.target_status.value_counts()\n",
        "y_train_over = oversampled.target_status\n",
        "X_train_over = oversampled.drop('target_status', axis=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vX7X9kTM4M8t",
        "colab_type": "text"
      },
      "source": [
        "#### SMOTE - Oversampling"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_HIGHJtR4M8u",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "outputId": "bf7e83d0-538d-49d9-81fa-397dfa498df7"
      },
      "source": [
        "from imblearn.over_sampling import SMOTE\n",
        "sm = SMOTE(sampling_strategy='auto', k_neighbors=1, random_state=0)\n",
        "X_sm, y_sm = sm.fit_resample(X, y)\n",
        "\n",
        "# splitting dataset\n",
        "from sklearn.model_selection import train_test_split\n",
        "Xsm_train, Xsm_test, ysm_train, ysm_test = train_test_split(X_sm, y_sm, test_size = 0.2, random_state = 0)"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/externals/six.py:31: FutureWarning:\n",
            "\n",
            "The module is deprecated in version 0.21 and will be removed in version 0.23 since we've dropped support for Python 2.7. Please rely on the official version of six (https://pypi.org/project/six/).\n",
            "\n",
            "/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning:\n",
            "\n",
            "The sklearn.neighbors.base module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.\n",
            "\n",
            "/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning:\n",
            "\n",
            "Function safe_indexing is deprecated; safe_indexing is deprecated in version 0.22 and will be removed in version 0.24.\n",
            "\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OBwA5DUCvmve",
        "colab_type": "text"
      },
      "source": [
        "#### Undersampling"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FbOtzQfIvl0h",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "undersampled = resample(class_2, replace=True,\n",
        "                        n_samples=len(class_1), random_state=666)\n",
        "\n",
        "undersampled = pd.concat([undersampled, class_1])\n",
        "undersampled.target_status.value_counts()\n",
        "\n",
        "y_train_under = undersampled.target_status\n",
        "X_train_under = undersampled.drop('target_status', axis=1)\n",
        "undersampled = RandomUnderSampler(random_state=666)\n",
        "X_train_random_under, y_train_random_under = undersampled.fit_resample(X_train_under.values, y_train_under.values)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RaywTQtbv_IA",
        "colab_type": "text"
      },
      "source": [
        "#### Undersampling - Tomek Link"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LsWElHJlv_4c",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X_train_TL, y_train_TL = NearMiss().fit_resample(X_train, Y_train.values)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eHWGEmQo4M8z",
        "colab_type": "text"
      },
      "source": [
        "### LogisticRegression\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "phadY-By4M8z",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        },
        "outputId": "e988fa2e-1010-41f0-9683-4bed6258569f"
      },
      "source": [
        "model_lr = LogisticRegression(max_iter=100,random_state=0, solver= 'liblinear') # penalty='none'\n",
        "model_lr.fit(X_train, y_train)\n",
        "y_pred = model_lr.predict(X_test)\n",
        "print(\"model_lr = \", accuracy_score(y_test, y_pred))\n",
        "roc_auc = roc_auc_score(y_test,y_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_lr =  0.9025\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning:\n",
            "\n",
            "lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5364449154242595"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O7wRIksg4M82",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        },
        "outputId": "06ed44b8-c610-4a81-935e-c1bdf3e10f4e"
      },
      "source": [
        "model_lr_SM = LogisticRegression(max_iter=100, penalty='none' ,random_state=0) \n",
        "model_lr_SM.fit(Xsm_train, ysm_train)\n",
        "ysm_pred = model_lr_SM.predict(Xsm_test)\n",
        "print(\"model_lr = \", accuracy_score(ysm_test, ysm_pred))\n",
        "roc_auc = roc_auc_score(ysm_test,ysm_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_lr =  0.7904003557482525\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning:\n",
            "\n",
            "lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7904299958392892"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0GzMzRmb9e91",
        "colab_type": "text"
      },
      "source": [
        "### RandomizedSearchCV"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "y5Z0Cq80QtdM",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        },
        "outputId": "668ec663-9e5c-4370-bb96-d4a2d3e55e32"
      },
      "source": [
        "from sklearn.model_selection import RandomizedSearchCV\n",
        "C = LogisticRegression()\n",
        "param = [0.0001, 0.001, 0.01, 0.1, 1, 5, 12, 20,30, 40]\n",
        "parameters = {'C': param}\n",
        "\n",
        "model_lr_SM2 = RandomizedSearchCV(C, parameters, cv=3, scoring='roc_auc', return_train_score=True, n_jobs=-1)\n",
        "model_lr_SM2.fit(Xsm_train, ysm_train)\n",
        "\n",
        "ysm_pred2 = model_lr_SM2.predict(Xsm_test)\n",
        "print(\"model_lr2 = \", accuracy_score(ysm_test, ysm_pred2))\n",
        "roc_auc = roc_auc_score(ysm_test,ysm_pred2)\n",
        "roc_auc\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_lr2 =  0.792526507413738\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning:\n",
            "\n",
            "lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7925402156215937"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bU98TvpXlkkQ",
        "colab_type": "text"
      },
      "source": [
        "### Feature Importance"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fPjw-17-4M84",
        "colab_type": "code",
        "colab": {},
        "outputId": "e9b6dd53-53fd-4f1f-fb54-af089d8a7b43"
      },
      "source": [
        "print (\"FEATURE IMPORTANCE...\")\n",
        "\n",
        "list_inputs = [c for c in train.columns if c != 'target']\n",
        "\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "print (\"STEP 2.1: FEATURE IMPORTANCE WITH RANDOM FOREST...\")\n",
        "# Build a forest and compute the feature importances\n",
        "forest = RandomForestClassifier(n_estimators=20,random_state=0)\n",
        "\n",
        "forest.fit(X, y)\n",
        "importances = forest.feature_importances_\n",
        "std = np.std([tree.feature_importances_ for tree in forest.estimators_],\n",
        "             axis=0)\n",
        "indices = np.argsort(importances)[::-1]\n",
        "\n",
        "# Print the feature ranking\n",
        "print(\"Feature ranking:\")\n",
        "Feat = []\n",
        "for f in range(202):\n",
        "    print(\"%d. feature %s (%f) \" % (f + 1, list_inputs[indices[f]], importances[indices[f]] ))\n",
        "    Feat.append(list_inputs[indices[f]])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "STEP 3: FEATURE IMPORTANCE...\n",
            "STEP 2.1: FEATURE IMPORTANCE WITH RANDOM FOREST...\n",
            "Feature ranking:\n",
            "1. feature var_81 (0.019058) \n",
            "2. feature var_12 (0.016067) \n",
            "3. feature var_53 (0.014778) \n",
            "4. feature var_26 (0.014436) \n",
            "5. feature var_22 (0.014309) \n",
            "6. feature var_76 (0.013805) \n",
            "7. feature var_6 (0.013706) \n",
            "8. feature var_80 (0.013634) \n",
            "9. feature var_2 (0.012847) \n",
            "10. feature var_99 (0.012828) \n",
            "11. feature var_13 (0.012509) \n",
            "12. feature var_21 (0.012239) \n",
            "13. feature var_44 (0.012198) \n",
            "14. feature var_0 (0.012160) \n",
            "15. feature var_40 (0.012088) \n",
            "16. feature var_94 (0.012049) \n",
            "17. feature var_78 (0.011977) \n",
            "18. feature var_1 (0.011922) \n",
            "19. feature var_34 (0.011843) \n",
            "20. feature var_92 (0.011696) \n",
            "21. feature var_33 (0.011593) \n",
            "22. feature var_9 (0.011544) \n",
            "23. feature var_18 (0.011334) \n",
            "24. feature var_91 (0.011222) \n",
            "25. feature var_86 (0.011016) \n",
            "26. feature var_67 (0.010983) \n",
            "27. feature var_75 (0.010922) \n",
            "28. feature var_95 (0.010895) \n",
            "29. feature var_89 (0.010647) \n",
            "30. feature var_56 (0.010426) \n",
            "31. feature var_49 (0.010255) \n",
            "32. feature var_5 (0.010224) \n",
            "33. feature var_51 (0.010197) \n",
            "34. feature var_36 (0.010149) \n",
            "35. feature var_43 (0.010101) \n",
            "36. feature var_93 (0.010066) \n",
            "37. feature var_35 (0.010012) \n",
            "38. feature var_87 (0.009979) \n",
            "39. feature var_32 (0.009935) \n",
            "40. feature var_85 (0.009866) \n",
            "41. feature var_83 (0.009713) \n",
            "42. feature var_71 (0.009649) \n",
            "43. feature var_48 (0.009503) \n",
            "44. feature var_70 (0.009318) \n",
            "45. feature var_55 (0.009270) \n",
            "46. feature var_90 (0.009248) \n",
            "47. feature var_24 (0.009218) \n",
            "48. feature var_23 (0.009216) \n",
            "49. feature var_52 (0.009142) \n",
            "50. feature var_3 (0.009131) \n",
            "51. feature var_69 (0.009108) \n",
            "52. feature var_11 (0.009057) \n",
            "53. feature var_82 (0.009044) \n",
            "54. feature var_88 (0.009010) \n",
            "55. feature var_58 (0.008977) \n",
            "56. feature var_37 (0.008974) \n",
            "57. feature var_66 (0.008939) \n",
            "58. feature var_15 (0.008905) \n",
            "59. feature var_4 (0.008889) \n",
            "60. feature var_62 (0.008878) \n",
            "61. feature var_79 (0.008851) \n",
            "62. feature var_17 (0.008811) \n",
            "63. feature var_74 (0.008791) \n",
            "64. feature var_45 (0.008787) \n",
            "65. feature var_59 (0.008750) \n",
            "66. feature var_28 (0.008746) \n",
            "67. feature var_25 (0.008727) \n",
            "68. feature var_8 (0.008722) \n",
            "69. feature var_63 (0.008721) \n",
            "70. feature var_16 (0.008719) \n",
            "71. feature var_20 (0.008682) \n",
            "72. feature var_60 (0.008631) \n",
            "73. feature var_31 (0.008603) \n",
            "74. feature var_77 (0.008580) \n",
            "75. feature var_7 (0.008548) \n",
            "76. feature var_19 (0.008547) \n",
            "77. feature var_41 (0.008534) \n",
            "78. feature var_29 (0.008518) \n",
            "79. feature var_64 (0.008515) \n",
            "80. feature var_46 (0.008497) \n",
            "81. feature var_57 (0.008488) \n",
            "82. feature var_72 (0.008484) \n",
            "83. feature var_50 (0.008479) \n",
            "84. feature var_65 (0.008446) \n",
            "85. feature var_73 (0.008426) \n",
            "86. feature var_98 (0.008423) \n",
            "87. feature var_10 (0.008418) \n",
            "88. feature var_97 (0.008401) \n",
            "89. feature var_61 (0.008352) \n",
            "90. feature var_84 (0.008326) \n",
            "91. feature var_54 (0.008323) \n",
            "92. feature var_68 (0.008317) \n",
            "93. feature var_27 (0.008314) \n",
            "94. feature var_42 (0.008278) \n",
            "95. feature var_38 (0.008263) \n",
            "96. feature var_14 (0.008225) \n",
            "97. feature var_39 (0.008113) \n",
            "98. feature var_30 (0.008066) \n",
            "99. feature var_47 (0.007962) \n",
            "100. feature var_96 (0.007909) \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "IndexError",
          "evalue": "index 100 is out of bounds for axis 0 with size 100",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-50-ff547cb82f81>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0mFeat\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mf\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m202\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 20\u001b[0;31m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"%d. feature %s (%f) \"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlist_inputs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mindices\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimportances\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mindices\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     21\u001b[0m     \u001b[0mFeat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlist_inputs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mindices\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mIndexError\u001b[0m: index 100 is out of bounds for axis 0 with size 100"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "moSyzBM74M86",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "topFeat = Feat[:100]\n",
        "\n",
        "X2 = train[topFeat]\n",
        "y = train.target\n",
        "\n",
        "# splitting dataset\n",
        "from sklearn.model_selection import train_test_split\n",
        "X2_train, X2_test, y_train, y_test = train_test_split(X2, y, test_size = 0.2, random_state = 0)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TitKpQIy4M88",
        "colab_type": "code",
        "colab": {},
        "outputId": "1c54b85a-cf82-4b5f-a720-b183fa39e840"
      },
      "source": [
        "model_lr2 = LogisticRegression(max_iter=100, penalty='none',random_state=0)\n",
        "model_lr2.fit(X2_train, y_train)\n",
        "y_pred = model_lr2.predict(X2_test)\n",
        "print(\"model_lr = \", accuracy_score(y_test, y_pred))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_lr =  0.90255\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/Applications/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning:\n",
            "\n",
            "lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "g3iabALt4M9H",
        "colab_type": "text"
      },
      "source": [
        "### DecisionTreeClassifier\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3M62aSKR4M9H",
        "colab_type": "code",
        "colab": {},
        "outputId": "d13207bc-6499-40b3-c25f-af1889814d5d"
      },
      "source": [
        "model_DTC = DecisionTreeClassifier(min_samples_split=20, random_state=0)\n",
        "#model_DTC.fit(X_train, y_train)\n",
        "#y_pred = model_DTC.predict(X_test)\n",
        "print(\"model_DTC = \", accuracy_score(y_test, y_pred))\n",
        "roc_auc = roc_auc_score(y_test,y_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_DTC =  0.902475\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5368737000667729"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BJp9--E14M9J",
        "colab_type": "text"
      },
      "source": [
        "### KNN Classifier\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AMQcPDaY4M9M",
        "colab_type": "code",
        "colab": {},
        "outputId": "5a22bae3-a145-4fa3-8b89-56d956ac9878"
      },
      "source": [
        "model_KNN = KNeighborsClassifier(n_neighbors = 5, metric = \"minkowski\", p = 2)\n",
        "model_KNN.fit(X_train, y_train)\n",
        "y_pred = model_KNN.predict(X_test)\n",
        "print(\"model_KNN = \", accuracy_score(y_test, y_pred))\n",
        "roc_auc = roc_auc_score(y_test,y_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_KNN =  0.897675\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5014477547889894"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fD2MAjSK4M9P",
        "colab_type": "text"
      },
      "source": [
        "### GaussianNB\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2Oqrm9Zn4M9P",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "c24146a2-5340-4ed6-9548-fa1d390581d4"
      },
      "source": [
        "model_GNB = GaussianNB(priors=None)\n",
        "model_GNB.fit(Xsm_train, ysm_train)\n",
        "y_pred = model_GNB.predict(Xsm_test)\n",
        "print(\"model_GNB = \", accuracy_score(ysm_test, y_pred))\n",
        "roc_auc = roc_auc_score(ysm_test,y_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_GNB =  0.8646766998791012\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8644304094694393"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AVHZFKxP4M9Y",
        "colab_type": "text"
      },
      "source": [
        "### XGBoost\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iIo6tzL14M9Y",
        "colab_type": "code",
        "colab": {},
        "outputId": "1ea3e3ab-d3be-4c27-9995-b45db644db63"
      },
      "source": [
        "model_XGC = XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n",
        "                    colsample_bytree=1, gamma=0, learning_rate=0.9, max_delta_step=0,\n",
        "                    max_depth = 7, min_child_weight=1, missing=None, n_estimators=100,\n",
        "                    n_jobs=1, nthread=None, objective='binary:logistic', random_state=0,\n",
        "                    reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n",
        "                    subsample=1) #silent=True\n",
        "\n",
        "\n",
        "\n",
        "model_XGC.fit(X_train, y_train)\n",
        "y_pred = model_XGC.predict(X_test)\n",
        "print(\"model_XGC = \", accuracy_score(y_test, y_pred))\n",
        "roc_auc = roc_auc_score(y_test,y_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_XGC =  0.877375\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5782586975154015"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xlQi2raX4M9a",
        "colab_type": "text"
      },
      "source": [
        "### Support Vector Machine\n",
        "accuracy_score ="
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gzs3mX-e4M9b",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model_SVC = SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n",
        "               decision_function_shape='ovr', degree=3, gamma=1.0, kernel='linear',\n",
        "               max_iter=-1, probability=True, random_state=None, shrinking=True,\n",
        "               tol=0.001, verbose=False)\n",
        "\n",
        "model_SVC.fit(X_train, y_train)\n",
        "y_pred = model_SVC.predict(X_test)\n",
        "print(\"model_SVC = \", accuracy_score(y_test, y_pred))\n",
        "roc_auc = roc_auc_score(y_test,y_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dwAxm6ST4M9c",
        "colab_type": "text"
      },
      "source": [
        "### RandomForestClassifier\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yoY_FHKD4M9d",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "acf11436-7695-4b3d-f47b-5c993f3e372d"
      },
      "source": [
        "model_RFC = RandomForestClassifier(n_jobs=2, n_estimators = 450, random_state=0, criterion='entropy')\n",
        "model_RFC.fit(Xsm_train, ysm_train)\n",
        "ysm_pred = model_RFC.predict(Xsm_test)\n",
        "print(\"model_RFC = \", accuracy_score(ysm_test, ysm_pred))\n",
        "roc_auc = roc_auc_score(ysm_test,ysm_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_RFC =  0.9720821000264032\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9720284314262265"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QRuLPgUAwexZ",
        "colab_type": "text"
      },
      "source": [
        "### Feature Selection With Random Forrest"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nkOJaHW-XNfp",
        "colab_type": "code",
        "colab": {},
        "outputId": "5250ce9c-f86d-41fc-af38-76fd899f708a"
      },
      "source": [
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.feature_selection import SelectFromModel\n",
        "\n",
        "sel = SelectFromModel(RandomForestClassifier())\n",
        "sel.fit(df, y)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "SelectFromModel(estimator=RandomForestClassifier(bootstrap='True',\n",
              "                                                 ccp_alpha=0.0,\n",
              "                                                 class_weight=None,\n",
              "                                                 criterion='entropy',\n",
              "                                                 max_depth=None,\n",
              "                                                 max_features='log2',\n",
              "                                                 max_leaf_nodes=None,\n",
              "                                                 max_samples=None,\n",
              "                                                 min_impurity_decrease=0.0,\n",
              "                                                 min_impurity_split=None,\n",
              "                                                 min_samples_leaf=1,\n",
              "                                                 min_samples_split=2,\n",
              "                                                 min_weight_fraction_leaf=0.0,\n",
              "                                                 n_estimators=20000, n_jobs=5,\n",
              "                                                 oob_score=True, random_state=5,\n",
              "                                                 verbose=0, warm_start=False),\n",
              "                max_features=None, norm_order=1, prefit=False, threshold=None)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LWSezkPQw7Hf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "sel.get_support()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vi4m0N31w9ud",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "selected_feat= df.columns[(sel.get_support())]\n",
        "len(selected_feat)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cV7U1ah-xB6Z",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X_train_sel=X[selected_feat]\n",
        "X_test_sel=X_test[selected_feat]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LBPWl-tYxlcY",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model_RFC = RandomForestClassifier(n_jobs=2, n_estimators = 450, random_state=0, criterion='entropy')\n",
        "model_RFC.fit(X_train_sel, y_train)\n",
        "ysm_pred = model_RFC.predict(X_test_sel)\n",
        "print(\"model_RFC = \", accuracy_score(y_test, ysm_pred))\n",
        "roc_auc = roc_auc_score(ysm_test,ysm_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0ym9DXNBojkC",
        "colab_type": "text"
      },
      "source": [
        "### Neural Net"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tAcBZ8oP4M9m",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "classes=1\n",
        "model = Sequential()\n",
        "model.add(Dense(16,activation='relu', input_shape=(200,)))\n",
        "model.add(Dense(64,activation='relu'))\n",
        "model.add(Dense(classes,activation='sigmoid'))\n",
        "model.summary()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bpywwGyB4M9r",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cQIkEfkP4M9v",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 734
        },
        "outputId": "2e1ec615-a8fa-49b4-e854-85fc95f4a3c1"
      },
      "source": [
        "history=model.fit(Xsm_train,ysm_train,batch_size=2048,epochs=20,validation_data=(Xsm_test,ysm_test))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Train on 287843 samples, validate on 71961 samples\n",
            "Epoch 1/20\n",
            "287843/287843 [==============================] - 1s 5us/step - loss: 0.8398 - accuracy: 0.5570 - val_loss: 0.6575 - val_accuracy: 0.6099\n",
            "Epoch 2/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.5994 - accuracy: 0.6752 - val_loss: 0.5434 - val_accuracy: 0.7280\n",
            "Epoch 3/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.5149 - accuracy: 0.7464 - val_loss: 0.4884 - val_accuracy: 0.7637\n",
            "Epoch 4/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4835 - accuracy: 0.7676 - val_loss: 0.4693 - val_accuracy: 0.7780\n",
            "Epoch 5/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4692 - accuracy: 0.7770 - val_loss: 0.4576 - val_accuracy: 0.7859\n",
            "Epoch 6/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4591 - accuracy: 0.7837 - val_loss: 0.4490 - val_accuracy: 0.7919\n",
            "Epoch 7/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4513 - accuracy: 0.7891 - val_loss: 0.4433 - val_accuracy: 0.7952\n",
            "Epoch 8/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4467 - accuracy: 0.7920 - val_loss: 0.4413 - val_accuracy: 0.7970\n",
            "Epoch 9/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4407 - accuracy: 0.7959 - val_loss: 0.4341 - val_accuracy: 0.8009\n",
            "Epoch 10/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4363 - accuracy: 0.7988 - val_loss: 0.4305 - val_accuracy: 0.8031\n",
            "Epoch 11/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4310 - accuracy: 0.8023 - val_loss: 0.4269 - val_accuracy: 0.8052\n",
            "Epoch 12/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4290 - accuracy: 0.8037 - val_loss: 0.4231 - val_accuracy: 0.8080\n",
            "Epoch 13/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4249 - accuracy: 0.8061 - val_loss: 0.4200 - val_accuracy: 0.8096\n",
            "Epoch 14/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4216 - accuracy: 0.8084 - val_loss: 0.4286 - val_accuracy: 0.8046\n",
            "Epoch 15/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4208 - accuracy: 0.8090 - val_loss: 0.4162 - val_accuracy: 0.8121\n",
            "Epoch 16/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4176 - accuracy: 0.8109 - val_loss: 0.4131 - val_accuracy: 0.8133\n",
            "Epoch 17/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4139 - accuracy: 0.8133 - val_loss: 0.4155 - val_accuracy: 0.8120\n",
            "Epoch 18/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4116 - accuracy: 0.8149 - val_loss: 0.4224 - val_accuracy: 0.8085\n",
            "Epoch 19/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4100 - accuracy: 0.8151 - val_loss: 0.4135 - val_accuracy: 0.8141\n",
            "Epoch 20/20\n",
            "287843/287843 [==============================] - 1s 4us/step - loss: 0.4080 - accuracy: 0.8166 - val_loss: 0.4098 - val_accuracy: 0.8153\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5fZ-plDF4M9x",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "ypred = model.predict(Xsm_test)\n",
        "roc_auc = roc_auc_score(ysm_test,y_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TLDvDuev4M9S",
        "colab_type": "text"
      },
      "source": [
        "### LGBMClassifier\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NZeGc0kC4M9S",
        "colab_type": "code",
        "colab": {},
        "outputId": "01fd0e67-7ba2-4e9e-9953-e382a4733c7e"
      },
      "source": [
        "model_LGBM = LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,\n",
        "                        learning_rate=0.5, max_depth=7, min_child_samples=20,\n",
        "                        min_child_weight=0.001, min_split_gain=0.0, n_estimators=100,\n",
        "                        n_jobs=-1, num_leaves=500, objective='binary', random_state=None,\n",
        "                        reg_alpha=0.0, reg_lambda=0.0, silent=True, subsample=1.0,\n",
        "                        subsample_for_bin=200000, subsample_freq=0)\n",
        "\n",
        "model_LGBM.fit(X_train, y_train)\n",
        "y_pred = model_LGBM.predict(X_test)\n",
        "print(\"model_LGBM = \", accuracy_score(y_test, y_pred))\n",
        "roc_auc = roc_auc_score(y_test,y_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_LGBM =  0.88945\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5796574934430987"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AWC3_WdtUel_",
        "colab_type": "text"
      },
      "source": [
        "### LGBMClassifier SMOTE"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2691jNErb0gY",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "83385732-17db-4bbc-c3d1-559337bd52a5"
      },
      "source": [
        "model_LGBM_SM = LGBMClassifier(bagging_freq = 5, bagging_fraction = 0.4, boost_from_average = False, boost = 'gbdt',\n",
        "feature_fraction = 0.05, learning_rate = 0.01, max_depth = -1, metric = 'auc', min_data_in_leaf = 80,\n",
        "min_sum_hessian_in_leaf = 10, num_leaves = 13, num_threads = 8, tree_learner = 'serial', objective = 'binary',\n",
        "verbosity = 1)\n",
        "\n",
        "model_LGBM_SM.fit(Xsm_train, ysm_train)\n",
        "ysm_pred = model_LGBM_SM.predict(Xsm_test)\n",
        "print(\"model_LGBM = \", accuracy_score(ysm_test, ysm_pred))\n",
        "roc_auc = roc_auc_score(ysm_test,ysm_pred)\n",
        "roc_auc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "model_LGBM =  0.8325759786551048\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8323757884448167"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "crAc1YXm5-Qs",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# set default parameters for 1st round training\n",
        "params = {'boosting': 'gbdt','objective':'regression','metric': 'rmse','learning_rate': 0.01, \n",
        "          'num_leaves': 110, 'max_bin': 66,  'max_depth': 10, 'min_data_in_leaf': 30, \n",
        "          'min_child_samples': 20,'feature_fraction': 0.5,'bagging_fraction': 0.8,'bagging_freq': 40,  \n",
        "          'bagging_seed': 11,'lambda_l1': 2,'lambda_l2': 0.1 }"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MvkF45PlJWZt",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "train_model = train.drop(columns=['target', 'ID_code'])\n",
        "test_model = test.drop(columns=['target', 'ID_code'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "P9rLMi5H5jnp",
        "colab_type": "text"
      },
      "source": [
        "### Lgb"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hh2QSNSdiMvT",
        "colab_type": "text"
      },
      "source": [
        "The below code is commented as it was not working as expected."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cghqToz95UDx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "92a3a886-60d4-457b-d9c4-cbd0b9cab647"
      },
      "source": [
        "#rkf = RepeatedKFold(n_splits=5, n_repeats=2, random_state=0)\n",
        "#for fold_, (train_index, test_index) in enumerate(rkf.split(train.values, train.target)):\n",
        "  #predictions = np.zeros(len(test))\n",
        "  #train_data = lgb.Dataset(train_model.iloc[train_index], label=train.target.iloc[train_index]) \n",
        "  #validation_data = lgb.Dataset(train_model.iloc[test_index], label=train.target.iloc[test_index])\n",
        "  \n",
        "  #iteration = 2000\n",
        "  #model = lgb.train(params, train_data, iteration, valid_sets=[validation_data], verbose_eval=100,early_stopping_rounds=100) \n",
        "  \n",
        "  #predictions = model.predict(test_model, num_iteration=model.best_iteration) / (5*2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [    3    14    17 ... 72905 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291747\n",
            "[200]\tvalid_0's rmse: 0.285526\n",
            "[300]\tvalid_0's rmse: 0.281068\n",
            "[400]\tvalid_0's rmse: 0.277726\n",
            "[500]\tvalid_0's rmse: 0.275079\n",
            "[600]\tvalid_0's rmse: 0.27291\n",
            "[700]\tvalid_0's rmse: 0.271144\n",
            "[800]\tvalid_0's rmse: 0.269734\n",
            "[900]\tvalid_0's rmse: 0.268572\n",
            "[1000]\tvalid_0's rmse: 0.267497\n",
            "[1100]\tvalid_0's rmse: 0.266586\n",
            "[1200]\tvalid_0's rmse: 0.265888\n",
            "[1300]\tvalid_0's rmse: 0.265267\n",
            "[1400]\tvalid_0's rmse: 0.264738\n",
            "[1500]\tvalid_0's rmse: 0.264234\n",
            "[1600]\tvalid_0's rmse: 0.263807\n",
            "[1700]\tvalid_0's rmse: 0.263483\n",
            "[1800]\tvalid_0's rmse: 0.263198\n",
            "[1900]\tvalid_0's rmse: 0.262981\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "TRAIN: [    1     2     3 ... 72907 72908 72910] TEST: [    0     6    11 ... 72900 72902 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294111\n",
            "[200]\tvalid_0's rmse: 0.288443\n",
            "[300]\tvalid_0's rmse: 0.284251\n",
            "[400]\tvalid_0's rmse: 0.281047\n",
            "[500]\tvalid_0's rmse: 0.27845\n",
            "[600]\tvalid_0's rmse: 0.276293\n",
            "[700]\tvalid_0's rmse: 0.274555\n",
            "[800]\tvalid_0's rmse: 0.273134\n",
            "[900]\tvalid_0's rmse: 0.271914\n",
            "[1000]\tvalid_0's rmse: 0.270905\n",
            "[1100]\tvalid_0's rmse: 0.269961\n",
            "[1200]\tvalid_0's rmse: 0.269243\n",
            "[1300]\tvalid_0's rmse: 0.268578\n",
            "[1400]\tvalid_0's rmse: 0.268063\n",
            "[1500]\tvalid_0's rmse: 0.267634\n",
            "[1600]\tvalid_0's rmse: 0.267238\n",
            "[1700]\tvalid_0's rmse: 0.26691\n",
            "[1800]\tvalid_0's rmse: 0.266643\n",
            "[1900]\tvalid_0's rmse: 0.266371\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "TRAIN: [    0     2     3 ... 72908 72909 72910] TEST: [    1     4     9 ... 72894 72903 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290089\n",
            "[200]\tvalid_0's rmse: 0.28383\n",
            "[300]\tvalid_0's rmse: 0.279385\n",
            "[400]\tvalid_0's rmse: 0.275832\n",
            "[500]\tvalid_0's rmse: 0.272987\n",
            "[600]\tvalid_0's rmse: 0.270751\n",
            "[700]\tvalid_0's rmse: 0.268905\n",
            "[800]\tvalid_0's rmse: 0.267407\n",
            "[900]\tvalid_0's rmse: 0.266094\n",
            "[1000]\tvalid_0's rmse: 0.264997\n",
            "[1100]\tvalid_0's rmse: 0.264064\n",
            "[1200]\tvalid_0's rmse: 0.263277\n",
            "[1300]\tvalid_0's rmse: 0.262663\n",
            "[1400]\tvalid_0's rmse: 0.262124\n",
            "[1500]\tvalid_0's rmse: 0.261694\n",
            "[1600]\tvalid_0's rmse: 0.261322\n",
            "[1700]\tvalid_0's rmse: 0.260995\n",
            "[1800]\tvalid_0's rmse: 0.260709\n",
            "[1900]\tvalid_0's rmse: 0.260489\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "TRAIN: [    0     1     3 ... 72907 72909 72910] TEST: [    2     7     8 ... 72877 72892 72908]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.293128\n",
            "[200]\tvalid_0's rmse: 0.287017\n",
            "[300]\tvalid_0's rmse: 0.282348\n",
            "[400]\tvalid_0's rmse: 0.278767\n",
            "[500]\tvalid_0's rmse: 0.275915\n",
            "[600]\tvalid_0's rmse: 0.273598\n",
            "[700]\tvalid_0's rmse: 0.271662\n",
            "[800]\tvalid_0's rmse: 0.270127\n",
            "[900]\tvalid_0's rmse: 0.26882\n",
            "[1000]\tvalid_0's rmse: 0.267728\n",
            "[1100]\tvalid_0's rmse: 0.266823\n",
            "[1200]\tvalid_0's rmse: 0.26607\n",
            "[1300]\tvalid_0's rmse: 0.265355\n",
            "[1400]\tvalid_0's rmse: 0.264762\n",
            "[1500]\tvalid_0's rmse: 0.264251\n",
            "[1600]\tvalid_0's rmse: 0.263841\n",
            "[1700]\tvalid_0's rmse: 0.263454\n",
            "[1800]\tvalid_0's rmse: 0.26315\n",
            "[1900]\tvalid_0's rmse: 0.262887\n",
            "[2000]\tvalid_0's rmse: 0.262685\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1998]\tvalid_0's rmse: 0.262682\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    5    10    13 ... 72897 72898 72899]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.288058\n",
            "[200]\tvalid_0's rmse: 0.282042\n",
            "[300]\tvalid_0's rmse: 0.277666\n",
            "[400]\tvalid_0's rmse: 0.274219\n",
            "[500]\tvalid_0's rmse: 0.271488\n",
            "[600]\tvalid_0's rmse: 0.269374\n",
            "[700]\tvalid_0's rmse: 0.267702\n",
            "[800]\tvalid_0's rmse: 0.266231\n",
            "[900]\tvalid_0's rmse: 0.26497\n",
            "[1000]\tvalid_0's rmse: 0.263937\n",
            "[1100]\tvalid_0's rmse: 0.263078\n",
            "[1200]\tvalid_0's rmse: 0.262259\n",
            "[1300]\tvalid_0's rmse: 0.261621\n",
            "[1400]\tvalid_0's rmse: 0.261126\n",
            "[1500]\tvalid_0's rmse: 0.260683\n",
            "[1600]\tvalid_0's rmse: 0.260279\n",
            "[1700]\tvalid_0's rmse: 0.259956\n",
            "[1800]\tvalid_0's rmse: 0.259709\n",
            "[1900]\tvalid_0's rmse: 0.259508\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "TRAIN: [    0     2     3 ... 72906 72907 72910] TEST: [    1     4     5 ... 72905 72908 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290765\n",
            "[200]\tvalid_0's rmse: 0.284734\n",
            "[300]\tvalid_0's rmse: 0.280311\n",
            "[400]\tvalid_0's rmse: 0.276793\n",
            "[500]\tvalid_0's rmse: 0.274067\n",
            "[600]\tvalid_0's rmse: 0.271808\n",
            "[700]\tvalid_0's rmse: 0.269987\n",
            "[800]\tvalid_0's rmse: 0.268509\n",
            "[900]\tvalid_0's rmse: 0.267202\n",
            "[1000]\tvalid_0's rmse: 0.266131\n",
            "[1100]\tvalid_0's rmse: 0.265195\n",
            "[1200]\tvalid_0's rmse: 0.264399\n",
            "[1300]\tvalid_0's rmse: 0.263658\n",
            "[1400]\tvalid_0's rmse: 0.263076\n",
            "[1500]\tvalid_0's rmse: 0.26259\n",
            "[1600]\tvalid_0's rmse: 0.262192\n",
            "[1700]\tvalid_0's rmse: 0.26189\n",
            "[1800]\tvalid_0's rmse: 0.261613\n",
            "[1900]\tvalid_0's rmse: 0.261371\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "TRAIN: [    0     1     3 ... 72908 72909 72910] TEST: [    2     6    12 ... 72893 72896 72901]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294846\n",
            "[200]\tvalid_0's rmse: 0.28867\n",
            "[300]\tvalid_0's rmse: 0.284003\n",
            "[400]\tvalid_0's rmse: 0.280604\n",
            "[500]\tvalid_0's rmse: 0.277742\n",
            "[600]\tvalid_0's rmse: 0.275424\n",
            "[700]\tvalid_0's rmse: 0.273705\n",
            "[800]\tvalid_0's rmse: 0.272211\n",
            "[900]\tvalid_0's rmse: 0.271004\n",
            "[1000]\tvalid_0's rmse: 0.269999\n",
            "[1100]\tvalid_0's rmse: 0.269027\n",
            "[1200]\tvalid_0's rmse: 0.268284\n",
            "[1300]\tvalid_0's rmse: 0.26762\n",
            "[1400]\tvalid_0's rmse: 0.26708\n",
            "[1500]\tvalid_0's rmse: 0.266558\n",
            "[1600]\tvalid_0's rmse: 0.266125\n",
            "[1700]\tvalid_0's rmse: 0.265799\n",
            "[1800]\tvalid_0's rmse: 0.265527\n",
            "[1900]\tvalid_0's rmse: 0.265327\n",
            "[2000]\tvalid_0's rmse: 0.265147\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.265146\n",
            "TRAIN: [    1     2     4 ... 72908 72909 72910] TEST: [    0     3    11 ... 72894 72902 72904]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290396\n",
            "[200]\tvalid_0's rmse: 0.284551\n",
            "[300]\tvalid_0's rmse: 0.280181\n",
            "[400]\tvalid_0's rmse: 0.276809\n",
            "[500]\tvalid_0's rmse: 0.274079\n",
            "[600]\tvalid_0's rmse: 0.271791\n",
            "[700]\tvalid_0's rmse: 0.270034\n",
            "[800]\tvalid_0's rmse: 0.268549\n",
            "[900]\tvalid_0's rmse: 0.267253\n",
            "[1000]\tvalid_0's rmse: 0.266198\n",
            "[1100]\tvalid_0's rmse: 0.265408\n",
            "[1200]\tvalid_0's rmse: 0.264662\n",
            "[1300]\tvalid_0's rmse: 0.263996\n",
            "[1400]\tvalid_0's rmse: 0.263488\n",
            "[1500]\tvalid_0's rmse: 0.263041\n",
            "[1600]\tvalid_0's rmse: 0.262595\n",
            "[1700]\tvalid_0's rmse: 0.262226\n",
            "[1800]\tvalid_0's rmse: 0.261959\n",
            "[1900]\tvalid_0's rmse: 0.261717\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    7     8     9 ... 72895 72898 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290077\n",
            "[200]\tvalid_0's rmse: 0.28395\n",
            "[300]\tvalid_0's rmse: 0.279503\n",
            "[400]\tvalid_0's rmse: 0.276142\n",
            "[500]\tvalid_0's rmse: 0.273407\n",
            "[600]\tvalid_0's rmse: 0.271285\n",
            "[700]\tvalid_0's rmse: 0.269472\n",
            "[800]\tvalid_0's rmse: 0.268047\n",
            "[900]\tvalid_0's rmse: 0.266876\n",
            "[1000]\tvalid_0's rmse: 0.265787\n",
            "[1100]\tvalid_0's rmse: 0.264958\n",
            "[1200]\tvalid_0's rmse: 0.264249\n",
            "[1300]\tvalid_0's rmse: 0.263601\n",
            "[1400]\tvalid_0's rmse: 0.263094\n",
            "[1500]\tvalid_0's rmse: 0.262703\n",
            "[1600]\tvalid_0's rmse: 0.262302\n",
            "[1700]\tvalid_0's rmse: 0.26197\n",
            "[1800]\tvalid_0's rmse: 0.261698\n",
            "[1900]\tvalid_0's rmse: 0.261465\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [   18    22    30 ... 72899 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291468\n",
            "[200]\tvalid_0's rmse: 0.285498\n",
            "[300]\tvalid_0's rmse: 0.281145\n",
            "[400]\tvalid_0's rmse: 0.277769\n",
            "[500]\tvalid_0's rmse: 0.275158\n",
            "[600]\tvalid_0's rmse: 0.273075\n",
            "[700]\tvalid_0's rmse: 0.27131\n",
            "[800]\tvalid_0's rmse: 0.269739\n",
            "[900]\tvalid_0's rmse: 0.268523\n",
            "[1000]\tvalid_0's rmse: 0.267472\n",
            "[1100]\tvalid_0's rmse: 0.266555\n",
            "[1200]\tvalid_0's rmse: 0.265775\n",
            "[1300]\tvalid_0's rmse: 0.265106\n",
            "[1400]\tvalid_0's rmse: 0.26447\n",
            "[1500]\tvalid_0's rmse: 0.263939\n",
            "[1600]\tvalid_0's rmse: 0.263532\n",
            "[1700]\tvalid_0's rmse: 0.263191\n",
            "[1800]\tvalid_0's rmse: 0.262912\n",
            "[1900]\tvalid_0's rmse: 0.262672\n",
            "[2000]\tvalid_0's rmse: 0.262463\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.262462\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [    3    14    17 ... 72905 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291747\n",
            "[200]\tvalid_0's rmse: 0.285526\n",
            "[300]\tvalid_0's rmse: 0.281068\n",
            "[400]\tvalid_0's rmse: 0.277726\n",
            "[500]\tvalid_0's rmse: 0.275079\n",
            "[600]\tvalid_0's rmse: 0.27291\n",
            "[700]\tvalid_0's rmse: 0.271144\n",
            "[800]\tvalid_0's rmse: 0.269734\n",
            "[900]\tvalid_0's rmse: 0.268572\n",
            "[1000]\tvalid_0's rmse: 0.267497\n",
            "[1100]\tvalid_0's rmse: 0.266586\n",
            "[1200]\tvalid_0's rmse: 0.265888\n",
            "[1300]\tvalid_0's rmse: 0.265267\n",
            "[1400]\tvalid_0's rmse: 0.264738\n",
            "[1500]\tvalid_0's rmse: 0.264234\n",
            "[1600]\tvalid_0's rmse: 0.263807\n",
            "[1700]\tvalid_0's rmse: 0.263483\n",
            "[1800]\tvalid_0's rmse: 0.263198\n",
            "[1900]\tvalid_0's rmse: 0.262981\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "TRAIN: [    1     2     3 ... 72907 72908 72910] TEST: [    0     6    11 ... 72900 72902 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294111\n",
            "[200]\tvalid_0's rmse: 0.288443\n",
            "[300]\tvalid_0's rmse: 0.284251\n",
            "[400]\tvalid_0's rmse: 0.281047\n",
            "[500]\tvalid_0's rmse: 0.27845\n",
            "[600]\tvalid_0's rmse: 0.276293\n",
            "[700]\tvalid_0's rmse: 0.274555\n",
            "[800]\tvalid_0's rmse: 0.273134\n",
            "[900]\tvalid_0's rmse: 0.271914\n",
            "[1000]\tvalid_0's rmse: 0.270905\n",
            "[1100]\tvalid_0's rmse: 0.269961\n",
            "[1200]\tvalid_0's rmse: 0.269243\n",
            "[1300]\tvalid_0's rmse: 0.268578\n",
            "[1400]\tvalid_0's rmse: 0.268063\n",
            "[1500]\tvalid_0's rmse: 0.267634\n",
            "[1600]\tvalid_0's rmse: 0.267238\n",
            "[1700]\tvalid_0's rmse: 0.26691\n",
            "[1800]\tvalid_0's rmse: 0.266643\n",
            "[1900]\tvalid_0's rmse: 0.266371\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "TRAIN: [    0     2     3 ... 72908 72909 72910] TEST: [    1     4     9 ... 72894 72903 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290089\n",
            "[200]\tvalid_0's rmse: 0.28383\n",
            "[300]\tvalid_0's rmse: 0.279385\n",
            "[400]\tvalid_0's rmse: 0.275832\n",
            "[500]\tvalid_0's rmse: 0.272987\n",
            "[600]\tvalid_0's rmse: 0.270751\n",
            "[700]\tvalid_0's rmse: 0.268905\n",
            "[800]\tvalid_0's rmse: 0.267407\n",
            "[900]\tvalid_0's rmse: 0.266094\n",
            "[1000]\tvalid_0's rmse: 0.264997\n",
            "[1100]\tvalid_0's rmse: 0.264064\n",
            "[1200]\tvalid_0's rmse: 0.263277\n",
            "[1300]\tvalid_0's rmse: 0.262663\n",
            "[1400]\tvalid_0's rmse: 0.262124\n",
            "[1500]\tvalid_0's rmse: 0.261694\n",
            "[1600]\tvalid_0's rmse: 0.261322\n",
            "[1700]\tvalid_0's rmse: 0.260995\n",
            "[1800]\tvalid_0's rmse: 0.260709\n",
            "[1900]\tvalid_0's rmse: 0.260489\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "TRAIN: [    0     1     3 ... 72907 72909 72910] TEST: [    2     7     8 ... 72877 72892 72908]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.293128\n",
            "[200]\tvalid_0's rmse: 0.287017\n",
            "[300]\tvalid_0's rmse: 0.282348\n",
            "[400]\tvalid_0's rmse: 0.278767\n",
            "[500]\tvalid_0's rmse: 0.275915\n",
            "[600]\tvalid_0's rmse: 0.273598\n",
            "[700]\tvalid_0's rmse: 0.271662\n",
            "[800]\tvalid_0's rmse: 0.270127\n",
            "[900]\tvalid_0's rmse: 0.26882\n",
            "[1000]\tvalid_0's rmse: 0.267728\n",
            "[1100]\tvalid_0's rmse: 0.266823\n",
            "[1200]\tvalid_0's rmse: 0.26607\n",
            "[1300]\tvalid_0's rmse: 0.265355\n",
            "[1400]\tvalid_0's rmse: 0.264762\n",
            "[1500]\tvalid_0's rmse: 0.264251\n",
            "[1600]\tvalid_0's rmse: 0.263841\n",
            "[1700]\tvalid_0's rmse: 0.263454\n",
            "[1800]\tvalid_0's rmse: 0.26315\n",
            "[1900]\tvalid_0's rmse: 0.262887\n",
            "[2000]\tvalid_0's rmse: 0.262685\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1998]\tvalid_0's rmse: 0.262682\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    5    10    13 ... 72897 72898 72899]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.288058\n",
            "[200]\tvalid_0's rmse: 0.282042\n",
            "[300]\tvalid_0's rmse: 0.277666\n",
            "[400]\tvalid_0's rmse: 0.274219\n",
            "[500]\tvalid_0's rmse: 0.271488\n",
            "[600]\tvalid_0's rmse: 0.269374\n",
            "[700]\tvalid_0's rmse: 0.267702\n",
            "[800]\tvalid_0's rmse: 0.266231\n",
            "[900]\tvalid_0's rmse: 0.26497\n",
            "[1000]\tvalid_0's rmse: 0.263937\n",
            "[1100]\tvalid_0's rmse: 0.263078\n",
            "[1200]\tvalid_0's rmse: 0.262259\n",
            "[1300]\tvalid_0's rmse: 0.261621\n",
            "[1400]\tvalid_0's rmse: 0.261126\n",
            "[1500]\tvalid_0's rmse: 0.260683\n",
            "[1600]\tvalid_0's rmse: 0.260279\n",
            "[1700]\tvalid_0's rmse: 0.259956\n",
            "[1800]\tvalid_0's rmse: 0.259709\n",
            "[1900]\tvalid_0's rmse: 0.259508\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "TRAIN: [    0     2     3 ... 72906 72907 72910] TEST: [    1     4     5 ... 72905 72908 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290765\n",
            "[200]\tvalid_0's rmse: 0.284734\n",
            "[300]\tvalid_0's rmse: 0.280311\n",
            "[400]\tvalid_0's rmse: 0.276793\n",
            "[500]\tvalid_0's rmse: 0.274067\n",
            "[600]\tvalid_0's rmse: 0.271808\n",
            "[700]\tvalid_0's rmse: 0.269987\n",
            "[800]\tvalid_0's rmse: 0.268509\n",
            "[900]\tvalid_0's rmse: 0.267202\n",
            "[1000]\tvalid_0's rmse: 0.266131\n",
            "[1100]\tvalid_0's rmse: 0.265195\n",
            "[1200]\tvalid_0's rmse: 0.264399\n",
            "[1300]\tvalid_0's rmse: 0.263658\n",
            "[1400]\tvalid_0's rmse: 0.263076\n",
            "[1500]\tvalid_0's rmse: 0.26259\n",
            "[1600]\tvalid_0's rmse: 0.262192\n",
            "[1700]\tvalid_0's rmse: 0.26189\n",
            "[1800]\tvalid_0's rmse: 0.261613\n",
            "[1900]\tvalid_0's rmse: 0.261371\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "TRAIN: [    0     1     3 ... 72908 72909 72910] TEST: [    2     6    12 ... 72893 72896 72901]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294846\n",
            "[200]\tvalid_0's rmse: 0.28867\n",
            "[300]\tvalid_0's rmse: 0.284003\n",
            "[400]\tvalid_0's rmse: 0.280604\n",
            "[500]\tvalid_0's rmse: 0.277742\n",
            "[600]\tvalid_0's rmse: 0.275424\n",
            "[700]\tvalid_0's rmse: 0.273705\n",
            "[800]\tvalid_0's rmse: 0.272211\n",
            "[900]\tvalid_0's rmse: 0.271004\n",
            "[1000]\tvalid_0's rmse: 0.269999\n",
            "[1100]\tvalid_0's rmse: 0.269027\n",
            "[1200]\tvalid_0's rmse: 0.268284\n",
            "[1300]\tvalid_0's rmse: 0.26762\n",
            "[1400]\tvalid_0's rmse: 0.26708\n",
            "[1500]\tvalid_0's rmse: 0.266558\n",
            "[1600]\tvalid_0's rmse: 0.266125\n",
            "[1700]\tvalid_0's rmse: 0.265799\n",
            "[1800]\tvalid_0's rmse: 0.265527\n",
            "[1900]\tvalid_0's rmse: 0.265327\n",
            "[2000]\tvalid_0's rmse: 0.265147\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.265146\n",
            "TRAIN: [    1     2     4 ... 72908 72909 72910] TEST: [    0     3    11 ... 72894 72902 72904]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290396\n",
            "[200]\tvalid_0's rmse: 0.284551\n",
            "[300]\tvalid_0's rmse: 0.280181\n",
            "[400]\tvalid_0's rmse: 0.276809\n",
            "[500]\tvalid_0's rmse: 0.274079\n",
            "[600]\tvalid_0's rmse: 0.271791\n",
            "[700]\tvalid_0's rmse: 0.270034\n",
            "[800]\tvalid_0's rmse: 0.268549\n",
            "[900]\tvalid_0's rmse: 0.267253\n",
            "[1000]\tvalid_0's rmse: 0.266198\n",
            "[1100]\tvalid_0's rmse: 0.265408\n",
            "[1200]\tvalid_0's rmse: 0.264662\n",
            "[1300]\tvalid_0's rmse: 0.263996\n",
            "[1400]\tvalid_0's rmse: 0.263488\n",
            "[1500]\tvalid_0's rmse: 0.263041\n",
            "[1600]\tvalid_0's rmse: 0.262595\n",
            "[1700]\tvalid_0's rmse: 0.262226\n",
            "[1800]\tvalid_0's rmse: 0.261959\n",
            "[1900]\tvalid_0's rmse: 0.261717\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    7     8     9 ... 72895 72898 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290077\n",
            "[200]\tvalid_0's rmse: 0.28395\n",
            "[300]\tvalid_0's rmse: 0.279503\n",
            "[400]\tvalid_0's rmse: 0.276142\n",
            "[500]\tvalid_0's rmse: 0.273407\n",
            "[600]\tvalid_0's rmse: 0.271285\n",
            "[700]\tvalid_0's rmse: 0.269472\n",
            "[800]\tvalid_0's rmse: 0.268047\n",
            "[900]\tvalid_0's rmse: 0.266876\n",
            "[1000]\tvalid_0's rmse: 0.265787\n",
            "[1100]\tvalid_0's rmse: 0.264958\n",
            "[1200]\tvalid_0's rmse: 0.264249\n",
            "[1300]\tvalid_0's rmse: 0.263601\n",
            "[1400]\tvalid_0's rmse: 0.263094\n",
            "[1500]\tvalid_0's rmse: 0.262703\n",
            "[1600]\tvalid_0's rmse: 0.262302\n",
            "[1700]\tvalid_0's rmse: 0.26197\n",
            "[1800]\tvalid_0's rmse: 0.261698\n",
            "[1900]\tvalid_0's rmse: 0.261465\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [   18    22    30 ... 72899 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291468\n",
            "[200]\tvalid_0's rmse: 0.285498\n",
            "[300]\tvalid_0's rmse: 0.281145\n",
            "[400]\tvalid_0's rmse: 0.277769\n",
            "[500]\tvalid_0's rmse: 0.275158\n",
            "[600]\tvalid_0's rmse: 0.273075\n",
            "[700]\tvalid_0's rmse: 0.27131\n",
            "[800]\tvalid_0's rmse: 0.269739\n",
            "[900]\tvalid_0's rmse: 0.268523\n",
            "[1000]\tvalid_0's rmse: 0.267472\n",
            "[1100]\tvalid_0's rmse: 0.266555\n",
            "[1200]\tvalid_0's rmse: 0.265775\n",
            "[1300]\tvalid_0's rmse: 0.265106\n",
            "[1400]\tvalid_0's rmse: 0.26447\n",
            "[1500]\tvalid_0's rmse: 0.263939\n",
            "[1600]\tvalid_0's rmse: 0.263532\n",
            "[1700]\tvalid_0's rmse: 0.263191\n",
            "[1800]\tvalid_0's rmse: 0.262912\n",
            "[1900]\tvalid_0's rmse: 0.262672\n",
            "[2000]\tvalid_0's rmse: 0.262463\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.262462\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [    3    14    17 ... 72905 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291747\n",
            "[200]\tvalid_0's rmse: 0.285526\n",
            "[300]\tvalid_0's rmse: 0.281068\n",
            "[400]\tvalid_0's rmse: 0.277726\n",
            "[500]\tvalid_0's rmse: 0.275079\n",
            "[600]\tvalid_0's rmse: 0.27291\n",
            "[700]\tvalid_0's rmse: 0.271144\n",
            "[800]\tvalid_0's rmse: 0.269734\n",
            "[900]\tvalid_0's rmse: 0.268572\n",
            "[1000]\tvalid_0's rmse: 0.267497\n",
            "[1100]\tvalid_0's rmse: 0.266586\n",
            "[1200]\tvalid_0's rmse: 0.265888\n",
            "[1300]\tvalid_0's rmse: 0.265267\n",
            "[1400]\tvalid_0's rmse: 0.264738\n",
            "[1500]\tvalid_0's rmse: 0.264234\n",
            "[1600]\tvalid_0's rmse: 0.263807\n",
            "[1700]\tvalid_0's rmse: 0.263483\n",
            "[1800]\tvalid_0's rmse: 0.263198\n",
            "[1900]\tvalid_0's rmse: 0.262981\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "TRAIN: [    1     2     3 ... 72907 72908 72910] TEST: [    0     6    11 ... 72900 72902 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294111\n",
            "[200]\tvalid_0's rmse: 0.288443\n",
            "[300]\tvalid_0's rmse: 0.284251\n",
            "[400]\tvalid_0's rmse: 0.281047\n",
            "[500]\tvalid_0's rmse: 0.27845\n",
            "[600]\tvalid_0's rmse: 0.276293\n",
            "[700]\tvalid_0's rmse: 0.274555\n",
            "[800]\tvalid_0's rmse: 0.273134\n",
            "[900]\tvalid_0's rmse: 0.271914\n",
            "[1000]\tvalid_0's rmse: 0.270905\n",
            "[1100]\tvalid_0's rmse: 0.269961\n",
            "[1200]\tvalid_0's rmse: 0.269243\n",
            "[1300]\tvalid_0's rmse: 0.268578\n",
            "[1400]\tvalid_0's rmse: 0.268063\n",
            "[1500]\tvalid_0's rmse: 0.267634\n",
            "[1600]\tvalid_0's rmse: 0.267238\n",
            "[1700]\tvalid_0's rmse: 0.26691\n",
            "[1800]\tvalid_0's rmse: 0.266643\n",
            "[1900]\tvalid_0's rmse: 0.266371\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "TRAIN: [    0     2     3 ... 72908 72909 72910] TEST: [    1     4     9 ... 72894 72903 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290089\n",
            "[200]\tvalid_0's rmse: 0.28383\n",
            "[300]\tvalid_0's rmse: 0.279385\n",
            "[400]\tvalid_0's rmse: 0.275832\n",
            "[500]\tvalid_0's rmse: 0.272987\n",
            "[600]\tvalid_0's rmse: 0.270751\n",
            "[700]\tvalid_0's rmse: 0.268905\n",
            "[800]\tvalid_0's rmse: 0.267407\n",
            "[900]\tvalid_0's rmse: 0.266094\n",
            "[1000]\tvalid_0's rmse: 0.264997\n",
            "[1100]\tvalid_0's rmse: 0.264064\n",
            "[1200]\tvalid_0's rmse: 0.263277\n",
            "[1300]\tvalid_0's rmse: 0.262663\n",
            "[1400]\tvalid_0's rmse: 0.262124\n",
            "[1500]\tvalid_0's rmse: 0.261694\n",
            "[1600]\tvalid_0's rmse: 0.261322\n",
            "[1700]\tvalid_0's rmse: 0.260995\n",
            "[1800]\tvalid_0's rmse: 0.260709\n",
            "[1900]\tvalid_0's rmse: 0.260489\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "TRAIN: [    0     1     3 ... 72907 72909 72910] TEST: [    2     7     8 ... 72877 72892 72908]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.293128\n",
            "[200]\tvalid_0's rmse: 0.287017\n",
            "[300]\tvalid_0's rmse: 0.282348\n",
            "[400]\tvalid_0's rmse: 0.278767\n",
            "[500]\tvalid_0's rmse: 0.275915\n",
            "[600]\tvalid_0's rmse: 0.273598\n",
            "[700]\tvalid_0's rmse: 0.271662\n",
            "[800]\tvalid_0's rmse: 0.270127\n",
            "[900]\tvalid_0's rmse: 0.26882\n",
            "[1000]\tvalid_0's rmse: 0.267728\n",
            "[1100]\tvalid_0's rmse: 0.266823\n",
            "[1200]\tvalid_0's rmse: 0.26607\n",
            "[1300]\tvalid_0's rmse: 0.265355\n",
            "[1400]\tvalid_0's rmse: 0.264762\n",
            "[1500]\tvalid_0's rmse: 0.264251\n",
            "[1600]\tvalid_0's rmse: 0.263841\n",
            "[1700]\tvalid_0's rmse: 0.263454\n",
            "[1800]\tvalid_0's rmse: 0.26315\n",
            "[1900]\tvalid_0's rmse: 0.262887\n",
            "[2000]\tvalid_0's rmse: 0.262685\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1998]\tvalid_0's rmse: 0.262682\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    5    10    13 ... 72897 72898 72899]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.288058\n",
            "[200]\tvalid_0's rmse: 0.282042\n",
            "[300]\tvalid_0's rmse: 0.277666\n",
            "[400]\tvalid_0's rmse: 0.274219\n",
            "[500]\tvalid_0's rmse: 0.271488\n",
            "[600]\tvalid_0's rmse: 0.269374\n",
            "[700]\tvalid_0's rmse: 0.267702\n",
            "[800]\tvalid_0's rmse: 0.266231\n",
            "[900]\tvalid_0's rmse: 0.26497\n",
            "[1000]\tvalid_0's rmse: 0.263937\n",
            "[1100]\tvalid_0's rmse: 0.263078\n",
            "[1200]\tvalid_0's rmse: 0.262259\n",
            "[1300]\tvalid_0's rmse: 0.261621\n",
            "[1400]\tvalid_0's rmse: 0.261126\n",
            "[1500]\tvalid_0's rmse: 0.260683\n",
            "[1600]\tvalid_0's rmse: 0.260279\n",
            "[1700]\tvalid_0's rmse: 0.259956\n",
            "[1800]\tvalid_0's rmse: 0.259709\n",
            "[1900]\tvalid_0's rmse: 0.259508\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "TRAIN: [    0     2     3 ... 72906 72907 72910] TEST: [    1     4     5 ... 72905 72908 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290765\n",
            "[200]\tvalid_0's rmse: 0.284734\n",
            "[300]\tvalid_0's rmse: 0.280311\n",
            "[400]\tvalid_0's rmse: 0.276793\n",
            "[500]\tvalid_0's rmse: 0.274067\n",
            "[600]\tvalid_0's rmse: 0.271808\n",
            "[700]\tvalid_0's rmse: 0.269987\n",
            "[800]\tvalid_0's rmse: 0.268509\n",
            "[900]\tvalid_0's rmse: 0.267202\n",
            "[1000]\tvalid_0's rmse: 0.266131\n",
            "[1100]\tvalid_0's rmse: 0.265195\n",
            "[1200]\tvalid_0's rmse: 0.264399\n",
            "[1300]\tvalid_0's rmse: 0.263658\n",
            "[1400]\tvalid_0's rmse: 0.263076\n",
            "[1500]\tvalid_0's rmse: 0.26259\n",
            "[1600]\tvalid_0's rmse: 0.262192\n",
            "[1700]\tvalid_0's rmse: 0.26189\n",
            "[1800]\tvalid_0's rmse: 0.261613\n",
            "[1900]\tvalid_0's rmse: 0.261371\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "TRAIN: [    0     1     3 ... 72908 72909 72910] TEST: [    2     6    12 ... 72893 72896 72901]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294846\n",
            "[200]\tvalid_0's rmse: 0.28867\n",
            "[300]\tvalid_0's rmse: 0.284003\n",
            "[400]\tvalid_0's rmse: 0.280604\n",
            "[500]\tvalid_0's rmse: 0.277742\n",
            "[600]\tvalid_0's rmse: 0.275424\n",
            "[700]\tvalid_0's rmse: 0.273705\n",
            "[800]\tvalid_0's rmse: 0.272211\n",
            "[900]\tvalid_0's rmse: 0.271004\n",
            "[1000]\tvalid_0's rmse: 0.269999\n",
            "[1100]\tvalid_0's rmse: 0.269027\n",
            "[1200]\tvalid_0's rmse: 0.268284\n",
            "[1300]\tvalid_0's rmse: 0.26762\n",
            "[1400]\tvalid_0's rmse: 0.26708\n",
            "[1500]\tvalid_0's rmse: 0.266558\n",
            "[1600]\tvalid_0's rmse: 0.266125\n",
            "[1700]\tvalid_0's rmse: 0.265799\n",
            "[1800]\tvalid_0's rmse: 0.265527\n",
            "[1900]\tvalid_0's rmse: 0.265327\n",
            "[2000]\tvalid_0's rmse: 0.265147\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.265146\n",
            "TRAIN: [    1     2     4 ... 72908 72909 72910] TEST: [    0     3    11 ... 72894 72902 72904]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290396\n",
            "[200]\tvalid_0's rmse: 0.284551\n",
            "[300]\tvalid_0's rmse: 0.280181\n",
            "[400]\tvalid_0's rmse: 0.276809\n",
            "[500]\tvalid_0's rmse: 0.274079\n",
            "[600]\tvalid_0's rmse: 0.271791\n",
            "[700]\tvalid_0's rmse: 0.270034\n",
            "[800]\tvalid_0's rmse: 0.268549\n",
            "[900]\tvalid_0's rmse: 0.267253\n",
            "[1000]\tvalid_0's rmse: 0.266198\n",
            "[1100]\tvalid_0's rmse: 0.265408\n",
            "[1200]\tvalid_0's rmse: 0.264662\n",
            "[1300]\tvalid_0's rmse: 0.263996\n",
            "[1400]\tvalid_0's rmse: 0.263488\n",
            "[1500]\tvalid_0's rmse: 0.263041\n",
            "[1600]\tvalid_0's rmse: 0.262595\n",
            "[1700]\tvalid_0's rmse: 0.262226\n",
            "[1800]\tvalid_0's rmse: 0.261959\n",
            "[1900]\tvalid_0's rmse: 0.261717\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    7     8     9 ... 72895 72898 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290077\n",
            "[200]\tvalid_0's rmse: 0.28395\n",
            "[300]\tvalid_0's rmse: 0.279503\n",
            "[400]\tvalid_0's rmse: 0.276142\n",
            "[500]\tvalid_0's rmse: 0.273407\n",
            "[600]\tvalid_0's rmse: 0.271285\n",
            "[700]\tvalid_0's rmse: 0.269472\n",
            "[800]\tvalid_0's rmse: 0.268047\n",
            "[900]\tvalid_0's rmse: 0.266876\n",
            "[1000]\tvalid_0's rmse: 0.265787\n",
            "[1100]\tvalid_0's rmse: 0.264958\n",
            "[1200]\tvalid_0's rmse: 0.264249\n",
            "[1300]\tvalid_0's rmse: 0.263601\n",
            "[1400]\tvalid_0's rmse: 0.263094\n",
            "[1500]\tvalid_0's rmse: 0.262703\n",
            "[1600]\tvalid_0's rmse: 0.262302\n",
            "[1700]\tvalid_0's rmse: 0.26197\n",
            "[1800]\tvalid_0's rmse: 0.261698\n",
            "[1900]\tvalid_0's rmse: 0.261465\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [   18    22    30 ... 72899 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291468\n",
            "[200]\tvalid_0's rmse: 0.285498\n",
            "[300]\tvalid_0's rmse: 0.281145\n",
            "[400]\tvalid_0's rmse: 0.277769\n",
            "[500]\tvalid_0's rmse: 0.275158\n",
            "[600]\tvalid_0's rmse: 0.273075\n",
            "[700]\tvalid_0's rmse: 0.27131\n",
            "[800]\tvalid_0's rmse: 0.269739\n",
            "[900]\tvalid_0's rmse: 0.268523\n",
            "[1000]\tvalid_0's rmse: 0.267472\n",
            "[1100]\tvalid_0's rmse: 0.266555\n",
            "[1200]\tvalid_0's rmse: 0.265775\n",
            "[1300]\tvalid_0's rmse: 0.265106\n",
            "[1400]\tvalid_0's rmse: 0.26447\n",
            "[1500]\tvalid_0's rmse: 0.263939\n",
            "[1600]\tvalid_0's rmse: 0.263532\n",
            "[1700]\tvalid_0's rmse: 0.263191\n",
            "[1800]\tvalid_0's rmse: 0.262912\n",
            "[1900]\tvalid_0's rmse: 0.262672\n",
            "[2000]\tvalid_0's rmse: 0.262463\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.262462\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [    3    14    17 ... 72905 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291747\n",
            "[200]\tvalid_0's rmse: 0.285526\n",
            "[300]\tvalid_0's rmse: 0.281068\n",
            "[400]\tvalid_0's rmse: 0.277726\n",
            "[500]\tvalid_0's rmse: 0.275079\n",
            "[600]\tvalid_0's rmse: 0.27291\n",
            "[700]\tvalid_0's rmse: 0.271144\n",
            "[800]\tvalid_0's rmse: 0.269734\n",
            "[900]\tvalid_0's rmse: 0.268572\n",
            "[1000]\tvalid_0's rmse: 0.267497\n",
            "[1100]\tvalid_0's rmse: 0.266586\n",
            "[1200]\tvalid_0's rmse: 0.265888\n",
            "[1300]\tvalid_0's rmse: 0.265267\n",
            "[1400]\tvalid_0's rmse: 0.264738\n",
            "[1500]\tvalid_0's rmse: 0.264234\n",
            "[1600]\tvalid_0's rmse: 0.263807\n",
            "[1700]\tvalid_0's rmse: 0.263483\n",
            "[1800]\tvalid_0's rmse: 0.263198\n",
            "[1900]\tvalid_0's rmse: 0.262981\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "TRAIN: [    1     2     3 ... 72907 72908 72910] TEST: [    0     6    11 ... 72900 72902 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294111\n",
            "[200]\tvalid_0's rmse: 0.288443\n",
            "[300]\tvalid_0's rmse: 0.284251\n",
            "[400]\tvalid_0's rmse: 0.281047\n",
            "[500]\tvalid_0's rmse: 0.27845\n",
            "[600]\tvalid_0's rmse: 0.276293\n",
            "[700]\tvalid_0's rmse: 0.274555\n",
            "[800]\tvalid_0's rmse: 0.273134\n",
            "[900]\tvalid_0's rmse: 0.271914\n",
            "[1000]\tvalid_0's rmse: 0.270905\n",
            "[1100]\tvalid_0's rmse: 0.269961\n",
            "[1200]\tvalid_0's rmse: 0.269243\n",
            "[1300]\tvalid_0's rmse: 0.268578\n",
            "[1400]\tvalid_0's rmse: 0.268063\n",
            "[1500]\tvalid_0's rmse: 0.267634\n",
            "[1600]\tvalid_0's rmse: 0.267238\n",
            "[1700]\tvalid_0's rmse: 0.26691\n",
            "[1800]\tvalid_0's rmse: 0.266643\n",
            "[1900]\tvalid_0's rmse: 0.266371\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "TRAIN: [    0     2     3 ... 72908 72909 72910] TEST: [    1     4     9 ... 72894 72903 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290089\n",
            "[200]\tvalid_0's rmse: 0.28383\n",
            "[300]\tvalid_0's rmse: 0.279385\n",
            "[400]\tvalid_0's rmse: 0.275832\n",
            "[500]\tvalid_0's rmse: 0.272987\n",
            "[600]\tvalid_0's rmse: 0.270751\n",
            "[700]\tvalid_0's rmse: 0.268905\n",
            "[800]\tvalid_0's rmse: 0.267407\n",
            "[900]\tvalid_0's rmse: 0.266094\n",
            "[1000]\tvalid_0's rmse: 0.264997\n",
            "[1100]\tvalid_0's rmse: 0.264064\n",
            "[1200]\tvalid_0's rmse: 0.263277\n",
            "[1300]\tvalid_0's rmse: 0.262663\n",
            "[1400]\tvalid_0's rmse: 0.262124\n",
            "[1500]\tvalid_0's rmse: 0.261694\n",
            "[1600]\tvalid_0's rmse: 0.261322\n",
            "[1700]\tvalid_0's rmse: 0.260995\n",
            "[1800]\tvalid_0's rmse: 0.260709\n",
            "[1900]\tvalid_0's rmse: 0.260489\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "TRAIN: [    0     1     3 ... 72907 72909 72910] TEST: [    2     7     8 ... 72877 72892 72908]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.293128\n",
            "[200]\tvalid_0's rmse: 0.287017\n",
            "[300]\tvalid_0's rmse: 0.282348\n",
            "[400]\tvalid_0's rmse: 0.278767\n",
            "[500]\tvalid_0's rmse: 0.275915\n",
            "[600]\tvalid_0's rmse: 0.273598\n",
            "[700]\tvalid_0's rmse: 0.271662\n",
            "[800]\tvalid_0's rmse: 0.270127\n",
            "[900]\tvalid_0's rmse: 0.26882\n",
            "[1000]\tvalid_0's rmse: 0.267728\n",
            "[1100]\tvalid_0's rmse: 0.266823\n",
            "[1200]\tvalid_0's rmse: 0.26607\n",
            "[1300]\tvalid_0's rmse: 0.265355\n",
            "[1400]\tvalid_0's rmse: 0.264762\n",
            "[1500]\tvalid_0's rmse: 0.264251\n",
            "[1600]\tvalid_0's rmse: 0.263841\n",
            "[1700]\tvalid_0's rmse: 0.263454\n",
            "[1800]\tvalid_0's rmse: 0.26315\n",
            "[1900]\tvalid_0's rmse: 0.262887\n",
            "[2000]\tvalid_0's rmse: 0.262685\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1998]\tvalid_0's rmse: 0.262682\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    5    10    13 ... 72897 72898 72899]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.288058\n",
            "[200]\tvalid_0's rmse: 0.282042\n",
            "[300]\tvalid_0's rmse: 0.277666\n",
            "[400]\tvalid_0's rmse: 0.274219\n",
            "[500]\tvalid_0's rmse: 0.271488\n",
            "[600]\tvalid_0's rmse: 0.269374\n",
            "[700]\tvalid_0's rmse: 0.267702\n",
            "[800]\tvalid_0's rmse: 0.266231\n",
            "[900]\tvalid_0's rmse: 0.26497\n",
            "[1000]\tvalid_0's rmse: 0.263937\n",
            "[1100]\tvalid_0's rmse: 0.263078\n",
            "[1200]\tvalid_0's rmse: 0.262259\n",
            "[1300]\tvalid_0's rmse: 0.261621\n",
            "[1400]\tvalid_0's rmse: 0.261126\n",
            "[1500]\tvalid_0's rmse: 0.260683\n",
            "[1600]\tvalid_0's rmse: 0.260279\n",
            "[1700]\tvalid_0's rmse: 0.259956\n",
            "[1800]\tvalid_0's rmse: 0.259709\n",
            "[1900]\tvalid_0's rmse: 0.259508\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "TRAIN: [    0     2     3 ... 72906 72907 72910] TEST: [    1     4     5 ... 72905 72908 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290765\n",
            "[200]\tvalid_0's rmse: 0.284734\n",
            "[300]\tvalid_0's rmse: 0.280311\n",
            "[400]\tvalid_0's rmse: 0.276793\n",
            "[500]\tvalid_0's rmse: 0.274067\n",
            "[600]\tvalid_0's rmse: 0.271808\n",
            "[700]\tvalid_0's rmse: 0.269987\n",
            "[800]\tvalid_0's rmse: 0.268509\n",
            "[900]\tvalid_0's rmse: 0.267202\n",
            "[1000]\tvalid_0's rmse: 0.266131\n",
            "[1100]\tvalid_0's rmse: 0.265195\n",
            "[1200]\tvalid_0's rmse: 0.264399\n",
            "[1300]\tvalid_0's rmse: 0.263658\n",
            "[1400]\tvalid_0's rmse: 0.263076\n",
            "[1500]\tvalid_0's rmse: 0.26259\n",
            "[1600]\tvalid_0's rmse: 0.262192\n",
            "[1700]\tvalid_0's rmse: 0.26189\n",
            "[1800]\tvalid_0's rmse: 0.261613\n",
            "[1900]\tvalid_0's rmse: 0.261371\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "TRAIN: [    0     1     3 ... 72908 72909 72910] TEST: [    2     6    12 ... 72893 72896 72901]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294846\n",
            "[200]\tvalid_0's rmse: 0.28867\n",
            "[300]\tvalid_0's rmse: 0.284003\n",
            "[400]\tvalid_0's rmse: 0.280604\n",
            "[500]\tvalid_0's rmse: 0.277742\n",
            "[600]\tvalid_0's rmse: 0.275424\n",
            "[700]\tvalid_0's rmse: 0.273705\n",
            "[800]\tvalid_0's rmse: 0.272211\n",
            "[900]\tvalid_0's rmse: 0.271004\n",
            "[1000]\tvalid_0's rmse: 0.269999\n",
            "[1100]\tvalid_0's rmse: 0.269027\n",
            "[1200]\tvalid_0's rmse: 0.268284\n",
            "[1300]\tvalid_0's rmse: 0.26762\n",
            "[1400]\tvalid_0's rmse: 0.26708\n",
            "[1500]\tvalid_0's rmse: 0.266558\n",
            "[1600]\tvalid_0's rmse: 0.266125\n",
            "[1700]\tvalid_0's rmse: 0.265799\n",
            "[1800]\tvalid_0's rmse: 0.265527\n",
            "[1900]\tvalid_0's rmse: 0.265327\n",
            "[2000]\tvalid_0's rmse: 0.265147\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.265146\n",
            "TRAIN: [    1     2     4 ... 72908 72909 72910] TEST: [    0     3    11 ... 72894 72902 72904]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290396\n",
            "[200]\tvalid_0's rmse: 0.284551\n",
            "[300]\tvalid_0's rmse: 0.280181\n",
            "[400]\tvalid_0's rmse: 0.276809\n",
            "[500]\tvalid_0's rmse: 0.274079\n",
            "[600]\tvalid_0's rmse: 0.271791\n",
            "[700]\tvalid_0's rmse: 0.270034\n",
            "[800]\tvalid_0's rmse: 0.268549\n",
            "[900]\tvalid_0's rmse: 0.267253\n",
            "[1000]\tvalid_0's rmse: 0.266198\n",
            "[1100]\tvalid_0's rmse: 0.265408\n",
            "[1200]\tvalid_0's rmse: 0.264662\n",
            "[1300]\tvalid_0's rmse: 0.263996\n",
            "[1400]\tvalid_0's rmse: 0.263488\n",
            "[1500]\tvalid_0's rmse: 0.263041\n",
            "[1600]\tvalid_0's rmse: 0.262595\n",
            "[1700]\tvalid_0's rmse: 0.262226\n",
            "[1800]\tvalid_0's rmse: 0.261959\n",
            "[1900]\tvalid_0's rmse: 0.261717\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    7     8     9 ... 72895 72898 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290077\n",
            "[200]\tvalid_0's rmse: 0.28395\n",
            "[300]\tvalid_0's rmse: 0.279503\n",
            "[400]\tvalid_0's rmse: 0.276142\n",
            "[500]\tvalid_0's rmse: 0.273407\n",
            "[600]\tvalid_0's rmse: 0.271285\n",
            "[700]\tvalid_0's rmse: 0.269472\n",
            "[800]\tvalid_0's rmse: 0.268047\n",
            "[900]\tvalid_0's rmse: 0.266876\n",
            "[1000]\tvalid_0's rmse: 0.265787\n",
            "[1100]\tvalid_0's rmse: 0.264958\n",
            "[1200]\tvalid_0's rmse: 0.264249\n",
            "[1300]\tvalid_0's rmse: 0.263601\n",
            "[1400]\tvalid_0's rmse: 0.263094\n",
            "[1500]\tvalid_0's rmse: 0.262703\n",
            "[1600]\tvalid_0's rmse: 0.262302\n",
            "[1700]\tvalid_0's rmse: 0.26197\n",
            "[1800]\tvalid_0's rmse: 0.261698\n",
            "[1900]\tvalid_0's rmse: 0.261465\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [   18    22    30 ... 72899 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291468\n",
            "[200]\tvalid_0's rmse: 0.285498\n",
            "[300]\tvalid_0's rmse: 0.281145\n",
            "[400]\tvalid_0's rmse: 0.277769\n",
            "[500]\tvalid_0's rmse: 0.275158\n",
            "[600]\tvalid_0's rmse: 0.273075\n",
            "[700]\tvalid_0's rmse: 0.27131\n",
            "[800]\tvalid_0's rmse: 0.269739\n",
            "[900]\tvalid_0's rmse: 0.268523\n",
            "[1000]\tvalid_0's rmse: 0.267472\n",
            "[1100]\tvalid_0's rmse: 0.266555\n",
            "[1200]\tvalid_0's rmse: 0.265775\n",
            "[1300]\tvalid_0's rmse: 0.265106\n",
            "[1400]\tvalid_0's rmse: 0.26447\n",
            "[1500]\tvalid_0's rmse: 0.263939\n",
            "[1600]\tvalid_0's rmse: 0.263532\n",
            "[1700]\tvalid_0's rmse: 0.263191\n",
            "[1800]\tvalid_0's rmse: 0.262912\n",
            "[1900]\tvalid_0's rmse: 0.262672\n",
            "[2000]\tvalid_0's rmse: 0.262463\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.262462\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [    3    14    17 ... 72905 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291747\n",
            "[200]\tvalid_0's rmse: 0.285526\n",
            "[300]\tvalid_0's rmse: 0.281068\n",
            "[400]\tvalid_0's rmse: 0.277726\n",
            "[500]\tvalid_0's rmse: 0.275079\n",
            "[600]\tvalid_0's rmse: 0.27291\n",
            "[700]\tvalid_0's rmse: 0.271144\n",
            "[800]\tvalid_0's rmse: 0.269734\n",
            "[900]\tvalid_0's rmse: 0.268572\n",
            "[1000]\tvalid_0's rmse: 0.267497\n",
            "[1100]\tvalid_0's rmse: 0.266586\n",
            "[1200]\tvalid_0's rmse: 0.265888\n",
            "[1300]\tvalid_0's rmse: 0.265267\n",
            "[1400]\tvalid_0's rmse: 0.264738\n",
            "[1500]\tvalid_0's rmse: 0.264234\n",
            "[1600]\tvalid_0's rmse: 0.263807\n",
            "[1700]\tvalid_0's rmse: 0.263483\n",
            "[1800]\tvalid_0's rmse: 0.263198\n",
            "[1900]\tvalid_0's rmse: 0.262981\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "TRAIN: [    1     2     3 ... 72907 72908 72910] TEST: [    0     6    11 ... 72900 72902 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294111\n",
            "[200]\tvalid_0's rmse: 0.288443\n",
            "[300]\tvalid_0's rmse: 0.284251\n",
            "[400]\tvalid_0's rmse: 0.281047\n",
            "[500]\tvalid_0's rmse: 0.27845\n",
            "[600]\tvalid_0's rmse: 0.276293\n",
            "[700]\tvalid_0's rmse: 0.274555\n",
            "[800]\tvalid_0's rmse: 0.273134\n",
            "[900]\tvalid_0's rmse: 0.271914\n",
            "[1000]\tvalid_0's rmse: 0.270905\n",
            "[1100]\tvalid_0's rmse: 0.269961\n",
            "[1200]\tvalid_0's rmse: 0.269243\n",
            "[1300]\tvalid_0's rmse: 0.268578\n",
            "[1400]\tvalid_0's rmse: 0.268063\n",
            "[1500]\tvalid_0's rmse: 0.267634\n",
            "[1600]\tvalid_0's rmse: 0.267238\n",
            "[1700]\tvalid_0's rmse: 0.26691\n",
            "[1800]\tvalid_0's rmse: 0.266643\n",
            "[1900]\tvalid_0's rmse: 0.266371\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "TRAIN: [    0     2     3 ... 72908 72909 72910] TEST: [    1     4     9 ... 72894 72903 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290089\n",
            "[200]\tvalid_0's rmse: 0.28383\n",
            "[300]\tvalid_0's rmse: 0.279385\n",
            "[400]\tvalid_0's rmse: 0.275832\n",
            "[500]\tvalid_0's rmse: 0.272987\n",
            "[600]\tvalid_0's rmse: 0.270751\n",
            "[700]\tvalid_0's rmse: 0.268905\n",
            "[800]\tvalid_0's rmse: 0.267407\n",
            "[900]\tvalid_0's rmse: 0.266094\n",
            "[1000]\tvalid_0's rmse: 0.264997\n",
            "[1100]\tvalid_0's rmse: 0.264064\n",
            "[1200]\tvalid_0's rmse: 0.263277\n",
            "[1300]\tvalid_0's rmse: 0.262663\n",
            "[1400]\tvalid_0's rmse: 0.262124\n",
            "[1500]\tvalid_0's rmse: 0.261694\n",
            "[1600]\tvalid_0's rmse: 0.261322\n",
            "[1700]\tvalid_0's rmse: 0.260995\n",
            "[1800]\tvalid_0's rmse: 0.260709\n",
            "[1900]\tvalid_0's rmse: 0.260489\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "TRAIN: [    0     1     3 ... 72907 72909 72910] TEST: [    2     7     8 ... 72877 72892 72908]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.293128\n",
            "[200]\tvalid_0's rmse: 0.287017\n",
            "[300]\tvalid_0's rmse: 0.282348\n",
            "[400]\tvalid_0's rmse: 0.278767\n",
            "[500]\tvalid_0's rmse: 0.275915\n",
            "[600]\tvalid_0's rmse: 0.273598\n",
            "[700]\tvalid_0's rmse: 0.271662\n",
            "[800]\tvalid_0's rmse: 0.270127\n",
            "[900]\tvalid_0's rmse: 0.26882\n",
            "[1000]\tvalid_0's rmse: 0.267728\n",
            "[1100]\tvalid_0's rmse: 0.266823\n",
            "[1200]\tvalid_0's rmse: 0.26607\n",
            "[1300]\tvalid_0's rmse: 0.265355\n",
            "[1400]\tvalid_0's rmse: 0.264762\n",
            "[1500]\tvalid_0's rmse: 0.264251\n",
            "[1600]\tvalid_0's rmse: 0.263841\n",
            "[1700]\tvalid_0's rmse: 0.263454\n",
            "[1800]\tvalid_0's rmse: 0.26315\n",
            "[1900]\tvalid_0's rmse: 0.262887\n",
            "[2000]\tvalid_0's rmse: 0.262685\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1998]\tvalid_0's rmse: 0.262682\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    5    10    13 ... 72897 72898 72899]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.288058\n",
            "[200]\tvalid_0's rmse: 0.282042\n",
            "[300]\tvalid_0's rmse: 0.277666\n",
            "[400]\tvalid_0's rmse: 0.274219\n",
            "[500]\tvalid_0's rmse: 0.271488\n",
            "[600]\tvalid_0's rmse: 0.269374\n",
            "[700]\tvalid_0's rmse: 0.267702\n",
            "[800]\tvalid_0's rmse: 0.266231\n",
            "[900]\tvalid_0's rmse: 0.26497\n",
            "[1000]\tvalid_0's rmse: 0.263937\n",
            "[1100]\tvalid_0's rmse: 0.263078\n",
            "[1200]\tvalid_0's rmse: 0.262259\n",
            "[1300]\tvalid_0's rmse: 0.261621\n",
            "[1400]\tvalid_0's rmse: 0.261126\n",
            "[1500]\tvalid_0's rmse: 0.260683\n",
            "[1600]\tvalid_0's rmse: 0.260279\n",
            "[1700]\tvalid_0's rmse: 0.259956\n",
            "[1800]\tvalid_0's rmse: 0.259709\n",
            "[1900]\tvalid_0's rmse: 0.259508\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "TRAIN: [    0     2     3 ... 72906 72907 72910] TEST: [    1     4     5 ... 72905 72908 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290765\n",
            "[200]\tvalid_0's rmse: 0.284734\n",
            "[300]\tvalid_0's rmse: 0.280311\n",
            "[400]\tvalid_0's rmse: 0.276793\n",
            "[500]\tvalid_0's rmse: 0.274067\n",
            "[600]\tvalid_0's rmse: 0.271808\n",
            "[700]\tvalid_0's rmse: 0.269987\n",
            "[800]\tvalid_0's rmse: 0.268509\n",
            "[900]\tvalid_0's rmse: 0.267202\n",
            "[1000]\tvalid_0's rmse: 0.266131\n",
            "[1100]\tvalid_0's rmse: 0.265195\n",
            "[1200]\tvalid_0's rmse: 0.264399\n",
            "[1300]\tvalid_0's rmse: 0.263658\n",
            "[1400]\tvalid_0's rmse: 0.263076\n",
            "[1500]\tvalid_0's rmse: 0.26259\n",
            "[1600]\tvalid_0's rmse: 0.262192\n",
            "[1700]\tvalid_0's rmse: 0.26189\n",
            "[1800]\tvalid_0's rmse: 0.261613\n",
            "[1900]\tvalid_0's rmse: 0.261371\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "TRAIN: [    0     1     3 ... 72908 72909 72910] TEST: [    2     6    12 ... 72893 72896 72901]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294846\n",
            "[200]\tvalid_0's rmse: 0.28867\n",
            "[300]\tvalid_0's rmse: 0.284003\n",
            "[400]\tvalid_0's rmse: 0.280604\n",
            "[500]\tvalid_0's rmse: 0.277742\n",
            "[600]\tvalid_0's rmse: 0.275424\n",
            "[700]\tvalid_0's rmse: 0.273705\n",
            "[800]\tvalid_0's rmse: 0.272211\n",
            "[900]\tvalid_0's rmse: 0.271004\n",
            "[1000]\tvalid_0's rmse: 0.269999\n",
            "[1100]\tvalid_0's rmse: 0.269027\n",
            "[1200]\tvalid_0's rmse: 0.268284\n",
            "[1300]\tvalid_0's rmse: 0.26762\n",
            "[1400]\tvalid_0's rmse: 0.26708\n",
            "[1500]\tvalid_0's rmse: 0.266558\n",
            "[1600]\tvalid_0's rmse: 0.266125\n",
            "[1700]\tvalid_0's rmse: 0.265799\n",
            "[1800]\tvalid_0's rmse: 0.265527\n",
            "[1900]\tvalid_0's rmse: 0.265327\n",
            "[2000]\tvalid_0's rmse: 0.265147\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.265146\n",
            "TRAIN: [    1     2     4 ... 72908 72909 72910] TEST: [    0     3    11 ... 72894 72902 72904]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290396\n",
            "[200]\tvalid_0's rmse: 0.284551\n",
            "[300]\tvalid_0's rmse: 0.280181\n",
            "[400]\tvalid_0's rmse: 0.276809\n",
            "[500]\tvalid_0's rmse: 0.274079\n",
            "[600]\tvalid_0's rmse: 0.271791\n",
            "[700]\tvalid_0's rmse: 0.270034\n",
            "[800]\tvalid_0's rmse: 0.268549\n",
            "[900]\tvalid_0's rmse: 0.267253\n",
            "[1000]\tvalid_0's rmse: 0.266198\n",
            "[1100]\tvalid_0's rmse: 0.265408\n",
            "[1200]\tvalid_0's rmse: 0.264662\n",
            "[1300]\tvalid_0's rmse: 0.263996\n",
            "[1400]\tvalid_0's rmse: 0.263488\n",
            "[1500]\tvalid_0's rmse: 0.263041\n",
            "[1600]\tvalid_0's rmse: 0.262595\n",
            "[1700]\tvalid_0's rmse: 0.262226\n",
            "[1800]\tvalid_0's rmse: 0.261959\n",
            "[1900]\tvalid_0's rmse: 0.261717\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    7     8     9 ... 72895 72898 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290077\n",
            "[200]\tvalid_0's rmse: 0.28395\n",
            "[300]\tvalid_0's rmse: 0.279503\n",
            "[400]\tvalid_0's rmse: 0.276142\n",
            "[500]\tvalid_0's rmse: 0.273407\n",
            "[600]\tvalid_0's rmse: 0.271285\n",
            "[700]\tvalid_0's rmse: 0.269472\n",
            "[800]\tvalid_0's rmse: 0.268047\n",
            "[900]\tvalid_0's rmse: 0.266876\n",
            "[1000]\tvalid_0's rmse: 0.265787\n",
            "[1100]\tvalid_0's rmse: 0.264958\n",
            "[1200]\tvalid_0's rmse: 0.264249\n",
            "[1300]\tvalid_0's rmse: 0.263601\n",
            "[1400]\tvalid_0's rmse: 0.263094\n",
            "[1500]\tvalid_0's rmse: 0.262703\n",
            "[1600]\tvalid_0's rmse: 0.262302\n",
            "[1700]\tvalid_0's rmse: 0.26197\n",
            "[1800]\tvalid_0's rmse: 0.261698\n",
            "[1900]\tvalid_0's rmse: 0.261465\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [   18    22    30 ... 72899 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291468\n",
            "[200]\tvalid_0's rmse: 0.285498\n",
            "[300]\tvalid_0's rmse: 0.281145\n",
            "[400]\tvalid_0's rmse: 0.277769\n",
            "[500]\tvalid_0's rmse: 0.275158\n",
            "[600]\tvalid_0's rmse: 0.273075\n",
            "[700]\tvalid_0's rmse: 0.27131\n",
            "[800]\tvalid_0's rmse: 0.269739\n",
            "[900]\tvalid_0's rmse: 0.268523\n",
            "[1000]\tvalid_0's rmse: 0.267472\n",
            "[1100]\tvalid_0's rmse: 0.266555\n",
            "[1200]\tvalid_0's rmse: 0.265775\n",
            "[1300]\tvalid_0's rmse: 0.265106\n",
            "[1400]\tvalid_0's rmse: 0.26447\n",
            "[1500]\tvalid_0's rmse: 0.263939\n",
            "[1600]\tvalid_0's rmse: 0.263532\n",
            "[1700]\tvalid_0's rmse: 0.263191\n",
            "[1800]\tvalid_0's rmse: 0.262912\n",
            "[1900]\tvalid_0's rmse: 0.262672\n",
            "[2000]\tvalid_0's rmse: 0.262463\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.262462\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [    3    14    17 ... 72905 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291747\n",
            "[200]\tvalid_0's rmse: 0.285526\n",
            "[300]\tvalid_0's rmse: 0.281068\n",
            "[400]\tvalid_0's rmse: 0.277726\n",
            "[500]\tvalid_0's rmse: 0.275079\n",
            "[600]\tvalid_0's rmse: 0.27291\n",
            "[700]\tvalid_0's rmse: 0.271144\n",
            "[800]\tvalid_0's rmse: 0.269734\n",
            "[900]\tvalid_0's rmse: 0.268572\n",
            "[1000]\tvalid_0's rmse: 0.267497\n",
            "[1100]\tvalid_0's rmse: 0.266586\n",
            "[1200]\tvalid_0's rmse: 0.265888\n",
            "[1300]\tvalid_0's rmse: 0.265267\n",
            "[1400]\tvalid_0's rmse: 0.264738\n",
            "[1500]\tvalid_0's rmse: 0.264234\n",
            "[1600]\tvalid_0's rmse: 0.263807\n",
            "[1700]\tvalid_0's rmse: 0.263483\n",
            "[1800]\tvalid_0's rmse: 0.263198\n",
            "[1900]\tvalid_0's rmse: 0.262981\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "TRAIN: [    1     2     3 ... 72907 72908 72910] TEST: [    0     6    11 ... 72900 72902 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294111\n",
            "[200]\tvalid_0's rmse: 0.288443\n",
            "[300]\tvalid_0's rmse: 0.284251\n",
            "[400]\tvalid_0's rmse: 0.281047\n",
            "[500]\tvalid_0's rmse: 0.27845\n",
            "[600]\tvalid_0's rmse: 0.276293\n",
            "[700]\tvalid_0's rmse: 0.274555\n",
            "[800]\tvalid_0's rmse: 0.273134\n",
            "[900]\tvalid_0's rmse: 0.271914\n",
            "[1000]\tvalid_0's rmse: 0.270905\n",
            "[1100]\tvalid_0's rmse: 0.269961\n",
            "[1200]\tvalid_0's rmse: 0.269243\n",
            "[1300]\tvalid_0's rmse: 0.268578\n",
            "[1400]\tvalid_0's rmse: 0.268063\n",
            "[1500]\tvalid_0's rmse: 0.267634\n",
            "[1600]\tvalid_0's rmse: 0.267238\n",
            "[1700]\tvalid_0's rmse: 0.26691\n",
            "[1800]\tvalid_0's rmse: 0.266643\n",
            "[1900]\tvalid_0's rmse: 0.266371\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "TRAIN: [    0     2     3 ... 72908 72909 72910] TEST: [    1     4     9 ... 72894 72903 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290089\n",
            "[200]\tvalid_0's rmse: 0.28383\n",
            "[300]\tvalid_0's rmse: 0.279385\n",
            "[400]\tvalid_0's rmse: 0.275832\n",
            "[500]\tvalid_0's rmse: 0.272987\n",
            "[600]\tvalid_0's rmse: 0.270751\n",
            "[700]\tvalid_0's rmse: 0.268905\n",
            "[800]\tvalid_0's rmse: 0.267407\n",
            "[900]\tvalid_0's rmse: 0.266094\n",
            "[1000]\tvalid_0's rmse: 0.264997\n",
            "[1100]\tvalid_0's rmse: 0.264064\n",
            "[1200]\tvalid_0's rmse: 0.263277\n",
            "[1300]\tvalid_0's rmse: 0.262663\n",
            "[1400]\tvalid_0's rmse: 0.262124\n",
            "[1500]\tvalid_0's rmse: 0.261694\n",
            "[1600]\tvalid_0's rmse: 0.261322\n",
            "[1700]\tvalid_0's rmse: 0.260995\n",
            "[1800]\tvalid_0's rmse: 0.260709\n",
            "[1900]\tvalid_0's rmse: 0.260489\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "TRAIN: [    0     1     3 ... 72907 72909 72910] TEST: [    2     7     8 ... 72877 72892 72908]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.293128\n",
            "[200]\tvalid_0's rmse: 0.287017\n",
            "[300]\tvalid_0's rmse: 0.282348\n",
            "[400]\tvalid_0's rmse: 0.278767\n",
            "[500]\tvalid_0's rmse: 0.275915\n",
            "[600]\tvalid_0's rmse: 0.273598\n",
            "[700]\tvalid_0's rmse: 0.271662\n",
            "[800]\tvalid_0's rmse: 0.270127\n",
            "[900]\tvalid_0's rmse: 0.26882\n",
            "[1000]\tvalid_0's rmse: 0.267728\n",
            "[1100]\tvalid_0's rmse: 0.266823\n",
            "[1200]\tvalid_0's rmse: 0.26607\n",
            "[1300]\tvalid_0's rmse: 0.265355\n",
            "[1400]\tvalid_0's rmse: 0.264762\n",
            "[1500]\tvalid_0's rmse: 0.264251\n",
            "[1600]\tvalid_0's rmse: 0.263841\n",
            "[1700]\tvalid_0's rmse: 0.263454\n",
            "[1800]\tvalid_0's rmse: 0.26315\n",
            "[1900]\tvalid_0's rmse: 0.262887\n",
            "[2000]\tvalid_0's rmse: 0.262685\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1998]\tvalid_0's rmse: 0.262682\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    5    10    13 ... 72897 72898 72899]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.288058\n",
            "[200]\tvalid_0's rmse: 0.282042\n",
            "[300]\tvalid_0's rmse: 0.277666\n",
            "[400]\tvalid_0's rmse: 0.274219\n",
            "[500]\tvalid_0's rmse: 0.271488\n",
            "[600]\tvalid_0's rmse: 0.269374\n",
            "[700]\tvalid_0's rmse: 0.267702\n",
            "[800]\tvalid_0's rmse: 0.266231\n",
            "[900]\tvalid_0's rmse: 0.26497\n",
            "[1000]\tvalid_0's rmse: 0.263937\n",
            "[1100]\tvalid_0's rmse: 0.263078\n",
            "[1200]\tvalid_0's rmse: 0.262259\n",
            "[1300]\tvalid_0's rmse: 0.261621\n",
            "[1400]\tvalid_0's rmse: 0.261126\n",
            "[1500]\tvalid_0's rmse: 0.260683\n",
            "[1600]\tvalid_0's rmse: 0.260279\n",
            "[1700]\tvalid_0's rmse: 0.259956\n",
            "[1800]\tvalid_0's rmse: 0.259709\n",
            "[1900]\tvalid_0's rmse: 0.259508\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "TRAIN: [    0     2     3 ... 72906 72907 72910] TEST: [    1     4     5 ... 72905 72908 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290765\n",
            "[200]\tvalid_0's rmse: 0.284734\n",
            "[300]\tvalid_0's rmse: 0.280311\n",
            "[400]\tvalid_0's rmse: 0.276793\n",
            "[500]\tvalid_0's rmse: 0.274067\n",
            "[600]\tvalid_0's rmse: 0.271808\n",
            "[700]\tvalid_0's rmse: 0.269987\n",
            "[800]\tvalid_0's rmse: 0.268509\n",
            "[900]\tvalid_0's rmse: 0.267202\n",
            "[1000]\tvalid_0's rmse: 0.266131\n",
            "[1100]\tvalid_0's rmse: 0.265195\n",
            "[1200]\tvalid_0's rmse: 0.264399\n",
            "[1300]\tvalid_0's rmse: 0.263658\n",
            "[1400]\tvalid_0's rmse: 0.263076\n",
            "[1500]\tvalid_0's rmse: 0.26259\n",
            "[1600]\tvalid_0's rmse: 0.262192\n",
            "[1700]\tvalid_0's rmse: 0.26189\n",
            "[1800]\tvalid_0's rmse: 0.261613\n",
            "[1900]\tvalid_0's rmse: 0.261371\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "TRAIN: [    0     1     3 ... 72908 72909 72910] TEST: [    2     6    12 ... 72893 72896 72901]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294846\n",
            "[200]\tvalid_0's rmse: 0.28867\n",
            "[300]\tvalid_0's rmse: 0.284003\n",
            "[400]\tvalid_0's rmse: 0.280604\n",
            "[500]\tvalid_0's rmse: 0.277742\n",
            "[600]\tvalid_0's rmse: 0.275424\n",
            "[700]\tvalid_0's rmse: 0.273705\n",
            "[800]\tvalid_0's rmse: 0.272211\n",
            "[900]\tvalid_0's rmse: 0.271004\n",
            "[1000]\tvalid_0's rmse: 0.269999\n",
            "[1100]\tvalid_0's rmse: 0.269027\n",
            "[1200]\tvalid_0's rmse: 0.268284\n",
            "[1300]\tvalid_0's rmse: 0.26762\n",
            "[1400]\tvalid_0's rmse: 0.26708\n",
            "[1500]\tvalid_0's rmse: 0.266558\n",
            "[1600]\tvalid_0's rmse: 0.266125\n",
            "[1700]\tvalid_0's rmse: 0.265799\n",
            "[1800]\tvalid_0's rmse: 0.265527\n",
            "[1900]\tvalid_0's rmse: 0.265327\n",
            "[2000]\tvalid_0's rmse: 0.265147\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.265146\n",
            "TRAIN: [    1     2     4 ... 72908 72909 72910] TEST: [    0     3    11 ... 72894 72902 72904]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290396\n",
            "[200]\tvalid_0's rmse: 0.284551\n",
            "[300]\tvalid_0's rmse: 0.280181\n",
            "[400]\tvalid_0's rmse: 0.276809\n",
            "[500]\tvalid_0's rmse: 0.274079\n",
            "[600]\tvalid_0's rmse: 0.271791\n",
            "[700]\tvalid_0's rmse: 0.270034\n",
            "[800]\tvalid_0's rmse: 0.268549\n",
            "[900]\tvalid_0's rmse: 0.267253\n",
            "[1000]\tvalid_0's rmse: 0.266198\n",
            "[1100]\tvalid_0's rmse: 0.265408\n",
            "[1200]\tvalid_0's rmse: 0.264662\n",
            "[1300]\tvalid_0's rmse: 0.263996\n",
            "[1400]\tvalid_0's rmse: 0.263488\n",
            "[1500]\tvalid_0's rmse: 0.263041\n",
            "[1600]\tvalid_0's rmse: 0.262595\n",
            "[1700]\tvalid_0's rmse: 0.262226\n",
            "[1800]\tvalid_0's rmse: 0.261959\n",
            "[1900]\tvalid_0's rmse: 0.261717\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    7     8     9 ... 72895 72898 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290077\n",
            "[200]\tvalid_0's rmse: 0.28395\n",
            "[300]\tvalid_0's rmse: 0.279503\n",
            "[400]\tvalid_0's rmse: 0.276142\n",
            "[500]\tvalid_0's rmse: 0.273407\n",
            "[600]\tvalid_0's rmse: 0.271285\n",
            "[700]\tvalid_0's rmse: 0.269472\n",
            "[800]\tvalid_0's rmse: 0.268047\n",
            "[900]\tvalid_0's rmse: 0.266876\n",
            "[1000]\tvalid_0's rmse: 0.265787\n",
            "[1100]\tvalid_0's rmse: 0.264958\n",
            "[1200]\tvalid_0's rmse: 0.264249\n",
            "[1300]\tvalid_0's rmse: 0.263601\n",
            "[1400]\tvalid_0's rmse: 0.263094\n",
            "[1500]\tvalid_0's rmse: 0.262703\n",
            "[1600]\tvalid_0's rmse: 0.262302\n",
            "[1700]\tvalid_0's rmse: 0.26197\n",
            "[1800]\tvalid_0's rmse: 0.261698\n",
            "[1900]\tvalid_0's rmse: 0.261465\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [   18    22    30 ... 72899 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291468\n",
            "[200]\tvalid_0's rmse: 0.285498\n",
            "[300]\tvalid_0's rmse: 0.281145\n",
            "[400]\tvalid_0's rmse: 0.277769\n",
            "[500]\tvalid_0's rmse: 0.275158\n",
            "[600]\tvalid_0's rmse: 0.273075\n",
            "[700]\tvalid_0's rmse: 0.27131\n",
            "[800]\tvalid_0's rmse: 0.269739\n",
            "[900]\tvalid_0's rmse: 0.268523\n",
            "[1000]\tvalid_0's rmse: 0.267472\n",
            "[1100]\tvalid_0's rmse: 0.266555\n",
            "[1200]\tvalid_0's rmse: 0.265775\n",
            "[1300]\tvalid_0's rmse: 0.265106\n",
            "[1400]\tvalid_0's rmse: 0.26447\n",
            "[1500]\tvalid_0's rmse: 0.263939\n",
            "[1600]\tvalid_0's rmse: 0.263532\n",
            "[1700]\tvalid_0's rmse: 0.263191\n",
            "[1800]\tvalid_0's rmse: 0.262912\n",
            "[1900]\tvalid_0's rmse: 0.262672\n",
            "[2000]\tvalid_0's rmse: 0.262463\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.262462\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [    3    14    17 ... 72905 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291747\n",
            "[200]\tvalid_0's rmse: 0.285526\n",
            "[300]\tvalid_0's rmse: 0.281068\n",
            "[400]\tvalid_0's rmse: 0.277726\n",
            "[500]\tvalid_0's rmse: 0.275079\n",
            "[600]\tvalid_0's rmse: 0.27291\n",
            "[700]\tvalid_0's rmse: 0.271144\n",
            "[800]\tvalid_0's rmse: 0.269734\n",
            "[900]\tvalid_0's rmse: 0.268572\n",
            "[1000]\tvalid_0's rmse: 0.267497\n",
            "[1100]\tvalid_0's rmse: 0.266586\n",
            "[1200]\tvalid_0's rmse: 0.265888\n",
            "[1300]\tvalid_0's rmse: 0.265267\n",
            "[1400]\tvalid_0's rmse: 0.264738\n",
            "[1500]\tvalid_0's rmse: 0.264234\n",
            "[1600]\tvalid_0's rmse: 0.263807\n",
            "[1700]\tvalid_0's rmse: 0.263483\n",
            "[1800]\tvalid_0's rmse: 0.263198\n",
            "[1900]\tvalid_0's rmse: 0.262981\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "TRAIN: [    1     2     3 ... 72907 72908 72910] TEST: [    0     6    11 ... 72900 72902 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294111\n",
            "[200]\tvalid_0's rmse: 0.288443\n",
            "[300]\tvalid_0's rmse: 0.284251\n",
            "[400]\tvalid_0's rmse: 0.281047\n",
            "[500]\tvalid_0's rmse: 0.27845\n",
            "[600]\tvalid_0's rmse: 0.276293\n",
            "[700]\tvalid_0's rmse: 0.274555\n",
            "[800]\tvalid_0's rmse: 0.273134\n",
            "[900]\tvalid_0's rmse: 0.271914\n",
            "[1000]\tvalid_0's rmse: 0.270905\n",
            "[1100]\tvalid_0's rmse: 0.269961\n",
            "[1200]\tvalid_0's rmse: 0.269243\n",
            "[1300]\tvalid_0's rmse: 0.268578\n",
            "[1400]\tvalid_0's rmse: 0.268063\n",
            "[1500]\tvalid_0's rmse: 0.267634\n",
            "[1600]\tvalid_0's rmse: 0.267238\n",
            "[1700]\tvalid_0's rmse: 0.26691\n",
            "[1800]\tvalid_0's rmse: 0.266643\n",
            "[1900]\tvalid_0's rmse: 0.266371\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "TRAIN: [    0     2     3 ... 72908 72909 72910] TEST: [    1     4     9 ... 72894 72903 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290089\n",
            "[200]\tvalid_0's rmse: 0.28383\n",
            "[300]\tvalid_0's rmse: 0.279385\n",
            "[400]\tvalid_0's rmse: 0.275832\n",
            "[500]\tvalid_0's rmse: 0.272987\n",
            "[600]\tvalid_0's rmse: 0.270751\n",
            "[700]\tvalid_0's rmse: 0.268905\n",
            "[800]\tvalid_0's rmse: 0.267407\n",
            "[900]\tvalid_0's rmse: 0.266094\n",
            "[1000]\tvalid_0's rmse: 0.264997\n",
            "[1100]\tvalid_0's rmse: 0.264064\n",
            "[1200]\tvalid_0's rmse: 0.263277\n",
            "[1300]\tvalid_0's rmse: 0.262663\n",
            "[1400]\tvalid_0's rmse: 0.262124\n",
            "[1500]\tvalid_0's rmse: 0.261694\n",
            "[1600]\tvalid_0's rmse: 0.261322\n",
            "[1700]\tvalid_0's rmse: 0.260995\n",
            "[1800]\tvalid_0's rmse: 0.260709\n",
            "[1900]\tvalid_0's rmse: 0.260489\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "TRAIN: [    0     1     3 ... 72907 72909 72910] TEST: [    2     7     8 ... 72877 72892 72908]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.293128\n",
            "[200]\tvalid_0's rmse: 0.287017\n",
            "[300]\tvalid_0's rmse: 0.282348\n",
            "[400]\tvalid_0's rmse: 0.278767\n",
            "[500]\tvalid_0's rmse: 0.275915\n",
            "[600]\tvalid_0's rmse: 0.273598\n",
            "[700]\tvalid_0's rmse: 0.271662\n",
            "[800]\tvalid_0's rmse: 0.270127\n",
            "[900]\tvalid_0's rmse: 0.26882\n",
            "[1000]\tvalid_0's rmse: 0.267728\n",
            "[1100]\tvalid_0's rmse: 0.266823\n",
            "[1200]\tvalid_0's rmse: 0.26607\n",
            "[1300]\tvalid_0's rmse: 0.265355\n",
            "[1400]\tvalid_0's rmse: 0.264762\n",
            "[1500]\tvalid_0's rmse: 0.264251\n",
            "[1600]\tvalid_0's rmse: 0.263841\n",
            "[1700]\tvalid_0's rmse: 0.263454\n",
            "[1800]\tvalid_0's rmse: 0.26315\n",
            "[1900]\tvalid_0's rmse: 0.262887\n",
            "[2000]\tvalid_0's rmse: 0.262685\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1998]\tvalid_0's rmse: 0.262682\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    5    10    13 ... 72897 72898 72899]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.288058\n",
            "[200]\tvalid_0's rmse: 0.282042\n",
            "[300]\tvalid_0's rmse: 0.277666\n",
            "[400]\tvalid_0's rmse: 0.274219\n",
            "[500]\tvalid_0's rmse: 0.271488\n",
            "[600]\tvalid_0's rmse: 0.269374\n",
            "[700]\tvalid_0's rmse: 0.267702\n",
            "[800]\tvalid_0's rmse: 0.266231\n",
            "[900]\tvalid_0's rmse: 0.26497\n",
            "[1000]\tvalid_0's rmse: 0.263937\n",
            "[1100]\tvalid_0's rmse: 0.263078\n",
            "[1200]\tvalid_0's rmse: 0.262259\n",
            "[1300]\tvalid_0's rmse: 0.261621\n",
            "[1400]\tvalid_0's rmse: 0.261126\n",
            "[1500]\tvalid_0's rmse: 0.260683\n",
            "[1600]\tvalid_0's rmse: 0.260279\n",
            "[1700]\tvalid_0's rmse: 0.259956\n",
            "[1800]\tvalid_0's rmse: 0.259709\n",
            "[1900]\tvalid_0's rmse: 0.259508\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "TRAIN: [    0     2     3 ... 72906 72907 72910] TEST: [    1     4     5 ... 72905 72908 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290765\n",
            "[200]\tvalid_0's rmse: 0.284734\n",
            "[300]\tvalid_0's rmse: 0.280311\n",
            "[400]\tvalid_0's rmse: 0.276793\n",
            "[500]\tvalid_0's rmse: 0.274067\n",
            "[600]\tvalid_0's rmse: 0.271808\n",
            "[700]\tvalid_0's rmse: 0.269987\n",
            "[800]\tvalid_0's rmse: 0.268509\n",
            "[900]\tvalid_0's rmse: 0.267202\n",
            "[1000]\tvalid_0's rmse: 0.266131\n",
            "[1100]\tvalid_0's rmse: 0.265195\n",
            "[1200]\tvalid_0's rmse: 0.264399\n",
            "[1300]\tvalid_0's rmse: 0.263658\n",
            "[1400]\tvalid_0's rmse: 0.263076\n",
            "[1500]\tvalid_0's rmse: 0.26259\n",
            "[1600]\tvalid_0's rmse: 0.262192\n",
            "[1700]\tvalid_0's rmse: 0.26189\n",
            "[1800]\tvalid_0's rmse: 0.261613\n",
            "[1900]\tvalid_0's rmse: 0.261371\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "TRAIN: [    0     1     3 ... 72908 72909 72910] TEST: [    2     6    12 ... 72893 72896 72901]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294846\n",
            "[200]\tvalid_0's rmse: 0.28867\n",
            "[300]\tvalid_0's rmse: 0.284003\n",
            "[400]\tvalid_0's rmse: 0.280604\n",
            "[500]\tvalid_0's rmse: 0.277742\n",
            "[600]\tvalid_0's rmse: 0.275424\n",
            "[700]\tvalid_0's rmse: 0.273705\n",
            "[800]\tvalid_0's rmse: 0.272211\n",
            "[900]\tvalid_0's rmse: 0.271004\n",
            "[1000]\tvalid_0's rmse: 0.269999\n",
            "[1100]\tvalid_0's rmse: 0.269027\n",
            "[1200]\tvalid_0's rmse: 0.268284\n",
            "[1300]\tvalid_0's rmse: 0.26762\n",
            "[1400]\tvalid_0's rmse: 0.26708\n",
            "[1500]\tvalid_0's rmse: 0.266558\n",
            "[1600]\tvalid_0's rmse: 0.266125\n",
            "[1700]\tvalid_0's rmse: 0.265799\n",
            "[1800]\tvalid_0's rmse: 0.265527\n",
            "[1900]\tvalid_0's rmse: 0.265327\n",
            "[2000]\tvalid_0's rmse: 0.265147\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.265146\n",
            "TRAIN: [    1     2     4 ... 72908 72909 72910] TEST: [    0     3    11 ... 72894 72902 72904]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290396\n",
            "[200]\tvalid_0's rmse: 0.284551\n",
            "[300]\tvalid_0's rmse: 0.280181\n",
            "[400]\tvalid_0's rmse: 0.276809\n",
            "[500]\tvalid_0's rmse: 0.274079\n",
            "[600]\tvalid_0's rmse: 0.271791\n",
            "[700]\tvalid_0's rmse: 0.270034\n",
            "[800]\tvalid_0's rmse: 0.268549\n",
            "[900]\tvalid_0's rmse: 0.267253\n",
            "[1000]\tvalid_0's rmse: 0.266198\n",
            "[1100]\tvalid_0's rmse: 0.265408\n",
            "[1200]\tvalid_0's rmse: 0.264662\n",
            "[1300]\tvalid_0's rmse: 0.263996\n",
            "[1400]\tvalid_0's rmse: 0.263488\n",
            "[1500]\tvalid_0's rmse: 0.263041\n",
            "[1600]\tvalid_0's rmse: 0.262595\n",
            "[1700]\tvalid_0's rmse: 0.262226\n",
            "[1800]\tvalid_0's rmse: 0.261959\n",
            "[1900]\tvalid_0's rmse: 0.261717\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    7     8     9 ... 72895 72898 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290077\n",
            "[200]\tvalid_0's rmse: 0.28395\n",
            "[300]\tvalid_0's rmse: 0.279503\n",
            "[400]\tvalid_0's rmse: 0.276142\n",
            "[500]\tvalid_0's rmse: 0.273407\n",
            "[600]\tvalid_0's rmse: 0.271285\n",
            "[700]\tvalid_0's rmse: 0.269472\n",
            "[800]\tvalid_0's rmse: 0.268047\n",
            "[900]\tvalid_0's rmse: 0.266876\n",
            "[1000]\tvalid_0's rmse: 0.265787\n",
            "[1100]\tvalid_0's rmse: 0.264958\n",
            "[1200]\tvalid_0's rmse: 0.264249\n",
            "[1300]\tvalid_0's rmse: 0.263601\n",
            "[1400]\tvalid_0's rmse: 0.263094\n",
            "[1500]\tvalid_0's rmse: 0.262703\n",
            "[1600]\tvalid_0's rmse: 0.262302\n",
            "[1700]\tvalid_0's rmse: 0.26197\n",
            "[1800]\tvalid_0's rmse: 0.261698\n",
            "[1900]\tvalid_0's rmse: 0.261465\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [   18    22    30 ... 72899 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291468\n",
            "[200]\tvalid_0's rmse: 0.285498\n",
            "[300]\tvalid_0's rmse: 0.281145\n",
            "[400]\tvalid_0's rmse: 0.277769\n",
            "[500]\tvalid_0's rmse: 0.275158\n",
            "[600]\tvalid_0's rmse: 0.273075\n",
            "[700]\tvalid_0's rmse: 0.27131\n",
            "[800]\tvalid_0's rmse: 0.269739\n",
            "[900]\tvalid_0's rmse: 0.268523\n",
            "[1000]\tvalid_0's rmse: 0.267472\n",
            "[1100]\tvalid_0's rmse: 0.266555\n",
            "[1200]\tvalid_0's rmse: 0.265775\n",
            "[1300]\tvalid_0's rmse: 0.265106\n",
            "[1400]\tvalid_0's rmse: 0.26447\n",
            "[1500]\tvalid_0's rmse: 0.263939\n",
            "[1600]\tvalid_0's rmse: 0.263532\n",
            "[1700]\tvalid_0's rmse: 0.263191\n",
            "[1800]\tvalid_0's rmse: 0.262912\n",
            "[1900]\tvalid_0's rmse: 0.262672\n",
            "[2000]\tvalid_0's rmse: 0.262463\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.262462\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [    3    14    17 ... 72905 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291747\n",
            "[200]\tvalid_0's rmse: 0.285526\n",
            "[300]\tvalid_0's rmse: 0.281068\n",
            "[400]\tvalid_0's rmse: 0.277726\n",
            "[500]\tvalid_0's rmse: 0.275079\n",
            "[600]\tvalid_0's rmse: 0.27291\n",
            "[700]\tvalid_0's rmse: 0.271144\n",
            "[800]\tvalid_0's rmse: 0.269734\n",
            "[900]\tvalid_0's rmse: 0.268572\n",
            "[1000]\tvalid_0's rmse: 0.267497\n",
            "[1100]\tvalid_0's rmse: 0.266586\n",
            "[1200]\tvalid_0's rmse: 0.265888\n",
            "[1300]\tvalid_0's rmse: 0.265267\n",
            "[1400]\tvalid_0's rmse: 0.264738\n",
            "[1500]\tvalid_0's rmse: 0.264234\n",
            "[1600]\tvalid_0's rmse: 0.263807\n",
            "[1700]\tvalid_0's rmse: 0.263483\n",
            "[1800]\tvalid_0's rmse: 0.263198\n",
            "[1900]\tvalid_0's rmse: 0.262981\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "TRAIN: [    1     2     3 ... 72907 72908 72910] TEST: [    0     6    11 ... 72900 72902 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294111\n",
            "[200]\tvalid_0's rmse: 0.288443\n",
            "[300]\tvalid_0's rmse: 0.284251\n",
            "[400]\tvalid_0's rmse: 0.281047\n",
            "[500]\tvalid_0's rmse: 0.27845\n",
            "[600]\tvalid_0's rmse: 0.276293\n",
            "[700]\tvalid_0's rmse: 0.274555\n",
            "[800]\tvalid_0's rmse: 0.273134\n",
            "[900]\tvalid_0's rmse: 0.271914\n",
            "[1000]\tvalid_0's rmse: 0.270905\n",
            "[1100]\tvalid_0's rmse: 0.269961\n",
            "[1200]\tvalid_0's rmse: 0.269243\n",
            "[1300]\tvalid_0's rmse: 0.268578\n",
            "[1400]\tvalid_0's rmse: 0.268063\n",
            "[1500]\tvalid_0's rmse: 0.267634\n",
            "[1600]\tvalid_0's rmse: 0.267238\n",
            "[1700]\tvalid_0's rmse: 0.26691\n",
            "[1800]\tvalid_0's rmse: 0.266643\n",
            "[1900]\tvalid_0's rmse: 0.266371\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "TRAIN: [    0     2     3 ... 72908 72909 72910] TEST: [    1     4     9 ... 72894 72903 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290089\n",
            "[200]\tvalid_0's rmse: 0.28383\n",
            "[300]\tvalid_0's rmse: 0.279385\n",
            "[400]\tvalid_0's rmse: 0.275832\n",
            "[500]\tvalid_0's rmse: 0.272987\n",
            "[600]\tvalid_0's rmse: 0.270751\n",
            "[700]\tvalid_0's rmse: 0.268905\n",
            "[800]\tvalid_0's rmse: 0.267407\n",
            "[900]\tvalid_0's rmse: 0.266094\n",
            "[1000]\tvalid_0's rmse: 0.264997\n",
            "[1100]\tvalid_0's rmse: 0.264064\n",
            "[1200]\tvalid_0's rmse: 0.263277\n",
            "[1300]\tvalid_0's rmse: 0.262663\n",
            "[1400]\tvalid_0's rmse: 0.262124\n",
            "[1500]\tvalid_0's rmse: 0.261694\n",
            "[1600]\tvalid_0's rmse: 0.261322\n",
            "[1700]\tvalid_0's rmse: 0.260995\n",
            "[1800]\tvalid_0's rmse: 0.260709\n",
            "[1900]\tvalid_0's rmse: 0.260489\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "TRAIN: [    0     1     3 ... 72907 72909 72910] TEST: [    2     7     8 ... 72877 72892 72908]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.293128\n",
            "[200]\tvalid_0's rmse: 0.287017\n",
            "[300]\tvalid_0's rmse: 0.282348\n",
            "[400]\tvalid_0's rmse: 0.278767\n",
            "[500]\tvalid_0's rmse: 0.275915\n",
            "[600]\tvalid_0's rmse: 0.273598\n",
            "[700]\tvalid_0's rmse: 0.271662\n",
            "[800]\tvalid_0's rmse: 0.270127\n",
            "[900]\tvalid_0's rmse: 0.26882\n",
            "[1000]\tvalid_0's rmse: 0.267728\n",
            "[1100]\tvalid_0's rmse: 0.266823\n",
            "[1200]\tvalid_0's rmse: 0.26607\n",
            "[1300]\tvalid_0's rmse: 0.265355\n",
            "[1400]\tvalid_0's rmse: 0.264762\n",
            "[1500]\tvalid_0's rmse: 0.264251\n",
            "[1600]\tvalid_0's rmse: 0.263841\n",
            "[1700]\tvalid_0's rmse: 0.263454\n",
            "[1800]\tvalid_0's rmse: 0.26315\n",
            "[1900]\tvalid_0's rmse: 0.262887\n",
            "[2000]\tvalid_0's rmse: 0.262685\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1998]\tvalid_0's rmse: 0.262682\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    5    10    13 ... 72897 72898 72899]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.288058\n",
            "[200]\tvalid_0's rmse: 0.282042\n",
            "[300]\tvalid_0's rmse: 0.277666\n",
            "[400]\tvalid_0's rmse: 0.274219\n",
            "[500]\tvalid_0's rmse: 0.271488\n",
            "[600]\tvalid_0's rmse: 0.269374\n",
            "[700]\tvalid_0's rmse: 0.267702\n",
            "[800]\tvalid_0's rmse: 0.266231\n",
            "[900]\tvalid_0's rmse: 0.26497\n",
            "[1000]\tvalid_0's rmse: 0.263937\n",
            "[1100]\tvalid_0's rmse: 0.263078\n",
            "[1200]\tvalid_0's rmse: 0.262259\n",
            "[1300]\tvalid_0's rmse: 0.261621\n",
            "[1400]\tvalid_0's rmse: 0.261126\n",
            "[1500]\tvalid_0's rmse: 0.260683\n",
            "[1600]\tvalid_0's rmse: 0.260279\n",
            "[1700]\tvalid_0's rmse: 0.259956\n",
            "[1800]\tvalid_0's rmse: 0.259709\n",
            "[1900]\tvalid_0's rmse: 0.259508\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "TRAIN: [    0     2     3 ... 72906 72907 72910] TEST: [    1     4     5 ... 72905 72908 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290765\n",
            "[200]\tvalid_0's rmse: 0.284734\n",
            "[300]\tvalid_0's rmse: 0.280311\n",
            "[400]\tvalid_0's rmse: 0.276793\n",
            "[500]\tvalid_0's rmse: 0.274067\n",
            "[600]\tvalid_0's rmse: 0.271808\n",
            "[700]\tvalid_0's rmse: 0.269987\n",
            "[800]\tvalid_0's rmse: 0.268509\n",
            "[900]\tvalid_0's rmse: 0.267202\n",
            "[1000]\tvalid_0's rmse: 0.266131\n",
            "[1100]\tvalid_0's rmse: 0.265195\n",
            "[1200]\tvalid_0's rmse: 0.264399\n",
            "[1300]\tvalid_0's rmse: 0.263658\n",
            "[1400]\tvalid_0's rmse: 0.263076\n",
            "[1500]\tvalid_0's rmse: 0.26259\n",
            "[1600]\tvalid_0's rmse: 0.262192\n",
            "[1700]\tvalid_0's rmse: 0.26189\n",
            "[1800]\tvalid_0's rmse: 0.261613\n",
            "[1900]\tvalid_0's rmse: 0.261371\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "TRAIN: [    0     1     3 ... 72908 72909 72910] TEST: [    2     6    12 ... 72893 72896 72901]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294846\n",
            "[200]\tvalid_0's rmse: 0.28867\n",
            "[300]\tvalid_0's rmse: 0.284003\n",
            "[400]\tvalid_0's rmse: 0.280604\n",
            "[500]\tvalid_0's rmse: 0.277742\n",
            "[600]\tvalid_0's rmse: 0.275424\n",
            "[700]\tvalid_0's rmse: 0.273705\n",
            "[800]\tvalid_0's rmse: 0.272211\n",
            "[900]\tvalid_0's rmse: 0.271004\n",
            "[1000]\tvalid_0's rmse: 0.269999\n",
            "[1100]\tvalid_0's rmse: 0.269027\n",
            "[1200]\tvalid_0's rmse: 0.268284\n",
            "[1300]\tvalid_0's rmse: 0.26762\n",
            "[1400]\tvalid_0's rmse: 0.26708\n",
            "[1500]\tvalid_0's rmse: 0.266558\n",
            "[1600]\tvalid_0's rmse: 0.266125\n",
            "[1700]\tvalid_0's rmse: 0.265799\n",
            "[1800]\tvalid_0's rmse: 0.265527\n",
            "[1900]\tvalid_0's rmse: 0.265327\n",
            "[2000]\tvalid_0's rmse: 0.265147\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.265146\n",
            "TRAIN: [    1     2     4 ... 72908 72909 72910] TEST: [    0     3    11 ... 72894 72902 72904]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290396\n",
            "[200]\tvalid_0's rmse: 0.284551\n",
            "[300]\tvalid_0's rmse: 0.280181\n",
            "[400]\tvalid_0's rmse: 0.276809\n",
            "[500]\tvalid_0's rmse: 0.274079\n",
            "[600]\tvalid_0's rmse: 0.271791\n",
            "[700]\tvalid_0's rmse: 0.270034\n",
            "[800]\tvalid_0's rmse: 0.268549\n",
            "[900]\tvalid_0's rmse: 0.267253\n",
            "[1000]\tvalid_0's rmse: 0.266198\n",
            "[1100]\tvalid_0's rmse: 0.265408\n",
            "[1200]\tvalid_0's rmse: 0.264662\n",
            "[1300]\tvalid_0's rmse: 0.263996\n",
            "[1400]\tvalid_0's rmse: 0.263488\n",
            "[1500]\tvalid_0's rmse: 0.263041\n",
            "[1600]\tvalid_0's rmse: 0.262595\n",
            "[1700]\tvalid_0's rmse: 0.262226\n",
            "[1800]\tvalid_0's rmse: 0.261959\n",
            "[1900]\tvalid_0's rmse: 0.261717\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    7     8     9 ... 72895 72898 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290077\n",
            "[200]\tvalid_0's rmse: 0.28395\n",
            "[300]\tvalid_0's rmse: 0.279503\n",
            "[400]\tvalid_0's rmse: 0.276142\n",
            "[500]\tvalid_0's rmse: 0.273407\n",
            "[600]\tvalid_0's rmse: 0.271285\n",
            "[700]\tvalid_0's rmse: 0.269472\n",
            "[800]\tvalid_0's rmse: 0.268047\n",
            "[900]\tvalid_0's rmse: 0.266876\n",
            "[1000]\tvalid_0's rmse: 0.265787\n",
            "[1100]\tvalid_0's rmse: 0.264958\n",
            "[1200]\tvalid_0's rmse: 0.264249\n",
            "[1300]\tvalid_0's rmse: 0.263601\n",
            "[1400]\tvalid_0's rmse: 0.263094\n",
            "[1500]\tvalid_0's rmse: 0.262703\n",
            "[1600]\tvalid_0's rmse: 0.262302\n",
            "[1700]\tvalid_0's rmse: 0.26197\n",
            "[1800]\tvalid_0's rmse: 0.261698\n",
            "[1900]\tvalid_0's rmse: 0.261465\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [   18    22    30 ... 72899 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291468\n",
            "[200]\tvalid_0's rmse: 0.285498\n",
            "[300]\tvalid_0's rmse: 0.281145\n",
            "[400]\tvalid_0's rmse: 0.277769\n",
            "[500]\tvalid_0's rmse: 0.275158\n",
            "[600]\tvalid_0's rmse: 0.273075\n",
            "[700]\tvalid_0's rmse: 0.27131\n",
            "[800]\tvalid_0's rmse: 0.269739\n",
            "[900]\tvalid_0's rmse: 0.268523\n",
            "[1000]\tvalid_0's rmse: 0.267472\n",
            "[1100]\tvalid_0's rmse: 0.266555\n",
            "[1200]\tvalid_0's rmse: 0.265775\n",
            "[1300]\tvalid_0's rmse: 0.265106\n",
            "[1400]\tvalid_0's rmse: 0.26447\n",
            "[1500]\tvalid_0's rmse: 0.263939\n",
            "[1600]\tvalid_0's rmse: 0.263532\n",
            "[1700]\tvalid_0's rmse: 0.263191\n",
            "[1800]\tvalid_0's rmse: 0.262912\n",
            "[1900]\tvalid_0's rmse: 0.262672\n",
            "[2000]\tvalid_0's rmse: 0.262463\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.262462\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [    3    14    17 ... 72905 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291747\n",
            "[200]\tvalid_0's rmse: 0.285526\n",
            "[300]\tvalid_0's rmse: 0.281068\n",
            "[400]\tvalid_0's rmse: 0.277726\n",
            "[500]\tvalid_0's rmse: 0.275079\n",
            "[600]\tvalid_0's rmse: 0.27291\n",
            "[700]\tvalid_0's rmse: 0.271144\n",
            "[800]\tvalid_0's rmse: 0.269734\n",
            "[900]\tvalid_0's rmse: 0.268572\n",
            "[1000]\tvalid_0's rmse: 0.267497\n",
            "[1100]\tvalid_0's rmse: 0.266586\n",
            "[1200]\tvalid_0's rmse: 0.265888\n",
            "[1300]\tvalid_0's rmse: 0.265267\n",
            "[1400]\tvalid_0's rmse: 0.264738\n",
            "[1500]\tvalid_0's rmse: 0.264234\n",
            "[1600]\tvalid_0's rmse: 0.263807\n",
            "[1700]\tvalid_0's rmse: 0.263483\n",
            "[1800]\tvalid_0's rmse: 0.263198\n",
            "[1900]\tvalid_0's rmse: 0.262981\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "TRAIN: [    1     2     3 ... 72907 72908 72910] TEST: [    0     6    11 ... 72900 72902 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294111\n",
            "[200]\tvalid_0's rmse: 0.288443\n",
            "[300]\tvalid_0's rmse: 0.284251\n",
            "[400]\tvalid_0's rmse: 0.281047\n",
            "[500]\tvalid_0's rmse: 0.27845\n",
            "[600]\tvalid_0's rmse: 0.276293\n",
            "[700]\tvalid_0's rmse: 0.274555\n",
            "[800]\tvalid_0's rmse: 0.273134\n",
            "[900]\tvalid_0's rmse: 0.271914\n",
            "[1000]\tvalid_0's rmse: 0.270905\n",
            "[1100]\tvalid_0's rmse: 0.269961\n",
            "[1200]\tvalid_0's rmse: 0.269243\n",
            "[1300]\tvalid_0's rmse: 0.268578\n",
            "[1400]\tvalid_0's rmse: 0.268063\n",
            "[1500]\tvalid_0's rmse: 0.267634\n",
            "[1600]\tvalid_0's rmse: 0.267238\n",
            "[1700]\tvalid_0's rmse: 0.26691\n",
            "[1800]\tvalid_0's rmse: 0.266643\n",
            "[1900]\tvalid_0's rmse: 0.266371\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "TRAIN: [    0     2     3 ... 72908 72909 72910] TEST: [    1     4     9 ... 72894 72903 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290089\n",
            "[200]\tvalid_0's rmse: 0.28383\n",
            "[300]\tvalid_0's rmse: 0.279385\n",
            "[400]\tvalid_0's rmse: 0.275832\n",
            "[500]\tvalid_0's rmse: 0.272987\n",
            "[600]\tvalid_0's rmse: 0.270751\n",
            "[700]\tvalid_0's rmse: 0.268905\n",
            "[800]\tvalid_0's rmse: 0.267407\n",
            "[900]\tvalid_0's rmse: 0.266094\n",
            "[1000]\tvalid_0's rmse: 0.264997\n",
            "[1100]\tvalid_0's rmse: 0.264064\n",
            "[1200]\tvalid_0's rmse: 0.263277\n",
            "[1300]\tvalid_0's rmse: 0.262663\n",
            "[1400]\tvalid_0's rmse: 0.262124\n",
            "[1500]\tvalid_0's rmse: 0.261694\n",
            "[1600]\tvalid_0's rmse: 0.261322\n",
            "[1700]\tvalid_0's rmse: 0.260995\n",
            "[1800]\tvalid_0's rmse: 0.260709\n",
            "[1900]\tvalid_0's rmse: 0.260489\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "TRAIN: [    0     1     3 ... 72907 72909 72910] TEST: [    2     7     8 ... 72877 72892 72908]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.293128\n",
            "[200]\tvalid_0's rmse: 0.287017\n",
            "[300]\tvalid_0's rmse: 0.282348\n",
            "[400]\tvalid_0's rmse: 0.278767\n",
            "[500]\tvalid_0's rmse: 0.275915\n",
            "[600]\tvalid_0's rmse: 0.273598\n",
            "[700]\tvalid_0's rmse: 0.271662\n",
            "[800]\tvalid_0's rmse: 0.270127\n",
            "[900]\tvalid_0's rmse: 0.26882\n",
            "[1000]\tvalid_0's rmse: 0.267728\n",
            "[1100]\tvalid_0's rmse: 0.266823\n",
            "[1200]\tvalid_0's rmse: 0.26607\n",
            "[1300]\tvalid_0's rmse: 0.265355\n",
            "[1400]\tvalid_0's rmse: 0.264762\n",
            "[1500]\tvalid_0's rmse: 0.264251\n",
            "[1600]\tvalid_0's rmse: 0.263841\n",
            "[1700]\tvalid_0's rmse: 0.263454\n",
            "[1800]\tvalid_0's rmse: 0.26315\n",
            "[1900]\tvalid_0's rmse: 0.262887\n",
            "[2000]\tvalid_0's rmse: 0.262685\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1998]\tvalid_0's rmse: 0.262682\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    5    10    13 ... 72897 72898 72899]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.288058\n",
            "[200]\tvalid_0's rmse: 0.282042\n",
            "[300]\tvalid_0's rmse: 0.277666\n",
            "[400]\tvalid_0's rmse: 0.274219\n",
            "[500]\tvalid_0's rmse: 0.271488\n",
            "[600]\tvalid_0's rmse: 0.269374\n",
            "[700]\tvalid_0's rmse: 0.267702\n",
            "[800]\tvalid_0's rmse: 0.266231\n",
            "[900]\tvalid_0's rmse: 0.26497\n",
            "[1000]\tvalid_0's rmse: 0.263937\n",
            "[1100]\tvalid_0's rmse: 0.263078\n",
            "[1200]\tvalid_0's rmse: 0.262259\n",
            "[1300]\tvalid_0's rmse: 0.261621\n",
            "[1400]\tvalid_0's rmse: 0.261126\n",
            "[1500]\tvalid_0's rmse: 0.260683\n",
            "[1600]\tvalid_0's rmse: 0.260279\n",
            "[1700]\tvalid_0's rmse: 0.259956\n",
            "[1800]\tvalid_0's rmse: 0.259709\n",
            "[1900]\tvalid_0's rmse: 0.259508\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "TRAIN: [    0     2     3 ... 72906 72907 72910] TEST: [    1     4     5 ... 72905 72908 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290765\n",
            "[200]\tvalid_0's rmse: 0.284734\n",
            "[300]\tvalid_0's rmse: 0.280311\n",
            "[400]\tvalid_0's rmse: 0.276793\n",
            "[500]\tvalid_0's rmse: 0.274067\n",
            "[600]\tvalid_0's rmse: 0.271808\n",
            "[700]\tvalid_0's rmse: 0.269987\n",
            "[800]\tvalid_0's rmse: 0.268509\n",
            "[900]\tvalid_0's rmse: 0.267202\n",
            "[1000]\tvalid_0's rmse: 0.266131\n",
            "[1100]\tvalid_0's rmse: 0.265195\n",
            "[1200]\tvalid_0's rmse: 0.264399\n",
            "[1300]\tvalid_0's rmse: 0.263658\n",
            "[1400]\tvalid_0's rmse: 0.263076\n",
            "[1500]\tvalid_0's rmse: 0.26259\n",
            "[1600]\tvalid_0's rmse: 0.262192\n",
            "[1700]\tvalid_0's rmse: 0.26189\n",
            "[1800]\tvalid_0's rmse: 0.261613\n",
            "[1900]\tvalid_0's rmse: 0.261371\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "TRAIN: [    0     1     3 ... 72908 72909 72910] TEST: [    2     6    12 ... 72893 72896 72901]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294846\n",
            "[200]\tvalid_0's rmse: 0.28867\n",
            "[300]\tvalid_0's rmse: 0.284003\n",
            "[400]\tvalid_0's rmse: 0.280604\n",
            "[500]\tvalid_0's rmse: 0.277742\n",
            "[600]\tvalid_0's rmse: 0.275424\n",
            "[700]\tvalid_0's rmse: 0.273705\n",
            "[800]\tvalid_0's rmse: 0.272211\n",
            "[900]\tvalid_0's rmse: 0.271004\n",
            "[1000]\tvalid_0's rmse: 0.269999\n",
            "[1100]\tvalid_0's rmse: 0.269027\n",
            "[1200]\tvalid_0's rmse: 0.268284\n",
            "[1300]\tvalid_0's rmse: 0.26762\n",
            "[1400]\tvalid_0's rmse: 0.26708\n",
            "[1500]\tvalid_0's rmse: 0.266558\n",
            "[1600]\tvalid_0's rmse: 0.266125\n",
            "[1700]\tvalid_0's rmse: 0.265799\n",
            "[1800]\tvalid_0's rmse: 0.265527\n",
            "[1900]\tvalid_0's rmse: 0.265327\n",
            "[2000]\tvalid_0's rmse: 0.265147\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.265146\n",
            "TRAIN: [    1     2     4 ... 72908 72909 72910] TEST: [    0     3    11 ... 72894 72902 72904]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290396\n",
            "[200]\tvalid_0's rmse: 0.284551\n",
            "[300]\tvalid_0's rmse: 0.280181\n",
            "[400]\tvalid_0's rmse: 0.276809\n",
            "[500]\tvalid_0's rmse: 0.274079\n",
            "[600]\tvalid_0's rmse: 0.271791\n",
            "[700]\tvalid_0's rmse: 0.270034\n",
            "[800]\tvalid_0's rmse: 0.268549\n",
            "[900]\tvalid_0's rmse: 0.267253\n",
            "[1000]\tvalid_0's rmse: 0.266198\n",
            "[1100]\tvalid_0's rmse: 0.265408\n",
            "[1200]\tvalid_0's rmse: 0.264662\n",
            "[1300]\tvalid_0's rmse: 0.263996\n",
            "[1400]\tvalid_0's rmse: 0.263488\n",
            "[1500]\tvalid_0's rmse: 0.263041\n",
            "[1600]\tvalid_0's rmse: 0.262595\n",
            "[1700]\tvalid_0's rmse: 0.262226\n",
            "[1800]\tvalid_0's rmse: 0.261959\n",
            "[1900]\tvalid_0's rmse: 0.261717\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    7     8     9 ... 72895 72898 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290077\n",
            "[200]\tvalid_0's rmse: 0.28395\n",
            "[300]\tvalid_0's rmse: 0.279503\n",
            "[400]\tvalid_0's rmse: 0.276142\n",
            "[500]\tvalid_0's rmse: 0.273407\n",
            "[600]\tvalid_0's rmse: 0.271285\n",
            "[700]\tvalid_0's rmse: 0.269472\n",
            "[800]\tvalid_0's rmse: 0.268047\n",
            "[900]\tvalid_0's rmse: 0.266876\n",
            "[1000]\tvalid_0's rmse: 0.265787\n",
            "[1100]\tvalid_0's rmse: 0.264958\n",
            "[1200]\tvalid_0's rmse: 0.264249\n",
            "[1300]\tvalid_0's rmse: 0.263601\n",
            "[1400]\tvalid_0's rmse: 0.263094\n",
            "[1500]\tvalid_0's rmse: 0.262703\n",
            "[1600]\tvalid_0's rmse: 0.262302\n",
            "[1700]\tvalid_0's rmse: 0.26197\n",
            "[1800]\tvalid_0's rmse: 0.261698\n",
            "[1900]\tvalid_0's rmse: 0.261465\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [   18    22    30 ... 72899 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291468\n",
            "[200]\tvalid_0's rmse: 0.285498\n",
            "[300]\tvalid_0's rmse: 0.281145\n",
            "[400]\tvalid_0's rmse: 0.277769\n",
            "[500]\tvalid_0's rmse: 0.275158\n",
            "[600]\tvalid_0's rmse: 0.273075\n",
            "[700]\tvalid_0's rmse: 0.27131\n",
            "[800]\tvalid_0's rmse: 0.269739\n",
            "[900]\tvalid_0's rmse: 0.268523\n",
            "[1000]\tvalid_0's rmse: 0.267472\n",
            "[1100]\tvalid_0's rmse: 0.266555\n",
            "[1200]\tvalid_0's rmse: 0.265775\n",
            "[1300]\tvalid_0's rmse: 0.265106\n",
            "[1400]\tvalid_0's rmse: 0.26447\n",
            "[1500]\tvalid_0's rmse: 0.263939\n",
            "[1600]\tvalid_0's rmse: 0.263532\n",
            "[1700]\tvalid_0's rmse: 0.263191\n",
            "[1800]\tvalid_0's rmse: 0.262912\n",
            "[1900]\tvalid_0's rmse: 0.262672\n",
            "[2000]\tvalid_0's rmse: 0.262463\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.262462\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [    3    14    17 ... 72905 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291747\n",
            "[200]\tvalid_0's rmse: 0.285526\n",
            "[300]\tvalid_0's rmse: 0.281068\n",
            "[400]\tvalid_0's rmse: 0.277726\n",
            "[500]\tvalid_0's rmse: 0.275079\n",
            "[600]\tvalid_0's rmse: 0.27291\n",
            "[700]\tvalid_0's rmse: 0.271144\n",
            "[800]\tvalid_0's rmse: 0.269734\n",
            "[900]\tvalid_0's rmse: 0.268572\n",
            "[1000]\tvalid_0's rmse: 0.267497\n",
            "[1100]\tvalid_0's rmse: 0.266586\n",
            "[1200]\tvalid_0's rmse: 0.265888\n",
            "[1300]\tvalid_0's rmse: 0.265267\n",
            "[1400]\tvalid_0's rmse: 0.264738\n",
            "[1500]\tvalid_0's rmse: 0.264234\n",
            "[1600]\tvalid_0's rmse: 0.263807\n",
            "[1700]\tvalid_0's rmse: 0.263483\n",
            "[1800]\tvalid_0's rmse: 0.263198\n",
            "[1900]\tvalid_0's rmse: 0.262981\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.26274\n",
            "TRAIN: [    1     2     3 ... 72907 72908 72910] TEST: [    0     6    11 ... 72900 72902 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294111\n",
            "[200]\tvalid_0's rmse: 0.288443\n",
            "[300]\tvalid_0's rmse: 0.284251\n",
            "[400]\tvalid_0's rmse: 0.281047\n",
            "[500]\tvalid_0's rmse: 0.27845\n",
            "[600]\tvalid_0's rmse: 0.276293\n",
            "[700]\tvalid_0's rmse: 0.274555\n",
            "[800]\tvalid_0's rmse: 0.273134\n",
            "[900]\tvalid_0's rmse: 0.271914\n",
            "[1000]\tvalid_0's rmse: 0.270905\n",
            "[1100]\tvalid_0's rmse: 0.269961\n",
            "[1200]\tvalid_0's rmse: 0.269243\n",
            "[1300]\tvalid_0's rmse: 0.268578\n",
            "[1400]\tvalid_0's rmse: 0.268063\n",
            "[1500]\tvalid_0's rmse: 0.267634\n",
            "[1600]\tvalid_0's rmse: 0.267238\n",
            "[1700]\tvalid_0's rmse: 0.26691\n",
            "[1800]\tvalid_0's rmse: 0.266643\n",
            "[1900]\tvalid_0's rmse: 0.266371\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.266183\n",
            "TRAIN: [    0     2     3 ... 72908 72909 72910] TEST: [    1     4     9 ... 72894 72903 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290089\n",
            "[200]\tvalid_0's rmse: 0.28383\n",
            "[300]\tvalid_0's rmse: 0.279385\n",
            "[400]\tvalid_0's rmse: 0.275832\n",
            "[500]\tvalid_0's rmse: 0.272987\n",
            "[600]\tvalid_0's rmse: 0.270751\n",
            "[700]\tvalid_0's rmse: 0.268905\n",
            "[800]\tvalid_0's rmse: 0.267407\n",
            "[900]\tvalid_0's rmse: 0.266094\n",
            "[1000]\tvalid_0's rmse: 0.264997\n",
            "[1100]\tvalid_0's rmse: 0.264064\n",
            "[1200]\tvalid_0's rmse: 0.263277\n",
            "[1300]\tvalid_0's rmse: 0.262663\n",
            "[1400]\tvalid_0's rmse: 0.262124\n",
            "[1500]\tvalid_0's rmse: 0.261694\n",
            "[1600]\tvalid_0's rmse: 0.261322\n",
            "[1700]\tvalid_0's rmse: 0.260995\n",
            "[1800]\tvalid_0's rmse: 0.260709\n",
            "[1900]\tvalid_0's rmse: 0.260489\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.260285\n",
            "TRAIN: [    0     1     3 ... 72907 72909 72910] TEST: [    2     7     8 ... 72877 72892 72908]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.293128\n",
            "[200]\tvalid_0's rmse: 0.287017\n",
            "[300]\tvalid_0's rmse: 0.282348\n",
            "[400]\tvalid_0's rmse: 0.278767\n",
            "[500]\tvalid_0's rmse: 0.275915\n",
            "[600]\tvalid_0's rmse: 0.273598\n",
            "[700]\tvalid_0's rmse: 0.271662\n",
            "[800]\tvalid_0's rmse: 0.270127\n",
            "[900]\tvalid_0's rmse: 0.26882\n",
            "[1000]\tvalid_0's rmse: 0.267728\n",
            "[1100]\tvalid_0's rmse: 0.266823\n",
            "[1200]\tvalid_0's rmse: 0.26607\n",
            "[1300]\tvalid_0's rmse: 0.265355\n",
            "[1400]\tvalid_0's rmse: 0.264762\n",
            "[1500]\tvalid_0's rmse: 0.264251\n",
            "[1600]\tvalid_0's rmse: 0.263841\n",
            "[1700]\tvalid_0's rmse: 0.263454\n",
            "[1800]\tvalid_0's rmse: 0.26315\n",
            "[1900]\tvalid_0's rmse: 0.262887\n",
            "[2000]\tvalid_0's rmse: 0.262685\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1998]\tvalid_0's rmse: 0.262682\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    5    10    13 ... 72897 72898 72899]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.288058\n",
            "[200]\tvalid_0's rmse: 0.282042\n",
            "[300]\tvalid_0's rmse: 0.277666\n",
            "[400]\tvalid_0's rmse: 0.274219\n",
            "[500]\tvalid_0's rmse: 0.271488\n",
            "[600]\tvalid_0's rmse: 0.269374\n",
            "[700]\tvalid_0's rmse: 0.267702\n",
            "[800]\tvalid_0's rmse: 0.266231\n",
            "[900]\tvalid_0's rmse: 0.26497\n",
            "[1000]\tvalid_0's rmse: 0.263937\n",
            "[1100]\tvalid_0's rmse: 0.263078\n",
            "[1200]\tvalid_0's rmse: 0.262259\n",
            "[1300]\tvalid_0's rmse: 0.261621\n",
            "[1400]\tvalid_0's rmse: 0.261126\n",
            "[1500]\tvalid_0's rmse: 0.260683\n",
            "[1600]\tvalid_0's rmse: 0.260279\n",
            "[1700]\tvalid_0's rmse: 0.259956\n",
            "[1800]\tvalid_0's rmse: 0.259709\n",
            "[1900]\tvalid_0's rmse: 0.259508\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.259299\n",
            "TRAIN: [    0     2     3 ... 72906 72907 72910] TEST: [    1     4     5 ... 72905 72908 72909]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290765\n",
            "[200]\tvalid_0's rmse: 0.284734\n",
            "[300]\tvalid_0's rmse: 0.280311\n",
            "[400]\tvalid_0's rmse: 0.276793\n",
            "[500]\tvalid_0's rmse: 0.274067\n",
            "[600]\tvalid_0's rmse: 0.271808\n",
            "[700]\tvalid_0's rmse: 0.269987\n",
            "[800]\tvalid_0's rmse: 0.268509\n",
            "[900]\tvalid_0's rmse: 0.267202\n",
            "[1000]\tvalid_0's rmse: 0.266131\n",
            "[1100]\tvalid_0's rmse: 0.265195\n",
            "[1200]\tvalid_0's rmse: 0.264399\n",
            "[1300]\tvalid_0's rmse: 0.263658\n",
            "[1400]\tvalid_0's rmse: 0.263076\n",
            "[1500]\tvalid_0's rmse: 0.26259\n",
            "[1600]\tvalid_0's rmse: 0.262192\n",
            "[1700]\tvalid_0's rmse: 0.26189\n",
            "[1800]\tvalid_0's rmse: 0.261613\n",
            "[1900]\tvalid_0's rmse: 0.261371\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261146\n",
            "TRAIN: [    0     1     3 ... 72908 72909 72910] TEST: [    2     6    12 ... 72893 72896 72901]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.294846\n",
            "[200]\tvalid_0's rmse: 0.28867\n",
            "[300]\tvalid_0's rmse: 0.284003\n",
            "[400]\tvalid_0's rmse: 0.280604\n",
            "[500]\tvalid_0's rmse: 0.277742\n",
            "[600]\tvalid_0's rmse: 0.275424\n",
            "[700]\tvalid_0's rmse: 0.273705\n",
            "[800]\tvalid_0's rmse: 0.272211\n",
            "[900]\tvalid_0's rmse: 0.271004\n",
            "[1000]\tvalid_0's rmse: 0.269999\n",
            "[1100]\tvalid_0's rmse: 0.269027\n",
            "[1200]\tvalid_0's rmse: 0.268284\n",
            "[1300]\tvalid_0's rmse: 0.26762\n",
            "[1400]\tvalid_0's rmse: 0.26708\n",
            "[1500]\tvalid_0's rmse: 0.266558\n",
            "[1600]\tvalid_0's rmse: 0.266125\n",
            "[1700]\tvalid_0's rmse: 0.265799\n",
            "[1800]\tvalid_0's rmse: 0.265527\n",
            "[1900]\tvalid_0's rmse: 0.265327\n",
            "[2000]\tvalid_0's rmse: 0.265147\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.265146\n",
            "TRAIN: [    1     2     4 ... 72908 72909 72910] TEST: [    0     3    11 ... 72894 72902 72904]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290396\n",
            "[200]\tvalid_0's rmse: 0.284551\n",
            "[300]\tvalid_0's rmse: 0.280181\n",
            "[400]\tvalid_0's rmse: 0.276809\n",
            "[500]\tvalid_0's rmse: 0.274079\n",
            "[600]\tvalid_0's rmse: 0.271791\n",
            "[700]\tvalid_0's rmse: 0.270034\n",
            "[800]\tvalid_0's rmse: 0.268549\n",
            "[900]\tvalid_0's rmse: 0.267253\n",
            "[1000]\tvalid_0's rmse: 0.266198\n",
            "[1100]\tvalid_0's rmse: 0.265408\n",
            "[1200]\tvalid_0's rmse: 0.264662\n",
            "[1300]\tvalid_0's rmse: 0.263996\n",
            "[1400]\tvalid_0's rmse: 0.263488\n",
            "[1500]\tvalid_0's rmse: 0.263041\n",
            "[1600]\tvalid_0's rmse: 0.262595\n",
            "[1700]\tvalid_0's rmse: 0.262226\n",
            "[1800]\tvalid_0's rmse: 0.261959\n",
            "[1900]\tvalid_0's rmse: 0.261717\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261514\n",
            "TRAIN: [    0     1     2 ... 72908 72909 72910] TEST: [    7     8     9 ... 72895 72898 72906]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.290077\n",
            "[200]\tvalid_0's rmse: 0.28395\n",
            "[300]\tvalid_0's rmse: 0.279503\n",
            "[400]\tvalid_0's rmse: 0.276142\n",
            "[500]\tvalid_0's rmse: 0.273407\n",
            "[600]\tvalid_0's rmse: 0.271285\n",
            "[700]\tvalid_0's rmse: 0.269472\n",
            "[800]\tvalid_0's rmse: 0.268047\n",
            "[900]\tvalid_0's rmse: 0.266876\n",
            "[1000]\tvalid_0's rmse: 0.265787\n",
            "[1100]\tvalid_0's rmse: 0.264958\n",
            "[1200]\tvalid_0's rmse: 0.264249\n",
            "[1300]\tvalid_0's rmse: 0.263601\n",
            "[1400]\tvalid_0's rmse: 0.263094\n",
            "[1500]\tvalid_0's rmse: 0.262703\n",
            "[1600]\tvalid_0's rmse: 0.262302\n",
            "[1700]\tvalid_0's rmse: 0.26197\n",
            "[1800]\tvalid_0's rmse: 0.261698\n",
            "[1900]\tvalid_0's rmse: 0.261465\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\tvalid_0's rmse: 0.261242\n",
            "TRAIN: [    0     1     2 ... 72906 72908 72909] TEST: [   18    22    30 ... 72899 72907 72910]\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\tvalid_0's rmse: 0.291468\n",
            "[200]\tvalid_0's rmse: 0.285498\n",
            "[300]\tvalid_0's rmse: 0.281145\n",
            "[400]\tvalid_0's rmse: 0.277769\n",
            "[500]\tvalid_0's rmse: 0.275158\n",
            "[600]\tvalid_0's rmse: 0.273075\n",
            "[700]\tvalid_0's rmse: 0.27131\n",
            "[800]\tvalid_0's rmse: 0.269739\n",
            "[900]\tvalid_0's rmse: 0.268523\n",
            "[1000]\tvalid_0's rmse: 0.267472\n",
            "[1100]\tvalid_0's rmse: 0.266555\n",
            "[1200]\tvalid_0's rmse: 0.265775\n",
            "[1300]\tvalid_0's rmse: 0.265106\n",
            "[1400]\tvalid_0's rmse: 0.26447\n",
            "[1500]\tvalid_0's rmse: 0.263939\n",
            "[1600]\tvalid_0's rmse: 0.263532\n",
            "[1700]\tvalid_0's rmse: 0.263191\n",
            "[1800]\tvalid_0's rmse: 0.262912\n",
            "[1900]\tvalid_0's rmse: 0.262672\n",
            "[2000]\tvalid_0's rmse: 0.262463\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[1999]\tvalid_0's rmse: 0.262462\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6evj31A75-Mq",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "13505e44-1743-47d5-a30c-6e4cd0ccaaa3"
      },
      "source": [
        "# Reference: code from Ashish Patel\n",
        "\n",
        "nfolds = 5\n",
        "nrepeats = 2 \n",
        "folds = RepeatedKFold(n_splits=nfolds, n_repeats=nrepeats, random_state=0)\n",
        "fold_pred = np.zeros(len(train))\n",
        "feature_importance_df = pd.DataFrame()\n",
        "lgb_preds = np.zeros(len(test))\n",
        "\n",
        "for fold_, (trn_idx, val_idx) in enumerate(folds.split(train.values,target.values)):\n",
        "    print(\"fold n°{}\".format(fold_))\n",
        "    trn_data = lgb.Dataset(train.iloc[trn_idx], label=target.iloc[trn_idx]) #categorical_feature=categorical_feats\n",
        "    val_data = lgb.Dataset(train.iloc[val_idx], label=target.iloc[val_idx]) #categorical_feature=categorical_feats\n",
        "\n",
        "    iteration = 2000\n",
        "    lgb_m = lgb.train(params, trn_data, iteration, valid_sets = [trn_data, val_data], verbose_eval=100, early_stopping_rounds = 100)\n",
        "    fold_pred[val_idx] = lgb_m.predict(train.iloc[val_idx], num_iteration=lgb_m.best_iteration)\n",
        "    \n",
        "    fold_importance_df = pd.DataFrame()\n",
        "    fold_importance_df[\"feature\"] = train.columns\n",
        "    fold_importance_df[\"importance\"] = lgb_m.feature_importance()\n",
        "    fold_importance_df[\"fold\"] = fold_ + 1\n",
        "    feature_importance_df = pd.concat([feature_importance_df, fold_importance_df], axis=0)\n",
        "    \n",
        "    lgb_preds += lgb_m.predict(test, num_iteration=lgb_m.best_iteration) / (nfolds*nrepeats)\n",
        "\n",
        "print(\"CV score: {:<8.5f}\".format(np.sqrt(mean_squared_error(fold_pred, target))))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "fold n°0\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\ttraining's rmse: 0.286251\tvalid_1's rmse: 0.290854\n",
            "[200]\ttraining's rmse: 0.275598\tvalid_1's rmse: 0.284767\n",
            "[300]\ttraining's rmse: 0.266852\tvalid_1's rmse: 0.280309\n",
            "[400]\ttraining's rmse: 0.259484\tvalid_1's rmse: 0.276974\n",
            "[500]\ttraining's rmse: 0.253004\tvalid_1's rmse: 0.274199\n",
            "[600]\ttraining's rmse: 0.247194\tvalid_1's rmse: 0.271918\n",
            "[700]\ttraining's rmse: 0.241934\tvalid_1's rmse: 0.269938\n",
            "[800]\ttraining's rmse: 0.237153\tvalid_1's rmse: 0.268346\n",
            "[900]\ttraining's rmse: 0.232755\tvalid_1's rmse: 0.266906\n",
            "[1000]\ttraining's rmse: 0.228657\tvalid_1's rmse: 0.265735\n",
            "[1100]\ttraining's rmse: 0.224813\tvalid_1's rmse: 0.264664\n",
            "[1200]\ttraining's rmse: 0.221231\tvalid_1's rmse: 0.263744\n",
            "[1300]\ttraining's rmse: 0.217849\tvalid_1's rmse: 0.262908\n",
            "[1400]\ttraining's rmse: 0.214686\tvalid_1's rmse: 0.262209\n",
            "[1500]\ttraining's rmse: 0.211713\tvalid_1's rmse: 0.261583\n",
            "[1600]\ttraining's rmse: 0.208899\tvalid_1's rmse: 0.261016\n",
            "[1700]\ttraining's rmse: 0.206167\tvalid_1's rmse: 0.260515\n",
            "[1800]\ttraining's rmse: 0.203609\tvalid_1's rmse: 0.260034\n",
            "[1900]\ttraining's rmse: 0.20116\tvalid_1's rmse: 0.259622\n",
            "[2000]\ttraining's rmse: 0.19879\tvalid_1's rmse: 0.259252\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\ttraining's rmse: 0.19879\tvalid_1's rmse: 0.259252\n",
            "fold n°1\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\ttraining's rmse: 0.285458\tvalid_1's rmse: 0.293998\n",
            "[200]\ttraining's rmse: 0.274843\tvalid_1's rmse: 0.287885\n",
            "[300]\ttraining's rmse: 0.266113\tvalid_1's rmse: 0.283311\n",
            "[400]\ttraining's rmse: 0.25876\tvalid_1's rmse: 0.279841\n",
            "[500]\ttraining's rmse: 0.252292\tvalid_1's rmse: 0.27702\n",
            "[600]\ttraining's rmse: 0.24653\tvalid_1's rmse: 0.274744\n",
            "[700]\ttraining's rmse: 0.241316\tvalid_1's rmse: 0.272804\n",
            "[800]\ttraining's rmse: 0.236588\tvalid_1's rmse: 0.27114\n",
            "[900]\ttraining's rmse: 0.232189\tvalid_1's rmse: 0.269743\n",
            "[1000]\ttraining's rmse: 0.228121\tvalid_1's rmse: 0.268514\n",
            "[1100]\ttraining's rmse: 0.224348\tvalid_1's rmse: 0.26746\n",
            "[1200]\ttraining's rmse: 0.220793\tvalid_1's rmse: 0.266537\n",
            "[1300]\ttraining's rmse: 0.217451\tvalid_1's rmse: 0.265718\n",
            "[1400]\ttraining's rmse: 0.214317\tvalid_1's rmse: 0.265021\n",
            "[1500]\ttraining's rmse: 0.211333\tvalid_1's rmse: 0.264388\n",
            "[1600]\ttraining's rmse: 0.208487\tvalid_1's rmse: 0.263849\n",
            "[1700]\ttraining's rmse: 0.205781\tvalid_1's rmse: 0.263342\n",
            "[1800]\ttraining's rmse: 0.203195\tvalid_1's rmse: 0.262878\n",
            "[1900]\ttraining's rmse: 0.200752\tvalid_1's rmse: 0.262484\n",
            "[2000]\ttraining's rmse: 0.198404\tvalid_1's rmse: 0.262138\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\ttraining's rmse: 0.198404\tvalid_1's rmse: 0.262138\n",
            "fold n°2\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\ttraining's rmse: 0.286692\tvalid_1's rmse: 0.28904\n",
            "[200]\ttraining's rmse: 0.276065\tvalid_1's rmse: 0.282919\n",
            "[300]\ttraining's rmse: 0.267347\tvalid_1's rmse: 0.27836\n",
            "[400]\ttraining's rmse: 0.260004\tvalid_1's rmse: 0.274921\n",
            "[500]\ttraining's rmse: 0.25355\tvalid_1's rmse: 0.272098\n",
            "[600]\ttraining's rmse: 0.247786\tvalid_1's rmse: 0.269739\n",
            "[700]\ttraining's rmse: 0.242569\tvalid_1's rmse: 0.267825\n",
            "[800]\ttraining's rmse: 0.237845\tvalid_1's rmse: 0.266162\n",
            "[900]\ttraining's rmse: 0.233491\tvalid_1's rmse: 0.264732\n",
            "[1000]\ttraining's rmse: 0.229436\tvalid_1's rmse: 0.263492\n",
            "[1100]\ttraining's rmse: 0.225668\tvalid_1's rmse: 0.262439\n",
            "[1200]\ttraining's rmse: 0.22214\tvalid_1's rmse: 0.261522\n",
            "[1300]\ttraining's rmse: 0.218788\tvalid_1's rmse: 0.260674\n",
            "[1400]\ttraining's rmse: 0.215621\tvalid_1's rmse: 0.259945\n",
            "[1500]\ttraining's rmse: 0.212583\tvalid_1's rmse: 0.259291\n",
            "[1600]\ttraining's rmse: 0.209764\tvalid_1's rmse: 0.258702\n",
            "[1700]\ttraining's rmse: 0.207039\tvalid_1's rmse: 0.258175\n",
            "[1800]\ttraining's rmse: 0.204442\tvalid_1's rmse: 0.257773\n",
            "[1900]\ttraining's rmse: 0.201982\tvalid_1's rmse: 0.257398\n",
            "[2000]\ttraining's rmse: 0.199591\tvalid_1's rmse: 0.257016\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\ttraining's rmse: 0.199591\tvalid_1's rmse: 0.257016\n",
            "fold n°3\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\ttraining's rmse: 0.286163\tvalid_1's rmse: 0.291399\n",
            "[200]\ttraining's rmse: 0.275579\tvalid_1's rmse: 0.285206\n",
            "[300]\ttraining's rmse: 0.266878\tvalid_1's rmse: 0.280606\n",
            "[400]\ttraining's rmse: 0.259514\tvalid_1's rmse: 0.277088\n",
            "[500]\ttraining's rmse: 0.253008\tvalid_1's rmse: 0.274182\n",
            "[600]\ttraining's rmse: 0.247209\tvalid_1's rmse: 0.271895\n",
            "[700]\ttraining's rmse: 0.241992\tvalid_1's rmse: 0.269923\n",
            "[800]\ttraining's rmse: 0.237255\tvalid_1's rmse: 0.268247\n",
            "[900]\ttraining's rmse: 0.232873\tvalid_1's rmse: 0.266801\n",
            "[1000]\ttraining's rmse: 0.228799\tvalid_1's rmse: 0.265505\n",
            "[1100]\ttraining's rmse: 0.224997\tvalid_1's rmse: 0.264437\n",
            "[1200]\ttraining's rmse: 0.221464\tvalid_1's rmse: 0.263515\n",
            "[1300]\ttraining's rmse: 0.218107\tvalid_1's rmse: 0.262709\n",
            "[1400]\ttraining's rmse: 0.214985\tvalid_1's rmse: 0.261974\n",
            "[1500]\ttraining's rmse: 0.212027\tvalid_1's rmse: 0.261323\n",
            "[1600]\ttraining's rmse: 0.209199\tvalid_1's rmse: 0.260743\n",
            "[1700]\ttraining's rmse: 0.206506\tvalid_1's rmse: 0.260236\n",
            "[1800]\ttraining's rmse: 0.203934\tvalid_1's rmse: 0.259772\n",
            "[1900]\ttraining's rmse: 0.201461\tvalid_1's rmse: 0.259367\n",
            "[2000]\ttraining's rmse: 0.199092\tvalid_1's rmse: 0.259034\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\ttraining's rmse: 0.199092\tvalid_1's rmse: 0.259034\n",
            "fold n°4\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\ttraining's rmse: 0.286607\tvalid_1's rmse: 0.289646\n",
            "[200]\ttraining's rmse: 0.276038\tvalid_1's rmse: 0.283395\n",
            "[300]\ttraining's rmse: 0.267359\tvalid_1's rmse: 0.278786\n",
            "[400]\ttraining's rmse: 0.260006\tvalid_1's rmse: 0.275202\n",
            "[500]\ttraining's rmse: 0.253476\tvalid_1's rmse: 0.272335\n",
            "[600]\ttraining's rmse: 0.247689\tvalid_1's rmse: 0.270009\n",
            "[700]\ttraining's rmse: 0.242457\tvalid_1's rmse: 0.268044\n",
            "[800]\ttraining's rmse: 0.237672\tvalid_1's rmse: 0.266333\n",
            "[900]\ttraining's rmse: 0.233265\tvalid_1's rmse: 0.264961\n",
            "[1000]\ttraining's rmse: 0.229166\tvalid_1's rmse: 0.263772\n",
            "[1100]\ttraining's rmse: 0.225392\tvalid_1's rmse: 0.262726\n",
            "[1200]\ttraining's rmse: 0.221843\tvalid_1's rmse: 0.261781\n",
            "[1300]\ttraining's rmse: 0.2185\tvalid_1's rmse: 0.260983\n",
            "[1400]\ttraining's rmse: 0.215339\tvalid_1's rmse: 0.260294\n",
            "[1500]\ttraining's rmse: 0.212335\tvalid_1's rmse: 0.259648\n",
            "[1600]\ttraining's rmse: 0.209506\tvalid_1's rmse: 0.259088\n",
            "[1700]\ttraining's rmse: 0.206801\tvalid_1's rmse: 0.258584\n",
            "[1800]\ttraining's rmse: 0.204208\tvalid_1's rmse: 0.258134\n",
            "[1900]\ttraining's rmse: 0.201727\tvalid_1's rmse: 0.257734\n",
            "[2000]\ttraining's rmse: 0.199359\tvalid_1's rmse: 0.257377\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\ttraining's rmse: 0.199359\tvalid_1's rmse: 0.257377\n",
            "fold n°5\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\ttraining's rmse: 0.286548\tvalid_1's rmse: 0.289868\n",
            "[200]\ttraining's rmse: 0.275907\tvalid_1's rmse: 0.283604\n",
            "[300]\ttraining's rmse: 0.267208\tvalid_1's rmse: 0.279027\n",
            "[400]\ttraining's rmse: 0.259748\tvalid_1's rmse: 0.27552\n",
            "[500]\ttraining's rmse: 0.253237\tvalid_1's rmse: 0.272738\n",
            "[600]\ttraining's rmse: 0.247421\tvalid_1's rmse: 0.270484\n",
            "[700]\ttraining's rmse: 0.242176\tvalid_1's rmse: 0.268616\n",
            "[800]\ttraining's rmse: 0.237397\tvalid_1's rmse: 0.267024\n",
            "[900]\ttraining's rmse: 0.232959\tvalid_1's rmse: 0.265629\n",
            "[1000]\ttraining's rmse: 0.228843\tvalid_1's rmse: 0.264458\n",
            "[1100]\ttraining's rmse: 0.225036\tvalid_1's rmse: 0.263438\n",
            "[1200]\ttraining's rmse: 0.221505\tvalid_1's rmse: 0.262548\n",
            "[1300]\ttraining's rmse: 0.218143\tvalid_1's rmse: 0.261743\n",
            "[1400]\ttraining's rmse: 0.214995\tvalid_1's rmse: 0.261066\n",
            "[1500]\ttraining's rmse: 0.21199\tvalid_1's rmse: 0.26044\n",
            "[1600]\ttraining's rmse: 0.209129\tvalid_1's rmse: 0.259888\n",
            "[1700]\ttraining's rmse: 0.206402\tvalid_1's rmse: 0.259392\n",
            "[1800]\ttraining's rmse: 0.203837\tvalid_1's rmse: 0.258949\n",
            "[1900]\ttraining's rmse: 0.201371\tvalid_1's rmse: 0.258607\n",
            "[2000]\ttraining's rmse: 0.199012\tvalid_1's rmse: 0.258277\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\ttraining's rmse: 0.199012\tvalid_1's rmse: 0.258277\n",
            "fold n°6\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\ttraining's rmse: 0.286867\tvalid_1's rmse: 0.287875\n",
            "[200]\ttraining's rmse: 0.276196\tvalid_1's rmse: 0.281831\n",
            "[300]\ttraining's rmse: 0.267518\tvalid_1's rmse: 0.277471\n",
            "[400]\ttraining's rmse: 0.260139\tvalid_1's rmse: 0.274023\n",
            "[500]\ttraining's rmse: 0.253615\tvalid_1's rmse: 0.271207\n",
            "[600]\ttraining's rmse: 0.247802\tvalid_1's rmse: 0.268956\n",
            "[700]\ttraining's rmse: 0.242573\tvalid_1's rmse: 0.267066\n",
            "[800]\ttraining's rmse: 0.23782\tvalid_1's rmse: 0.265485\n",
            "[900]\ttraining's rmse: 0.233399\tvalid_1's rmse: 0.264079\n",
            "[1000]\ttraining's rmse: 0.229289\tvalid_1's rmse: 0.262933\n",
            "[1100]\ttraining's rmse: 0.225479\tvalid_1's rmse: 0.26192\n",
            "[1200]\ttraining's rmse: 0.221908\tvalid_1's rmse: 0.260981\n",
            "[1300]\ttraining's rmse: 0.218574\tvalid_1's rmse: 0.260193\n",
            "[1400]\ttraining's rmse: 0.215425\tvalid_1's rmse: 0.259488\n",
            "[1500]\ttraining's rmse: 0.21245\tvalid_1's rmse: 0.25888\n",
            "[1600]\ttraining's rmse: 0.209605\tvalid_1's rmse: 0.258354\n",
            "[1700]\ttraining's rmse: 0.206939\tvalid_1's rmse: 0.257892\n",
            "[1800]\ttraining's rmse: 0.204333\tvalid_1's rmse: 0.257459\n",
            "[1900]\ttraining's rmse: 0.201882\tvalid_1's rmse: 0.257087\n",
            "[2000]\ttraining's rmse: 0.199515\tvalid_1's rmse: 0.256744\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\ttraining's rmse: 0.199515\tvalid_1's rmse: 0.256744\n",
            "fold n°7\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\ttraining's rmse: 0.285743\tvalid_1's rmse: 0.292482\n",
            "[200]\ttraining's rmse: 0.275263\tvalid_1's rmse: 0.286337\n",
            "[300]\ttraining's rmse: 0.26661\tvalid_1's rmse: 0.281805\n",
            "[400]\ttraining's rmse: 0.25924\tvalid_1's rmse: 0.278226\n",
            "[500]\ttraining's rmse: 0.252819\tvalid_1's rmse: 0.275394\n",
            "[600]\ttraining's rmse: 0.24707\tvalid_1's rmse: 0.272979\n",
            "[700]\ttraining's rmse: 0.241865\tvalid_1's rmse: 0.270958\n",
            "[800]\ttraining's rmse: 0.237074\tvalid_1's rmse: 0.269245\n",
            "[900]\ttraining's rmse: 0.232706\tvalid_1's rmse: 0.267831\n",
            "[1000]\ttraining's rmse: 0.228648\tvalid_1's rmse: 0.266562\n",
            "[1100]\ttraining's rmse: 0.224818\tvalid_1's rmse: 0.265418\n",
            "[1200]\ttraining's rmse: 0.221288\tvalid_1's rmse: 0.264487\n",
            "[1300]\ttraining's rmse: 0.217939\tvalid_1's rmse: 0.263635\n",
            "[1400]\ttraining's rmse: 0.214827\tvalid_1's rmse: 0.262894\n",
            "[1500]\ttraining's rmse: 0.21185\tvalid_1's rmse: 0.262179\n",
            "[1600]\ttraining's rmse: 0.209056\tvalid_1's rmse: 0.261599\n",
            "[1700]\ttraining's rmse: 0.206351\tvalid_1's rmse: 0.261079\n",
            "[1800]\ttraining's rmse: 0.203777\tvalid_1's rmse: 0.26064\n",
            "[1900]\ttraining's rmse: 0.201349\tvalid_1's rmse: 0.260234\n",
            "[2000]\ttraining's rmse: 0.199\tvalid_1's rmse: 0.259868\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\ttraining's rmse: 0.199\tvalid_1's rmse: 0.259868\n",
            "fold n°8\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\ttraining's rmse: 0.286398\tvalid_1's rmse: 0.29049\n",
            "[200]\ttraining's rmse: 0.275908\tvalid_1's rmse: 0.284282\n",
            "[300]\ttraining's rmse: 0.26719\tvalid_1's rmse: 0.279612\n",
            "[400]\ttraining's rmse: 0.259822\tvalid_1's rmse: 0.276025\n",
            "[500]\ttraining's rmse: 0.253371\tvalid_1's rmse: 0.273168\n",
            "[600]\ttraining's rmse: 0.247566\tvalid_1's rmse: 0.27079\n",
            "[700]\ttraining's rmse: 0.242329\tvalid_1's rmse: 0.268793\n",
            "[800]\ttraining's rmse: 0.237551\tvalid_1's rmse: 0.267135\n",
            "[900]\ttraining's rmse: 0.233135\tvalid_1's rmse: 0.265656\n",
            "[1000]\ttraining's rmse: 0.229056\tvalid_1's rmse: 0.264461\n",
            "[1100]\ttraining's rmse: 0.225226\tvalid_1's rmse: 0.263391\n",
            "[1200]\ttraining's rmse: 0.221643\tvalid_1's rmse: 0.262433\n",
            "[1300]\ttraining's rmse: 0.218306\tvalid_1's rmse: 0.261598\n",
            "[1400]\ttraining's rmse: 0.215143\tvalid_1's rmse: 0.260871\n",
            "[1500]\ttraining's rmse: 0.212161\tvalid_1's rmse: 0.260231\n",
            "[1600]\ttraining's rmse: 0.209305\tvalid_1's rmse: 0.259661\n",
            "[1700]\ttraining's rmse: 0.206588\tvalid_1's rmse: 0.259149\n",
            "[1800]\ttraining's rmse: 0.203999\tvalid_1's rmse: 0.258696\n",
            "[1900]\ttraining's rmse: 0.201498\tvalid_1's rmse: 0.258308\n",
            "[2000]\ttraining's rmse: 0.199124\tvalid_1's rmse: 0.257948\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\ttraining's rmse: 0.199124\tvalid_1's rmse: 0.257948\n",
            "fold n°9\n",
            "Training until validation scores don't improve for 100 rounds.\n",
            "[100]\ttraining's rmse: 0.285474\tvalid_1's rmse: 0.294036\n",
            "[200]\ttraining's rmse: 0.274928\tvalid_1's rmse: 0.287864\n",
            "[300]\ttraining's rmse: 0.266272\tvalid_1's rmse: 0.283263\n",
            "[400]\ttraining's rmse: 0.258842\tvalid_1's rmse: 0.279683\n",
            "[500]\ttraining's rmse: 0.252389\tvalid_1's rmse: 0.276866\n",
            "[600]\ttraining's rmse: 0.246614\tvalid_1's rmse: 0.274494\n",
            "[700]\ttraining's rmse: 0.241403\tvalid_1's rmse: 0.272477\n",
            "[800]\ttraining's rmse: 0.23664\tvalid_1's rmse: 0.270793\n",
            "[900]\ttraining's rmse: 0.232268\tvalid_1's rmse: 0.269356\n",
            "[1000]\ttraining's rmse: 0.228199\tvalid_1's rmse: 0.268126\n",
            "[1100]\ttraining's rmse: 0.224387\tvalid_1's rmse: 0.267051\n",
            "[1200]\ttraining's rmse: 0.220861\tvalid_1's rmse: 0.266074\n",
            "[1300]\ttraining's rmse: 0.217523\tvalid_1's rmse: 0.265253\n",
            "[1400]\ttraining's rmse: 0.214387\tvalid_1's rmse: 0.264523\n",
            "[1500]\ttraining's rmse: 0.211412\tvalid_1's rmse: 0.263885\n",
            "[1600]\ttraining's rmse: 0.208592\tvalid_1's rmse: 0.263285\n",
            "[1700]\ttraining's rmse: 0.205882\tvalid_1's rmse: 0.262727\n",
            "[1800]\ttraining's rmse: 0.203299\tvalid_1's rmse: 0.262293\n",
            "[1900]\ttraining's rmse: 0.200847\tvalid_1's rmse: 0.261874\n",
            "[2000]\ttraining's rmse: 0.198489\tvalid_1's rmse: 0.261498\n",
            "Did not meet early stopping. Best iteration is:\n",
            "[2000]\ttraining's rmse: 0.198489\tvalid_1's rmse: 0.261498\n",
            "CV score: 0.25887 \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "20tEOLTA5-Ip",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "35f98848-362f-409e-f675-7e8ec9c59f88"
      },
      "source": [
        "# ranking all feature by avg importance score from Kfold, select top100\n",
        "all_features = feature_importance_df[[\"feature\", \"importance\"]].groupby(\"feature\").mean().sort_values(by=\"importance\", ascending=False)\n",
        "all_features.reset_index(inplace=True)\n",
        "important_features = list(all_features[0:100]['feature'])\n",
        "all_features[0:50]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>feature</th>\n",
              "      <th>importance</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>var_6</td>\n",
              "      <td>2301.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>var_146</td>\n",
              "      <td>2241.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>var_139</td>\n",
              "      <td>2217.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>var_76</td>\n",
              "      <td>2195.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>var_12</td>\n",
              "      <td>2193.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>var_22</td>\n",
              "      <td>2156.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>var_81</td>\n",
              "      <td>2147.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>var_110</td>\n",
              "      <td>2119.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>var_174</td>\n",
              "      <td>2097.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>var_21</td>\n",
              "      <td>2034.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>var_53</td>\n",
              "      <td>2031.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>var_99</td>\n",
              "      <td>2015.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>var_34</td>\n",
              "      <td>2006.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>var_190</td>\n",
              "      <td>1979.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>var_166</td>\n",
              "      <td>1969.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>var_165</td>\n",
              "      <td>1968.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>var_148</td>\n",
              "      <td>1962.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>var_133</td>\n",
              "      <td>1945.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>var_13</td>\n",
              "      <td>1929.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>var_26</td>\n",
              "      <td>1906.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>var_1</td>\n",
              "      <td>1888.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>var_2</td>\n",
              "      <td>1867.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>var_198</td>\n",
              "      <td>1856.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>var_80</td>\n",
              "      <td>1850.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>var_115</td>\n",
              "      <td>1820.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>var_78</td>\n",
              "      <td>1820.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>var_169</td>\n",
              "      <td>1787.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>var_40</td>\n",
              "      <td>1784.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>var_149</td>\n",
              "      <td>1759.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>var_170</td>\n",
              "      <td>1751.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>var_94</td>\n",
              "      <td>1725.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>var_33</td>\n",
              "      <td>1722.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>var_92</td>\n",
              "      <td>1709.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>var_0</td>\n",
              "      <td>1703.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>var_154</td>\n",
              "      <td>1697.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>var_179</td>\n",
              "      <td>1684.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>var_184</td>\n",
              "      <td>1679.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>var_109</td>\n",
              "      <td>1670.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>var_191</td>\n",
              "      <td>1662.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>var_18</td>\n",
              "      <td>1640.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>var_67</td>\n",
              "      <td>1638.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>var_164</td>\n",
              "      <td>1603.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>var_108</td>\n",
              "      <td>1592.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>var_118</td>\n",
              "      <td>1580.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>var_173</td>\n",
              "      <td>1563.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>var_9</td>\n",
              "      <td>1562.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>var_192</td>\n",
              "      <td>1562.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>var_122</td>\n",
              "      <td>1552.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>var_44</td>\n",
              "      <td>1541.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>var_121</td>\n",
              "      <td>1541.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    feature  importance\n",
              "0     var_6      2301.4\n",
              "1   var_146      2241.7\n",
              "2   var_139      2217.2\n",
              "3    var_76      2195.7\n",
              "4    var_12      2193.8\n",
              "5    var_22      2156.4\n",
              "6    var_81      2147.4\n",
              "7   var_110      2119.4\n",
              "8   var_174      2097.0\n",
              "9    var_21      2034.5\n",
              "10   var_53      2031.0\n",
              "11   var_99      2015.5\n",
              "12   var_34      2006.2\n",
              "13  var_190      1979.6\n",
              "14  var_166      1969.2\n",
              "15  var_165      1968.7\n",
              "16  var_148      1962.0\n",
              "17  var_133      1945.0\n",
              "18   var_13      1929.1\n",
              "19   var_26      1906.9\n",
              "20    var_1      1888.3\n",
              "21    var_2      1867.4\n",
              "22  var_198      1856.5\n",
              "23   var_80      1850.0\n",
              "24  var_115      1820.2\n",
              "25   var_78      1820.0\n",
              "26  var_169      1787.8\n",
              "27   var_40      1784.3\n",
              "28  var_149      1759.6\n",
              "29  var_170      1751.5\n",
              "30   var_94      1725.0\n",
              "31   var_33      1722.0\n",
              "32   var_92      1709.7\n",
              "33    var_0      1703.4\n",
              "34  var_154      1697.3\n",
              "35  var_179      1684.1\n",
              "36  var_184      1679.8\n",
              "37  var_109      1670.9\n",
              "38  var_191      1662.0\n",
              "39   var_18      1640.9\n",
              "40   var_67      1638.8\n",
              "41  var_164      1603.3\n",
              "42  var_108      1592.8\n",
              "43  var_118      1580.0\n",
              "44  var_173      1563.3\n",
              "45    var_9      1562.4\n",
              "46  var_192      1562.2\n",
              "47  var_122      1552.3\n",
              "48   var_44      1541.8\n",
              "49  var_121      1541.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qxOnN9ZXiVP0",
        "colab_type": "text"
      },
      "source": [
        "## Reference: Santander Customer Prediction Fake + LGBM notebook\n",
        "\n",
        "Based on research this is the model that gave us the best result."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qycKcyXIgaaZ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "unique_samples = []\n",
        "unique_count = np.zeros_like(test_X)\n",
        "for feature in range(test_X.shape[1]):\n",
        "    _, index_, count_ = np.unique(test_X[:, feature], return_index=True, return_counts=True)\n",
        "    unique_count[index_[count_ == 1], feature] += 1\n",
        "\n",
        "real_sample_index = np.argwhere(np.sum(unique_count, axis=1) > 0)[:, 0]\n",
        "synthetic_sample_index = np.argwhere(np.sum(unique_count, axis=1) == 0)[:, 0]\n",
        "\n",
        "test_X_real = test_X[real_sample_index].copy()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZsvPhwYZgaWQ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "print('There are ' + str(len(real_sample_index)) + ' real data samples in test set')\n",
        "print('There are ' + str(len(synthetic_sample_index)) + ' synthetic data samples in test set')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fbR0u5kzgaSF",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "generator_for_each_synthetic_sample = []\n",
        "for cur_sample_index in synthetic_sample_index[:20000]:\n",
        "    cur_synthetic_sample = test_X[cur_sample_index]\n",
        "    potential_generators = test_X_real == cur_synthetic_sample\n",
        "\n",
        "    features_mask = np.sum(potential_generators, axis=0) == 1\n",
        "    verified_generators_mask = np.any(potential_generators[:, features_mask], axis=1)\n",
        "    verified_generators_for_sample = real_sample_index[np.argwhere(verified_generators_mask)[:, 0]]\n",
        "    generator_for_each_synthetic_sample.append(set(verified_generators_for_sample))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2iyuCSnggaOG",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "gen = generator_for_each_synthetic_sample[0]\n",
        "for x in generator_for_each_synthetic_sample:\n",
        "    if gen.intersection(x):\n",
        "        gen = gen.union(x)\n",
        "\n",
        "LB = generator_for_each_synthetic_sample[1]\n",
        "for x in generator_for_each_synthetic_sample:\n",
        "    if LB.intersection(x):\n",
        "        LB = LB.union(x)\n",
        "\n",
        "LB = list(LB)\n",
        "gen = list(gen)\n",
        "full = np.concatenate([train_X, np.concatenate([test_X[LB], test_X[gen]])])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-Qg0RvkEgk8t",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "print('There are ' + str(len(LB)) + ' data samples for public score in real data set')\n",
        "print('There are ' + str(len(gen)) + ' data samples for private score in real data set')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5naeKq1jgk4T",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "full = pd.DataFrame(full)\n",
        "full.columns = train_X_column_name\n",
        "train_X = pd.DataFrame(train_X)\n",
        "train_X.columns = train_X_column_name\n",
        "test_X = pd.DataFrame(test_X)\n",
        "test_X .columns = train_X_column_name\n",
        "\n",
        "for feat in ['var_' + str(x) for x in range(200)]:\n",
        "    count_values = full.groupby(feat)[feat].count()\n",
        "    train_X['new_' + feat] = count_values.loc[train_X[feat]].values\n",
        "    test_X['new_' + feat] = count_values.loc[test_X[feat]].values"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "43gqdBnqgk0P",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "param = {\n",
        "    'num_leaves': 8,\n",
        "    'min_data_in_leaf': 17,\n",
        "    'learning_rate': 0.01,\n",
        "    'min_sum_hessian_in_leaf': 9.67,\n",
        "    'bagging_fraction': 0.8329,\n",
        "    'bagging_freq': 2,\n",
        "    'feature_fraction': 1,\n",
        "    'lambda_l1': 0.6426,\n",
        "    'lambda_l2': 0.3067,\n",
        "    'min_gain_to_split': 0.02832,\n",
        "    'max_depth': -1,\n",
        "    'seed': seed,\n",
        "    'feature_fraction_seed': seed,\n",
        "    'bagging_seed': seed,\n",
        "    'drop_seed': seed,\n",
        "    'data_random_seed': seed,\n",
        "    'objective': 'binary',\n",
        "    'boosting_type': 'gbdt',\n",
        "    'verbosity': -1,\n",
        "    'metric': 'auc',\n",
        "    'is_unbalance': True,\n",
        "    'save_binary': True,\n",
        "    'boost_from_average': 'false',\n",
        "    'num_threads': 8\n",
        "}"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YkxaulaphC4q",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "iterations = 110\n",
        "test_hat = np.zeros([200000, 200])\n",
        "i = 0\n",
        "for feature in ['var_' + str(x) for x in range(200)]:  # loop over all features\n",
        "    # print(feature)\n",
        "    feat_choices = [feature, 'new_' + feature]\n",
        "    lgb_train = lgb.Dataset(train_X[feat_choices], train_y)\n",
        "    gbm = lgb.train(param, lgb_train, iterations, verbose_eval=-1)\n",
        "    test_hat[:, i] = gbm.predict(test_X[feat_choices], num_iteration=gbm.best_iteration)\n",
        "    i += 1\n",
        "\n",
        "sub_preds = test_hat.sum(axis=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iBLlrZ98hCtI",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6LS3D9rPe8b1",
        "colab_type": "text"
      },
      "source": [
        "# Submission"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TyqUQzPG4M99",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "test_sub = test.drop(columns=['ID_code', 'target'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SZQy3dJR4M-A",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "sub = pd.DataFrame()\n",
        "sub['ID_code'] = test['ID_code']\n",
        "#sub['target'] = model_LGBM_SM_150.predict(test_sub).astype('int64')\n",
        "sub['target'] = sub_preds\n",
        "sub.to_csv('submission_model_lgb.csv', index=False)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Qy4q4Sz-LG-F",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}